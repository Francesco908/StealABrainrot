local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/master/source.lua", true))()

-- Configurazione iniziale
local WaterHub = Luna:CreateWindow({
    Name = "WATER HUB",
    Themeable = {
        Info = "Theme: Aqua"
    }
})

-- Tabs principali
local MainTab = WaterHub:CreateTab("Main", "rbxassetid://4483345998")
local ESPTab = WaterHub:CreateTab("ESP", "rbxassetid://4483345998")
local ServerTab = WaterHub:CreateTab("Server", "rbxassetid://4483345998")
local MiscTab = WaterHub:CreateTab("Misc", "rbxassetid://4483345998")

-- Funzioni principali
local InfiniteJumpEnabled = false
local GodModeEnabled = false

-- Infinite Jump
game:GetService("UserInputService").JumpRequest:Connect(function()
    if InfiniteJumpEnabled then
        game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end)

-- God Mode
spawn(function()
    while wait() do
        if GodModeEnabled and game.Players.LocalPlayer.Character then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.Health = 100
                humanoid.MaxHealth = 100
            end
        end
    end
end)

-- Teleport Helper GUI
local teleportFrame = Instance.new("Frame")
teleportFrame.Size = UDim2.new(0, 100, 0, 60)
teleportFrame.Position = UDim2.new(0.5, -50, 1, -100)
teleportFrame.BackgroundTransparency = 0.7
teleportFrame.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
teleportFrame.Visible = false
teleportFrame.Parent = game.CoreGui

local upButton = Instance.new("TextButton")
upButton.Size = UDim2.new(1, 0, 0.5, 0)
upButton.Text = "UP (+165)"
upButton.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
upButton.Parent = teleportFrame

local downButton = Instance.new("TextButton")
downButton.Size = UDim2.new(1, 0, 0.5, 0)
downButton.Position = UDim2.new(0, 0, 0.5, 0)
downButton.Text = "DOWN (-50)"
downButton.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
downButton.Parent = teleportFrame

upButton.MouseButton1Click:Connect(function()
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame * CFrame.new(0, 165, 0)
    end
end)

downButton.MouseButton1Click:Connect(function()
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame * CFrame.new(0, -50, 0)
    end
end)

-- Elementi UI per Main Tab
MainTab:CreateToggle({
    Name = "Infinite Jump",
    Callback = function(Value)
        InfiniteJumpEnabled = Value
    end
})

MainTab:CreateToggle({
    Name = "God Mode",
    Callback = function(Value)
        GodModeEnabled = Value
    end
})

MainTab:CreateToggle({
    Name = "Teleport Helper",
    Callback = function(Value)
        teleportFrame.Visible = Value
    end
})

-- ESP avanzato
local ESPEnabled = false
local ESPObjects = {}

local function createESP(player)
    local character = player.Character
    if not character then return end
    
    local Box = Drawing.new("Quad")
    Box.Visible = false
    Box.Color = Color3.new(0, 1, 1)
    Box.Thickness = 2
    Box.Filled = false
    
    local Tracer = Drawing.new("Line")
    Tracer.Visible = false
    Tracer.Color = Color3.new(0, 1, 1)
    Tracer.Thickness = 2
    
    ESPObjects[player] = {
        Box = Box,
        Tracer = Tracer,
        Player = player
    }
end

local function updateESP()
    for player, esp in pairs(ESPObjects) do
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local rootPos, rootVis = workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)
            
            if rootVis then
                local head = player.Character:FindFirstChild("Head")
                local size = head and (head.Position - rootPart.Position).Magnitude * 1.5 or 5
                
                -- Aggiorna Box ESP
                local corners = {
                    Vector2.new(rootPos.X - size, rootPos.Y - size),
                    Vector2.new(rootPos.X + size, rootPos.Y - size),
                    Vector2.new(rootPos.X + size, rootPos.Y + size),
                    Vector2.new(rootPos.X - size, rootPos.Y + size)
                }
                
                esp.Box.PointA = corners[1]
                esp.Box.PointB = corners[2]
                esp.Box.PointC = corners[3]
                esp.Box.PointD = corners[4]
                esp.Box.Visible = ESPEnabled
                
                -- Aggiorna Tracer
                esp.Tracer.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X/2, workspace.CurrentCamera.ViewportSize.Y)
                esp.Tracer.To = Vector2.new(rootPos.X, rootPos.Y)
                esp.Tracer.Visible = ESPEnabled
            else
                esp.Box.Visible = false
                esp.Tracer.Visible = false
            end
        else
            esp.Box.Visible = false
            esp.Tracer.Visible = false
        end
    end
end

-- Gestione player ESP
game.Players.PlayerAdded:Connect(function(player)
    createESP(player)
end)

game.Players.PlayerRemoving:Connect(function(player)
    if ESPObjects[player] then
        ESPObjects[player].Box:Remove()
        ESPObjects[player].Tracer:Remove()
        ESPObjects[player] = nil
    end
end)

for _, player in ipairs(game.Players:GetPlayers()) do
    if player ~= game.Players.LocalPlayer then
        createESP(player)
    end
end

runService = game:GetService("RunService")
runService.RenderStepped:Connect(updateESP)

-- Elementi UI per ESP Tab
ESPTab:CreateToggle({
    Name = "Player ESP",
    Callback = function(Value)
        ESPEnabled = Value
    end
})

-- Funzioni Server
ServerTab:CreateButton({
    Name = "Rejoin Server",
    Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end
})

ServerTab:CreateButton({
    Name = "Leave Server",
    Callback = function()
        game.Players.LocalPlayer:Kick("Water Hub: Left server")
    end
})

ServerTab:CreateButton({
    Name = "Server Hop",
    Callback = function()
        local servers = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
        for _, server in ipairs(servers.data) do
            if server.id ~= game.JobId then
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, server.id)
                break
            end
        end
    end
})

-- Misc Tab
MiscTab:CreateLabel("Coming Soon...")

-- UI Design migliorato
Luna:ApplyTheme("Aurora")
Luna:SetWatermark("WATER HUB v1.0")
Luna:Notify("Water Hub", "Successfully loaded!", 5)

-- Inizializzazione
teleportFrame.Visible = false
