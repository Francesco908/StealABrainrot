-- Installa Rayfield: https://github.com/shlexware/Rayfield
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

-- Variabile per tenere traccia dei Brainrot rubati
local BrainrotRubati = 0

-- Finestra principale
local FinestraPrincipale = Rayfield:CreateWindow({
	Name = "BRAINROT HEIST",
	LoadingTitle = "Caricamento...",
	LoadingSubtitle = "by il tuo username",
	ConfigurationSaving = {
		Enabled = false
	},
	KeySystem = false
})

-- Sezione "Instant Steal" nella finestra
local SezioneSteal = FinestraPrincipale:CreateSection("Instant Steal")

-- Etichetta contatore
local Contatore = FinestraPrincipale:CreateLabel("Brainrot Rubati: 0")

-- Variabile per controllare se il mouse √® premuto
local MousePremuto = false

-- Pulsante per rubare
local PulsanteRubare = FinestraPrincipale:CreateButton({
	Name = "üîì Tieni premuto per rubare",
	Callback = function()
		-- Questa funzione viene chiamata quando il pulsante viene cliccato
		RubaBrainrot()
	end,
})

-- Funzione per rubare
function RubaBrainrot()
	BrainrotRubati = BrainrotRubati + 1
	Contatore:Set("Brainrot Rubati: "..BrainrotRubati)
	
	-- Messaggio in chat per feedback
	game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
		Text = "Brainrot rubato! Totale: "..BrainrotRubati;
		Color = Color3.fromRGB(0, 255, 0);
		Font = Enum.Font.GothamBold;
		FontSize = Enum.FontSize.Size18;
	})
end

-- Sistema per il click continuo (hold)
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Connessione per rilevare quando il mouse viene premuto
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 and not gameProcessed then
		MousePremuto = true
		
		-- Avvia il loop per rubare continuamente
		spawn(function()
			while MousePremuto do
				task.wait(0.1) -- Ruba ogni 0.1 secondi
				RubaBrainrot()
			end
		end)
	end
end)

-- Connessione per rilevare quando il mouse viene rilasciato
UserInputService.InputEnded:Connect(function(input, gameProcessed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		MousePremuto = false
	end
end)

-- Sezione Admin Commands
local SezioneAdmin = FinestraPrincipale:CreateSection("Admin Commands")

-- Pulsante per resettare il contatore
FinestraPrincipale:CreateButton({
	Name = "üîÑ Reset Contatore",
	Callback = function()
		BrainrotRubati = 0
		Contatore:Set("Brainrot Rubati: 0")
		game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
			Text = "Contatore resettato!";
			Color = Color3.fromRGB(255, 255, 0);
			Font = Enum.Font.GothamBold;
			FontSize = Enum.FontSize.Size18;
		})
	end,
})

-- Slider per impostare il contatore manualmente
FinestraPrincipale:CreateSlider({
	Name = "Imposta Brainrot",
	Range = {0, 10000},
	Increment = 1,
	Suffix = "Brainrot",
	CurrentValue = 0,
	Flag = "BrainrotSlider",
	Callback = function(Value)
		BrainrotRubati = Value
		Contatore:Set("Brainrot Rubati: "..BrainrotRubati)
	end,
})

-- Sezione Settings
local SezioneSettings = FinestraPrincipale:CreateSection("Settings")

-- Toggle per auto-steal
local AutoSteal = false
FinestraPrincipale:CreateToggle({
	Name = "Auto Steal",
	CurrentValue = false,
	Flag = "AutoStealToggle",
	Callback = function(Value)
		AutoSteal = Value
		if AutoSteal then
			spawn(function()
				while AutoSteal do
					task.wait(0.5) -- Auto-steal ogni 0.5 secondi
					RubaBrainrot()
				end
			end)
		end
	end,
})

-- Pulsante per chiudere la GUI
FinestraPrincipale:CreateButton({
	Name = "‚ùå Chiudi GUI",
	Callback = function()
		Rayfield:Destroy()
	end,
})

print("Brainrot Heist GUI caricata con successo!")
