local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "🔧 Mobile Admin Tools Pro",
    LoadingTitle = "Loading enhanced tools...",
    LoadingSubtitle = "Ultra Optimized Free Edition",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MobileToolsProConfig",
        FileName = "UltraOptimizedConfig"
    }
})

-- Servizi e variabili
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ProximityPromptService = game:GetService("ProximityPromptService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")
local Player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Variabili
local Connections = {}
local ESPCache = {}
local SpawnPosition = nil
local AirJumpEnabled = false
local SpeedBoostActive = false
local SpeedBoostButton = nil
local NoClipEnabled = false
local StealHelperEnabled = false
local StealGUI = nil
local AntiAFKEnabled = false
local AutoCollectEnabled = false
local FastStealEnabled = false
local FastStealConnection = nil
local KillAuraActive = false
local KillAuraConnection = nil
local OriginalWalkSpeed = 16
local OriginalJumpPower = 50
local BasePosition = nil
local BaseTeleportActive = false
local BaseTeleportParts = {}
local TeleportHeight = 165
local TeleportSpeed = 35

-- Funzioni di utilità BYPASSATE
local function cleanupConnection(name)
    if Connections[name] then
        Connections[name]:Disconnect()
        Connections[name] = nil
    end
end

local function notify(title, content, duration)
    Rayfield:Notify({
        Title = title,
        Content = content,
        Duration = duration or 2.5,
        Image = 13014546637,
    })
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(radius or 0.1, 0)
    corner.Parent = parent
    return corner
end

local function makeDraggable(gui)
    local dragging, dragInput, dragStart, startPos
    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            gui.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Memorizza posizione spawn BYPASSATA
local function storeSpawnPosition()
    local character = Player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        SpawnPosition = character.HumanoidRootPart.Position
    end
end

Player.CharacterAdded:Connect(function()
    task.wait(1.5)
    storeSpawnPosition()
end)

if Player.Character then
    storeSpawnPosition()
end

-- ======= SISTEMA TELEPORT BASE FIXATO =======
local function startBaseTeleport()
    if not BasePosition then
        notify("Error", "Set base position first!", 3)
        return
    end

    local character = Player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    BaseTeleportActive = true
    notify("Base Teleport", "Teleporting to base...", 3)
    
    local root = character.HumanoidRootPart
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    -- Salva stato originale
    local originalWalkSpeed = humanoid.WalkSpeed
    local originalJumpPower = humanoid.JumpPower
    
    -- Disabilita altre movimenti
    humanoid.WalkSpeed = 0
    humanoid.JumpPower = 0
    
    -- 1. Teletrasporta in alto
    local startCFrame = root.CFrame
    local highPosition = Vector3.new(startCFrame.X, TeleportHeight, startCFrame.Z)
    root.CFrame = CFrame.new(highPosition)
    task.wait(0.1)
    
    -- 2. Crea parti visive per indicare la direzione
    for _, part in ipairs(BaseTeleportParts) do
        if part then part:Destroy() end
    end
    BaseTeleportParts = {}
    
    local directionPart = Instance.new("Part")
    directionPart.Size = Vector3.new(3, 3, 3)
    directionPart.Shape = Enum.PartType.Ball
    directionPart.Material = EnumMaterial.Neon
    directionPart.Color = Color3.fromRGB(0, 255, 0)
    directionPart.CFrame = CFrame.new(BasePosition)
    directionPart.Anchored = true
    directionPart.CanCollide = false
    directionPart.Transparency = 0.3
    directionPart.Parent = workspace
    table.insert(BaseTeleportParts, directionPart)
    
    -- 3. Calcola direzione
    local direction = (Vector3.new(BasePosition.X, TeleportHeight, BasePosition.Z) - root.Position).Unit
    local baseDistance = (Vector3.new(BasePosition.X, TeleportHeight, BasePosition.Z) - root.Position).Magnitude
    
    -- 4. Crea controlli di volo
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = direction * TeleportSpeed
    bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
    bodyVelocity.P = 1250
    bodyVelocity.Parent = root
    
    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(10000, 10000, 10000)
    bodyGyro.P = 1500
    bodyGyro.CFrame = CFrame.new(root.Position, root.Position + direction)
    bodyGyro.Parent = root
    
    -- 5. Animazione di volo
    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
    
    -- 6. Attendi arrivo all'area sopra la base
    local startTime = os.time()
    while BaseTeleportActive and (Vector3.new(root.Position.X, 0, root.Position.Z) - Vector3.new(BasePosition.X, 0, BasePosition.Z)).Magnitude > 10 do
        if os.time() - startTime > 15 then break end -- Timeout dopo 15 secondi
        
        -- Aggiorna direzione
        direction = (Vector3.new(BasePosition.X, TeleportHeight, BasePosition.Z) - root.Position).Unit
        bodyVelocity.Velocity = direction * TeleportSpeed
        bodyGyro.CFrame = CFrame.new(root.Position, root.Position + direction)
        
        -- Aggiorna parte visiva
        directionPart.CFrame = CFrame.new(BasePosition)
        
        task.wait(0.1)
    end
    
    -- 7. Disabilita volo orizzontale
    bodyVelocity:Destroy()
    bodyGyro:Destroy()
    
    -- 8. Scendi verticalmente alla base
    local descendVelocity = Instance.new("BodyVelocity")
    descendVelocity.Velocity = Vector3.new(0, -25, 0)
    descendVelocity.MaxForce = Vector3.new(0, 10000, 0)
    descendVelocity.P = 1000
    descendVelocity.Parent = root
    
    -- Aspetta che raggiunga l'altezza della base
    while BaseTeleportActive and root.Position.Y > BasePosition.Y + 5 do
        task.wait(0.1)
    end
    
    descendVelocity:Destroy()
    
    -- 9. Posiziona esattamente sulla base
    root.CFrame = CFrame.new(BasePosition)
    
    -- 10. Ripristina stato originale
    humanoid.WalkSpeed = originalWalkSpeed
    humanoid.JumpPower = originalJumpPower
    humanoid:ChangeState(Enum.HumanoidStateType.Running)
    
    -- 11. Pulisci parti visive
    for _, part in ipairs(BaseTeleportParts) do
        if part then part:Destroy() end
    end
    BaseTeleportParts = {}
    
    BaseTeleportActive = false
    notify("Base Teleport", "Arrived at base location!", 3)
end

-- ======= SISTEMA FAST STEAL BYPASSATO =======
local function modifyPrompt(prompt)
    if not prompt:IsDescendantOf(game:GetService("CoreGui")) then
        prompt.HoldDuration = 0
        prompt.RequiresLineOfSight = false
        prompt.MaxActivationDistance = 75
    end
end

local function scanAndModifyPrompts()
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("ProximityPrompt") then
            modifyPrompt(obj)
        end
    end
end

local function autoClickNearbyPrompts()
    local character = Player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local root = character.HumanoidRootPart
    
    for _, prompt in ipairs(ProximityPromptService:GetPrompts()) do
        if prompt.Enabled and prompt.Visible then
            local part = prompt.Parent
            if part:IsA("BasePart") then
                local distance = (root.Position - part.Position).Magnitude
                if distance <= prompt.MaxActivationDistance then
                    fireproximityprompt(prompt)
                    task.wait(0.08)
                end
            end
        end
    end
end

-- ======= SISTEMA KILL AURA =======
local function startKillAura()
    if KillAuraActive then return end
    KillAuraActive = true
    
    KillAuraConnection = RunService.Heartbeat:Connect(function()
        pcall(function()
            local char = Player.Character
            if not char or not char:FindFirstChild("HumanoidRootPart") then return end
            
            local tool = Player.Backpack:FindFirstChildOfClass("Tool")
            if not tool then tool = char:FindFirstChildOfClass("Tool") end
            
            if tool then
                local nearbyPlayers = {}
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = (player.Character.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude
                        if distance < 20 then
                            table.insert(nearbyPlayers, {player = player, distance = distance})
                        end
                    end
                end
                
                table.sort(nearbyPlayers, function(a, b) return a.distance < b.distance end)
                
                for i = 1, math.min(#nearbyPlayers, 3) do
                    local targetPlayer = nearbyPlayers[i].player
                    local targetChar = targetPlayer.Character
                    if targetChar and targetChar:FindFirstChild("HumanoidRootPart") then
                        local targetDirection = (targetChar.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Unit
                        local lookDirection = Vector3.new(targetDirection.X, 0, targetDirection.Z)
                        char.HumanoidRootPart.CFrame = CFrame.lookAt(char.HumanoidRootPart.Position, char.HumanoidRootPart.Position + lookDirection)
                        
                        if tool.Parent == Player.Backpack then
                            char.Humanoid:EquipTool(tool)
                        end
                        if tool:FindFirstChild("Handle") then
                            tool:Activate()
                        end
                        task.wait(0.05)
                    end
                end
            end
        end)
    end)
end

local function stopKillAura()
    if KillAuraConnection then
        KillAuraConnection:Disconnect()
        KillAuraConnection = nil
    end
    KillAuraActive = false
end

-- Tab Main
local MainTab = Window:CreateTab("Main", 13014546637)
local MainSection = MainTab:CreateSection("Core Features ⚙️")

-- Base Teleport System in Main
MainTab:CreateButton({
    Name = "📍 Set Base Position",
    Callback = function()
        local char = Player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            BasePosition = char.HumanoidRootPart.Position
            notify("Base Position Set", "Location saved successfully", 3)
        else
            notify("Error", "Character not found", 3)
        end
    end
})

MainTab:CreateButton({
    Name = "🏠 Teleport to Base",
    Callback = function()
        if not BasePosition then
            notify("Error", "Set base position first!", 3)
            return
        end
        
        startBaseTeleport()
    end
})

-- Toggle Fast Steal con auto-click BYPASSATO
MainTab:CreateToggle({
    Name = "⚡ Auto-Click Proximity",
    CurrentValue = false,
    Flag = "AutoClick",
    Callback = function(Value)
        FastStealEnabled = Value
        if Value then
            scanAndModifyPrompts()
            FastStealConnection = RunService.Heartbeat:Connect(function()
                if FastStealEnabled then
                    autoClickNearbyPrompts()
                end
            end)
            notify("Auto-Click Enabled", "Automatically clicking nearby objects", 2)
        else
            if FastStealConnection then
                FastStealConnection:Disconnect()
                FastStealConnection = nil
            end
            notify("Auto-Click Disabled", "Manual interaction required", 2)
        end
    end,
})

-- Air Jump BYPASSATO
MainTab:CreateToggle({
    Name = "🦘 Air Jump",
    CurrentValue = false,
    Flag = "AirJump",
    Callback = function(Value)
        AirJumpEnabled = Value
        if Value then 
            notify("Air Jump Enabled", "Jump in mid-air activated", 2)
        else
            notify("Air Jump Disabled", "Normal jump restored", 2)
        end
    end,
})

Connections.JumpButton = UserInputService.JumpRequest:Connect(function()
    if not AirJumpEnabled then return end
    
    local character = Player.Character
    if not character then return end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if humanoid and rootPart and humanoid.FloorMaterial == Enum.Material.Air then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
        bodyVelocity.Velocity = Vector3.new(0, 70, 0)
        bodyVelocity.Parent = rootPart
        
        game:GetService("Debris"):AddItem(bodyVelocity, 0.25)
    end
end)

-- Speed Boost (BYPASSATO)
local SpeedBoostToggle = MainTab:CreateToggle({
    Name = "🚀 Speed Boost",
    CurrentValue = false,
    Flag = "SpeedBoost",
    Callback = function(Value)
        if Value then
            local gui = Instance.new("ScreenGui")
            gui.Name = "SpeedBoostGUI"
            gui.Parent = CoreGui
            gui.ResetOnSpawn = false
            
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(0.14, 0, 0.07, 0)
            button.Position = UDim2.new(0.83, 0, 0.73, 0)
            button.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
            button.TextColor3 = Color3.new(1, 1, 1)
            button.Text = "💨 OFF"
            button.Font = Enum.Font.GothamBold
            button.TextSize = 16
            button.BorderSizePixel = 0
            button.ZIndex = 10
            button.Parent = gui
            createCorner(button, 0.3)
            makeDraggable(button)
            
            button.MouseButton1Click:Connect(function()
                SpeedBoostActive = not SpeedBoostActive
                button.Text = SpeedBoostActive and "💨 ON" or "💨 OFF"
                button.BackgroundColor3 = SpeedBoostActive and Color3.fromRGB(80, 255, 80) or Color3.fromRGB(255, 80, 80)
                
                local tween = TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(0.16, 0, 0.08, 0)})
                tween:Play()
                tween.Completed:Connect(function()
                    TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(0.14, 0, 0.07, 0)}):Play()
                end)
            end)
            
            SpeedBoostButton = button
        else
            if SpeedBoostButton then
                SpeedBoostButton.Parent:Destroy()
                SpeedBoostButton = nil
            end
            SpeedBoostActive = false
        end
    end,
})

-- NoClip BYPASSATO
MainTab:CreateToggle({
    Name = "👻 NoClip",
    CurrentValue = false,
    Flag = "NoClip",
    Callback = function(Value)
        NoClipEnabled = Value
        if Value then
            notify("NoClip Enabled", "Walk through walls activated", 2)
            
            Connections.NoClip = RunService.Stepped:Connect(function()
                if NoClipEnabled then
                    local character = Player.Character
                    if character then
                        for _, part in pairs(character:GetChildren()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                                part.Velocity = Vector3.new(0, 0, 0)
                                part.RotVelocity = Vector3.new(0, 0, 0)
                                part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                                part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                            end
                        end
                    end
                end
            end)
        else
            cleanupConnection("NoClip")
            local character = Player.Character
            if character then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                        part.CanCollide = true
                    end
                end
            end
        end
    end,
})

-- Kill Aura
MainTab:CreateToggle({
    Name = "⚔️ Kill Aura 360°",
    CurrentValue = false,
    Flag = "KillAura",
    Callback = function(Value)
        if Value then
            startKillAura()
            notify("Kill Aura Enabled", "360° Kill Aura activated", 3)
        else
            stopKillAura()
            notify("Kill Aura Disabled", "Kill Aura deactivated", 2)
        end
    end,
})

-- Steal Helper BYPASSATO
MainTab:CreateToggle({
    Name = "🎯 Steal Helper",
    CurrentValue = false,
    Flag = "StealHelper",
    Callback = function(Value)
        StealHelperEnabled = Value
        if Value then
            StealGUI = Instance.new("ScreenGui")
            StealGUI.Name = "StealHelperGUI"
            StealGUI.Parent = CoreGui
            StealGUI.ResetOnSpawn = false
            
            local mainFrame = Instance.new("Frame")
            mainFrame.Size = UDim2.new(0.28, 0, 0.16, 0)
            mainFrame.Position = UDim2.new(0.02, 0, 0.65, 0)
            mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
            mainFrame.BackgroundTransparency = 0.05
            mainFrame.BorderSizePixel = 0
            mainFrame.Parent = StealGUI
            createCorner(mainFrame, 0.2)
            makeDraggable(mainFrame)
            
            local gradient = Instance.new("UIGradient")
            gradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
            }
            gradient.Rotation = 45
            gradient.Parent = mainFrame
            
            local headerFrame = Instance.new("Frame")
            headerFrame.Size = UDim2.new(1, 0, 0.25, 0)
            headerFrame.Position = UDim2.new(0, 0, 0, 0)
            headerFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            headerFrame.BackgroundTransparency = 0.3
            headerFrame.BorderSizePixel = 0
            headerFrame.Parent = mainFrame
            createCorner(headerFrame, 0.2)
            
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(0.6, 0, 1, 0)
            titleLabel.Position = UDim2.new(0.05, 0, 0, 0)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = "🎯 Steal Helper Pro"
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.Font = Enum.Font.GothamBold
            titleLabel.TextSize = 18
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = headerFrame
            
            local closeButton = Instance.new("TextButton")
            closeButton.Size = UDim2.new(0.3, 0, 0.8, 0)
            closeButton.Position = UDim2.new(0.65, 0, 0.1, 0)
            closeButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
            closeButton.Text = "✕"
            closeButton.TextColor3 = Color3.new(1, 1, 1)
            closeButton.Font = Enum.Font.GothamBold
            closeButton.TextSize = 16
            closeButton.BorderSizePixel = 0
            closeButton.Parent = headerFrame
            createCorner(closeButton, 0.4)
            
            closeButton.MouseButton1Click:Connect(function()
                StealGUI:Destroy()
                StealGUI = nil
                StealHelperEnabled = false
                StealHelperToggle:Set(false)
            end)
            
            local isUp = true
            local moveButton = Instance.new("TextButton")
            moveButton.Size = UDim2.new(0.9, 0, 0.5, 0)
            moveButton.Position = UDim2.new(0.05, 0, 0.3, 0)
            moveButton.Text = "⬆️ TELEPORT UP"
            moveButton.TextSize = 20
            moveButton.TextColor3 = Color3.new(1, 1, 1)
            moveButton.BackgroundColor3 = Color3.fromRGB(85, 170, 85)
            moveButton.Font = Enum.Font.GothamBold
            moveButton.BorderSizePixel = 0
            moveButton.Parent = mainFrame
            createCorner(moveButton, 0.25)
            
            local buttonGradient = Instance.new("UIGradient")
            buttonGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 200, 120)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(85, 170, 85))
            }
            buttonGradient.Rotation = 90
            buttonGradient.Parent = moveButton
            
            moveButton.MouseButton1Click:Connect(function()
                local character = Player.Character
                if character then
                    local rootPart = character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        if isUp then
                            rootPart.CFrame = rootPart.CFrame + Vector3.new(0, 180, 0)
                            moveButton.Text = "⬇️ TELEPORT DOWN"
                            moveButton.BackgroundColor3 = Color3.fromRGB(170, 85, 85)
                            buttonGradient.Color = ColorSequence.new{
                                ColorSequenceKeypoint.new(0, Color3.fromRGB(200, 120, 120)),
                                ColorSequenceKeypoint.new(1, Color3.fromRGB(170, 85, 85))
                            }
                        else
                            rootPart.CFrame = rootPart.CFrame - Vector3.new(0, 60, 0)
                            moveButton.Text = "⬆️ TELEPORT UP"
                            moveButton.BackgroundColor3 = Color3.fromRGB(85, 170, 85)
                            buttonGradient.Color = ColorSequence.new{
                                ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 200, 120)),
                                ColorSequenceKeypoint.new(1, Color3.fromRGB(85, 170, 85))
                            }
                        end
                        isUp = not isUp
                        
                        local tween = TweenService:Create(moveButton, TweenInfo.new(0.1), {Size = UDim2.new(0.85, 0, 0.45, 0)})
                        tween:Play()
                        tween.Completed:Connect(function()
                            TweenService:Create(moveButton, TweenInfo.new(0.1), {Size = UDim2.new(0.9, 0, 0.5, 0)}):Play()
                        end)
                    end
                end
            end)
            
            local coordLabel = Instance.new("TextLabel")
            coordLabel.Size = UDim2.new(0.9, 0, 0.18, 0)
            coordLabel.Position = UDim2.new(0.05, 0, 0.82, 0)
            coordLabel.Text = "📍 X:0 Y:0 Z:0"
            coordLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
            coordLabel.BackgroundTransparency = 1
            coordLabel.Font = Enum.Font.GothamBold
            coordLabel.TextSize = 14
            coordLabel.TextScaled = true
            coordLabel.Parent = mainFrame
            
            task.spawn(function()
                while StealGUI and StealGUI.Parent do
                    local character = Player.Character
                    if character then
                        local rootPart = character:FindFirstChild("HumanoidRootPart")
                        if rootPart then
                            coordLabel.Text = string.format("📍 X:%d Y:%d Z:%d", 
                                math.floor(rootPart.Position.X), 
                                math.floor(rootPart.Position.Y), 
                                math.floor(rootPart.Position.Z))
                        end
                    end
                    task.wait(0.3)
                end
            end)
            
            notify("Steal Helper Active", "Teleport controls enabled", 3)
        else
            if StealGUI then
                StealGUI:Destroy()
                StealGUI = nil
            end
        end
    end,
})

-- Tab Visual BYPASSATO
local VisualTab = Window:CreateTab("Visual", 13014546637)
local VisualSection = VisualTab:CreateSection("Visual Settings 👁️")

-- Player ESP BYPASSATO
VisualTab:CreateToggle({
    Name = "👤 Player ESP",
    CurrentValue = false,
    Flag = "PlayerESP",
    Callback = function(Value)
        if Value then
            -- Pulizia cache esistente
            for _, highlight in pairs(ESPCache) do
                if highlight then highlight:Destroy() end
            end
            ESPCache = {}
            
            -- Funzione per aggiungere ESP
            local function addESP(player)
                if player == Player then return end
                
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "PlayerESP"
                    highlight.FillColor = Color3.fromRGB(100, 200, 255)
                    highlight.OutlineColor = Color3.fromRGB(0, 100, 200)
                    highlight.FillTransparency = 0.45
                    highlight.OutlineTransparency = 0
                    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    highlight.Parent = character
                    
                    ESPCache[player] = highlight
                end
            end
            
            -- Aggiungi ESP per tutti i giocatori esistenti
            for _, player in ipairs(Players:GetPlayers()) do
                addESP(player)
            end
            
            -- Connessioni per nuovi giocatori
            Connections.PlayerAdded_ESP = Players.PlayerAdded:Connect(addESP)
            
            notify("Player ESP Enabled", "All players highlighted", 2)
        else
            cleanupConnection("PlayerAdded_ESP")
            for _, highlight in pairs(ESPCache) do
                if highlight then highlight:Destroy() end
            end
            ESPCache = {}
        end
    end,
})

-- Name ESP BYPASSATO
local NameESPCache = {}
VisualTab:CreateToggle({
    Name = "📛 Name ESP",
    CurrentValue = false,
    Flag = "NameESP",
    Callback = function(Value)
        if Value then
            -- Funzione per aggiungere Name ESP
            local function addNameESP(player)
                if player == Player then return end
                
                local character = player.Character
                if character and character:FindFirstChild("Head") then
                    local head = character.Head
                    
                    -- Rimuovi vecchi elementi se esistono
                    if NameESPCache[player] then
                        NameESPCache[player]:Destroy()
                    end
                    
                    -- Crea nuovo BillboardGui
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "NameESP"
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
                    billboard.AlwaysOnTop = true
                    billboard.MaxDistance = 500
                    billboard.Parent = head
                    
                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Size = UDim2.new(1, 0, 1, 0)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.Text = player.Name
                    nameLabel.TextColor3 = Color3.new(1, 1, 1)
                    nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                    nameLabel.TextStrokeTransparency = 0
                    nameLabel.Font = Enum.Font.GothamBold
                    nameLabel.TextSize = 18
                    nameLabel.TextScaled = true
                    nameLabel.Parent = billboard
                    
                    NameESPCache[player] = billboard
                end
            end
            
            -- Aggiungi per tutti i giocatori
            for _, player in ipairs(Players:GetPlayers()) do
                addNameESP(player)
            end
            
            -- Connessioni
            Connections.PlayerAdded_NameESP = Players.PlayerAdded:Connect(addNameESP)
            Connections.CharacterAdded_NameESP = Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function(char)
                    task.wait(1)
                    addNameESP(player)
                end)
            end)
            
            notify("Name ESP Enabled", "Player names visible", 2)
        else
            cleanupConnection("PlayerAdded_NameESP")
            cleanupConnection("CharacterAdded_NameESP")
            for _, billboard in pairs(NameESPCache) do
                if billboard then billboard:Destroy() end
            end
            NameESPCache = {}
        end
    end,
})

VisualTab:CreateToggle({
    Name = "⏱️ Base Timer ESP",
    CurrentValue = false,
    Flag = "TimerESP",
    Callback = function(Value)
        if Value then
            notify("Timer ESP Enabled", "Scanning for base timers...", 2)
        else
            notify("Timer ESP Disabled", "No longer showing timers", 2)
        end
    end,
})

-- Tab Misc BYPASSATO
local MiscTab = Window:CreateTab("Misc", 13014546637)
local UtilitySection = MiscTab:CreateSection("Utility Features 🛠️")

-- Anti-AFK BYPASSATO
MiscTab:CreateToggle({
    Name = "🚫 Anti AFK",
    CurrentValue = false,
    Flag = "AntiAFK",
    Callback = function(Value)
        AntiAFKEnabled = Value
        if Value then
            notify("Anti-AFK Enabled", "Idle protection active", 2)
            
            task.spawn(function()
                while AntiAFKEnabled do
                    local actions = {
                        {key = "W", duration = 0.15},
                        {key = "A", duration = 0.1},
                        {key = "S", duration = 0.12},
                        {key = "D", duration = 0.13},
                        {key = "Space", duration = 0.08}
                    }
                    local randomAction = actions[math.random(#actions)]
                    
                    VirtualInputManager:SendKeyEvent(true, randomAction.key, false, game)
                    task.wait(randomAction.duration)
                    VirtualInputManager:SendKeyEvent(false, randomAction.key, false, game)
                    
                    task.wait(math.random(25, 35))
                end
            end)
        else
            notify("Anti-AFK Disabled", "Idle protection deactivated", 2)
        end
    end,
})

-- Auto Collect Money BYPASSATO
MiscTab:CreateToggle({
    Name = "💰 Auto Collect Money",
    CurrentValue = false,
    Flag = "AutoCollect",
    Callback = function(Value)
        AutoCollectEnabled = Value
        if Value then
            notify("Auto Collect Enabled", "Money collection activated", 2)
        else
            notify("Auto Collect Disabled", "Manual collection required", 2)
        end
    end,
})

-- Tab Server
local ServerTab = Window:CreateTab("Server", 13014546637)
local ServerSection = ServerTab:CreateSection("Server Controls 🔄")

ServerTab:CreateButton({
    Name = "🚪 Leave Server",
    Callback = function()
        Player:Kick("Left server via script")
        notify("Server Left", "You've left the server", 3)
    end
})

ServerTab:CreateButton({
    Name = "🔄 Rejoin Server",
    Callback = function()
        TeleportService:Teleport(game.PlaceId, Player)
        notify("Rejoining Server", "Attempting to rejoin the same server...", 3)
    end
})

ServerTab:CreateButton({
    Name = "🚀 Server Hop",
    Callback = function()
        local function findNewServer()
            local servers = {}
            local success, result = pcall(function()
                return game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
            end)
            
            if success and result and result.data then
                for _, server in ipairs(result.data) do
                    if server.playing < server.maxPlayers and server.id ~= game.JobId then
                        table.insert(servers, server)
                    end
                end
            end
            return servers
        end
        
        local servers = findNewServer()
        if #servers > 0 then
            local randomServer = servers[math.random(1, #servers)]
            TeleportService:TeleportToPlaceInstance(game.PlaceId, randomServer.id, Player)
            notify("Server Hopping", "Joining a new server...", 3)
        else
            TeleportService:Teleport(game.PlaceId, Player)
            notify("Server Hop", "No servers found, rejoining...", 3)
        end
    end
})

-- Loop principale BYPASSATO
Connections.MainLoop = RunService.Heartbeat:Connect(function()
    local character = Player.Character
    if not character then return end
    
    -- Speed Boost BYPASSATO
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        if SpeedBoostActive then
            humanoid.WalkSpeed = 95
            humanoid.JumpPower = 85
        else
            humanoid.WalkSpeed = OriginalWalkSpeed
            humanoid.JumpPower = OriginalJumpPower
        end
    end
    
    -- Auto Collect Money BYPASSATO
    if AutoCollectEnabled then
        for _, obj in pairs(Workspace:GetDescendants()) do
            if obj.Name:lower():find("money") or obj.Name:lower():find("coin") or obj.Name:lower():find("cash") then
                if obj:IsA("BasePart") then
                    local distance = (character.HumanoidRootPart.Position - obj.Position).Magnitude
                    if distance < 120 then
                        obj.CFrame = character.HumanoidRootPart.CFrame
                    end
                end
            end
        end
    end
end)

-- Cleanup BYPASSATO
local function cleanup()
    for _, connection in pairs(Connections) do
        if connection then connection:Disconnect() end
    end
    
    if StealGUI then StealGUI:Destroy() end
    if SpeedBoostButton then SpeedBoostButton.Parent:Destroy() end
    
    for _, highlight in pairs(ESPCache) do
        if highlight then highlight:Destroy() end
    end
    
    for _, billboard in pairs(NameESPCache) do
        if billboard then billboard:Destroy() end
    end
    
    for _, part in ipairs(BaseTeleportParts) do
        if part then part:Destroy() end
    end
    BaseTeleportParts = {}
    
    if FastStealConnection then FastStealConnection:Disconnect() end
    stopKillAura()
    
    BaseTeleportActive = false
    
    local character = Player.Character
    if character then
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
        
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = OriginalWalkSpeed
            humanoid.JumpPower = OriginalJumpPower
        end
    end
end

-- Pulsante Unload
MiscTab:CreateButton({
    Name = "🔴 Unload Interface",
    Callback = function()
        cleanup()
        Rayfield:Destroy()
    end,
})

-- Inizializzazione BYPASSATA
Connections.CharacterAdded = Player.CharacterAdded:Connect(function(character)
    task.wait(1.5)
    storeSpawnPosition()
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        OriginalWalkSpeed = humanoid.WalkSpeed
        OriginalJumpPower = humanoid.JumpPower
    end
end)

if Player.Character then
    local humanoid = Player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        OriginalWalkSpeed = humanoid.WalkSpeed
        OriginalJumpPower = humanoid.JumpPower
    end
end

notify("Admin Tools Pro Loaded", "Ultra Optimized Free Edition 🚀", 4)
