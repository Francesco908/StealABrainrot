local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/sol"))()

local win = SolarisLib:New({
  Name = "My Script UI",
  FolderToSave = "MyScriptUIStuff"
})

local tab = win:Tab("Main")

local sec = tab:Section("Player Controls")

-- Bottone che stampa in output e mostra notifica
sec:Button("Test Button", function()
  print("Button clicked!")
  SolarisLib:Notification("Button", "You clicked the button!")
end)

-- Toggle che abilita/disabilita una funzione, es: cammina più veloce
local speedToggle = sec:Toggle("Speed Boost", false, "SpeedBoostToggle", function(state)
  if state then
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 32
    SolarisLib:Notification("Speed Boost", "Speed boost enabled!")
  else
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    SolarisLib:Notification("Speed Boost", "Speed boost disabled!")
  end
end)

-- Slider per modificare la velocità in modo preciso
local speedSlider = sec:Slider("Walk Speed", 16, 100, 16, 1, "WalkSpeedSlider", function(value)
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
  print("WalkSpeed set to:", value)
end)

-- Dropdown per selezionare modalità di gioco o opzioni
local dropdown = sec:Dropdown("Select Mode", {"Normal", "Stealth", "Aggressive"}, "Normal", "GameModeDropdown", function(option)
  print("Selected mode:", option)
  SolarisLib:Notification("Mode Changed", "You selected: "..option)
end)

-- ColorPicker per cambiare colore di qualche cosa (es. UI o effetti)
sec:Colorpicker("UI Color", Color3.fromRGB(0, 255, 255), "UIColor", function(color)
  print("Color picked:", color)
  -- Qui potresti cambiare il tema UI o qualche effetto in gioco
end)

-- Textbox per inserire testo o comandi
sec:Textbox("Enter Command", true, function(text)
  print("Command entered:", text)
  SolarisLib:Notification("Command", "You typed: "..text)
end)

-- Keybind che stampa messaggi quando premuto
sec:Bind("Toggle UI Bind (F)", Enum.KeyCode.F, false, "ToggleUIBind", function()
  print("Toggle UI pressed")
  win:Toggle()  -- toggla la UI
end)

-- Label dinamica per mostrare info o stato
local label = sec:Label("Status: Ready")

-- Un esempio di aggiornamento label ogni 5 secondi (loop in background)
spawn(function()
  while true do
    wait(5)
    label:Set("Status: Active at "..os.date("%X"))
  end
end)

-- Puoi aggiungere altre tab e sezioni qui
local tab2 = win:Tab("Extras")
local extraSec = tab2:Section("Extra Features")
extraSec:Button("Extra Button", function()
  SolarisLib:Notification("Extra", "You pressed the extra button!")
end)
