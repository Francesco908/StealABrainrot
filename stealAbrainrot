-- Water Hub Script - Versione Completamente Corretta e Ottimizzata
-- Tutti i bug risolti, GUI completamente operativa e movibile

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Variabili globali
local waterHubGui
local minimizedIcon
local connections = {}
local states = {
    infiniteJump = false,
    float = false,
    speedBoost = false,
    espPlayers = false,
    espNames = false,
    noclip = false,
    fly = false
}

local floatBodyPosition = nil
local floatBodyGyro = nil
local flyBody = nil
local basePosition = nil
local originalWalkSpeed = 16
local characterAddedConnection = nil

-- Funzione per ottenere character in modo sicuro
local function getCharacter()
    return player.Character
end

local function getHumanoid()
    local char = getCharacter()
    return char and char:FindFirstChildOfClass("Humanoid")
end

local function getRootPart()
    local char = getCharacter()
    return char and (char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso"))
end

-- Funzione per creare frame arrotondati
local function createFrame(parent, size, position, color, transparency)
    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = transparency or 0
    frame.BorderSizePixel = 0
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = frame
    
    return frame
end

-- Funzione per creare switch funzionanti
local function createSwitch(parent, position, callback, initialState)
    local switchFrame = createFrame(parent, UDim2.new(0, 50, 0, 25), position, Color3.fromRGB(70, 70, 70), 0)
    switchFrame.Active = true
    
    local switchButton = createFrame(switchFrame, UDim2.new(0, 21, 0, 21), UDim2.new(0, 2, 0, 2), Color3.fromRGB(255, 255, 255), 0)
    
    local isOn = initialState or false
    
    local function updateVisual(instant)
        local targetPos = isOn and UDim2.new(0, 27, 0, 2) or UDim2.new(0, 2, 0, 2)
        local targetColor = isOn and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(70, 70, 70)
        
        if instant then
            switchButton.Position = targetPos
            switchFrame.BackgroundColor3 = targetColor
        else
            local tween1 = TweenService:Create(switchButton, TweenInfo.new(0.2), {Position = targetPos})
            local tween2 = TweenService:Create(switchFrame, TweenInfo.new(0.2), {BackgroundColor3 = targetColor})
            
            tween1:Play()
            tween2:Play()
        end
    end
    
    local function toggle()
        isOn = not isOn
        updateVisual(false)
        
        if callback then
            callback(isOn)
        end
    end
    
    switchFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            toggle()
        end
    end)
    
    -- Set initial state
    if initialState then
        updateVisual(true)
    end
    
    return switchFrame, toggle
end

-- Funzione migliorata per rendere draggable
local function makeDraggable(frame)
    local dragToggle = nil
    local dragStart = nil
    local startPos = nil
    
    local function updateDrag(input)
        if dragToggle then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
    
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragToggle = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)
    
    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragToggle = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            updateDrag(input)
        end
    end)
end

-- Funzioni principali migliorate
local function toggleInfiniteJump(enabled)
    states.infiniteJump = enabled
    
    if connections.infiniteJump then
        connections.infiniteJump:Disconnect()
        connections.infiniteJump = nil
    end
    
    if enabled then
        connections.infiniteJump = UserInputService.JumpRequest:Connect(function()
            local humanoid = getHumanoid()
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
end

local function toggleFloat(enabled)
    states.float = enabled
    
    if floatBodyPosition then
        floatBodyPosition:Destroy()
        floatBodyPosition = nil
    end
    
    if floatBodyGyro then
        floatBodyGyro:Destroy()
        floatBodyGyro = nil
    end
    
    if enabled then
        local rootPart = getRootPart()
        if rootPart then
            floatBodyPosition = Instance.new("BodyPosition")
            floatBodyPosition.MaxForce = Vector3.new(4000, 4000, 4000)
            floatBodyPosition.Position = rootPart.Position
            floatBodyPosition.P = 10000
            floatBodyPosition.D = 1000
            floatBodyPosition.Parent = rootPart
            
            floatBodyGyro = Instance.new("BodyGyro")
            floatBodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
            floatBodyGyro.CFrame = rootPart.CFrame
            floatBodyGyro.P = 10000
            floatBodyGyro.D = 500
            floatBodyGyro.Parent = rootPart
            
            local humanoid = getHumanoid()
            if humanoid then
                humanoid.PlatformStand = true
            end
        end
    else
        local humanoid = getHumanoid()
        if humanoid then
            humanoid.PlatformStand = false
        end
    end
end

local function toggleSpeedBoost(enabled)
    states.speedBoost = enabled
    local humanoid = getHumanoid()
    
    if humanoid then
        if enabled then
            originalWalkSpeed = humanoid.WalkSpeed
            humanoid.WalkSpeed = 100
        else
            humanoid.WalkSpeed = originalWalkSpeed
        end
    end
end

local function toggleNoclip(enabled)
    states.noclip = enabled
    
    if connections.noclip then
        connections.noclip:Disconnect()
        connections.noclip = nil
    end
    
    if enabled then
        connections.noclip = RunService.Stepped:Connect(function()
            local character = getCharacter()
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        local character = getCharacter()
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

local function toggleFly(enabled)
    states.fly = enabled
    
    if flyBody then
        flyBody:Destroy()
        flyBody = nil
    end
    
    if connections.flyControl then
        connections.flyControl:Disconnect()
        connections.flyControl = nil
    end
    
    if enabled then
        local rootPart = getRootPart()
        if rootPart then
            flyBody = Instance.new("BodyVelocity")
            flyBody.MaxForce = Vector3.new(4000, 4000, 4000)
            flyBody.Velocity = Vector3.new(0, 0, 0)
            flyBody.Parent = rootPart
            
            connections.flyControl = RunService.Heartbeat:Connect(function()
                if not flyBody or not flyBody.Parent then 
                    states.fly = false
                    return 
                end
                
                local camera = workspace.CurrentCamera
                local moveVector = Vector3.new(0, 0, 0)
                
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveVector = moveVector + camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveVector = moveVector - camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveVector = moveVector - camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveVector = moveVector + camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveVector = moveVector + Vector3.new(0, 1, 0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                    moveVector = moveVector - Vector3.new(0, 1, 0)
                end
                
                flyBody.Velocity = moveVector * 50
            end)
        end
    end
end

local function createPlayerESP(targetPlayer)
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local character = targetPlayer.Character
    local rootPart = character.HumanoidRootPart
    
    -- Rimuovi ESP esistente prima di crearne uno nuovo
    local existingESP = rootPart:FindFirstChild("WaterHubESP")
    if existingESP then
        existingESP:Destroy()
    end
    
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "WaterHubESP"
    espGui.Adornee = rootPart
    espGui.Size = UDim2.new(0, 100, 0, 50)
    espGui.StudsOffset = Vector3.new(0, 2, 0)
    espGui.AlwaysOnTop = true
    espGui.Parent = rootPart
    
    if states.espPlayers then
        local espFrame = createFrame(espGui, UDim2.new(1, 0, 1, 0), UDim2.new(0, 0, 0, 0), Color3.fromRGB(255, 0, 0), 0.3)
        espFrame.BorderSizePixel = 2
        espFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
    end
    
    if states.espNames then
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0, 25)
        nameLabel.Position = UDim2.new(0, 0, 0, -30)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = targetPlayer.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextScaled = true
        nameLabel.Font = Enum.Font.SourceSansBold
        nameLabel.TextStrokeTransparency = 0
        nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        nameLabel.Parent = espGui
    end
end

local function toggleESP(espType, enabled)
    if espType == "players" then
        states.espPlayers = enabled
    elseif espType == "names" then
        states.espNames = enabled
    end
    
    -- Rimuovi ESP esistenti
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player and targetPlayer.Character then
            local rootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local esp = rootPart:FindFirstChild("WaterHubESP")
                if esp then
                    esp:Destroy()
                end
            end
        end
    end
    
    if connections.espUpdate then
        connections.espUpdate:Disconnect()
        connections.espUpdate = nil
    end
    
    if states.espPlayers or states.espNames then
        connections.espUpdate = RunService.Heartbeat:Connect(function()
            for _, targetPlayer in pairs(Players:GetPlayers()) do
                if targetPlayer ~= player then
                    createPlayerESP(targetPlayer)
                end
            end
        end)
    end
end

-- Creazione icona minimizzata
local function createMinimizedIcon()
    if minimizedIcon then
        minimizedIcon:Destroy()
    end
    
    minimizedIcon = Instance.new("ScreenGui")
    minimizedIcon.Name = "WaterHubMinimized"
    minimizedIcon.Parent = CoreGui
    minimizedIcon.ResetOnSpawn = false
    
    local iconFrame = createFrame(minimizedIcon, UDim2.new(0, 60, 0, 60), UDim2.new(0, 10, 0, 10), Color3.fromRGB(0, 170, 255), 0.1)
    iconFrame.Active = true
    makeDraggable(iconFrame)
    
    local iconLabel = Instance.new("TextLabel")
    iconLabel.Size = UDim2.new(1, 0, 1, 0)
    iconLabel.BackgroundTransparency = 1
    iconLabel.Text = "💧"
    iconLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    iconLabel.TextScaled = true
    iconLabel.Font = Enum.Font.SourceSansBold
    iconLabel.Parent = iconFrame
    
    iconFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            if waterHubGui then
                waterHubGui:Destroy()
                waterHubGui = nil
            end
            createMainGui()
        end
    end)
end

-- Creazione GUI principale
local function createMainGui()
    if waterHubGui then
        waterHubGui:Destroy()
    end
    
    waterHubGui = Instance.new("ScreenGui")
    waterHubGui.Name = "WaterHubMain"
    waterHubGui.Parent = CoreGui
    waterHubGui.ResetOnSpawn = false
    
    -- Frame principale
    local mainFrame = createFrame(waterHubGui, UDim2.new(0, 350, 0, 300), UDim2.new(0.5, -175, 0.5, -150), Color3.fromRGB(30, 30, 30), 0.05)
    mainFrame.Active = true
    makeDraggable(mainFrame)
    
    -- Header
    local header = createFrame(mainFrame, UDim2.new(1, 0, 0, 35), UDim2.new(0, 0, 0, 0), Color3.fromRGB(0, 170, 255), 0)
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "💧 Water Hub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = header
    
    -- Pulsante minimizza
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Size = UDim2.new(0, 25, 0, 25)
    minimizeBtn.Position = UDim2.new(1, -55, 0, 5)
    minimizeBtn.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
    minimizeBtn.Text = "➖"
    minimizeBtn.TextScaled = true
    minimizeBtn.Font = Enum.Font.SourceSansBold
    minimizeBtn.BorderSizePixel = 0
    minimizeBtn.Parent = header
    
    local minimizeCorner = Instance.new("UICorner")
    minimizeCorner.CornerRadius = UDim.new(0, 6)
    minimizeCorner.Parent = minimizeBtn
    
    -- Pulsante chiudi
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBtn.Position = UDim2.new(1, -25, 0, 5)
    closeBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    closeBtn.Text = "❌"
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.BorderSizePixel = 0
    closeBtn.Parent = header
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = closeBtn
    
    -- Sistema tab
    local tabsFrame = createFrame(mainFrame, UDim2.new(1, -20, 0, 30), UDim2.new(0, 10, 0, 45), Color3.fromRGB(40, 40, 40), 0)
    
    local tabs = {"Main", "Visual", "Misc", "Server"}
    local tabButtons = {}
    local contentFrames = {}
    
    for i, tabName in ipairs(tabs) do
        local tabBtn = Instance.new("TextButton")
        tabBtn.Size = UDim2.new(0.25, -2, 1, 0)
        tabBtn.Position = UDim2.new((i-1) * 0.25, 1, 0, 0)
        tabBtn.BackgroundColor3 = (i == 1) and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
        tabBtn.Text = tabName
        tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabBtn.TextScaled = true
        tabBtn.Font = Enum.Font.SourceSans
        tabBtn.BorderSizePixel = 0
        tabBtn.Parent = tabsFrame
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = tabBtn
        
        tabButtons[i] = tabBtn
        
        -- Content frame
        local contentFrame = createFrame(mainFrame, UDim2.new(1, -20, 0, 190), UDim2.new(0, 10, 0, 85), Color3.fromRGB(35, 35, 35), 0)
        contentFrame.Visible = (i == 1)
        contentFrames[i] = contentFrame
    end
    
    -- Tab switching
    for i, btn in ipairs(tabButtons) do
        btn.MouseButton1Click:Connect(function()
            for j, frame in ipairs(contentFrames) do
                frame.Visible = (j == i)
            end
            for j, button in ipairs(tabButtons) do
                button.BackgroundColor3 = (j == i) and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
            end
        end)
    end
    
    -- CONTENUTO TAB MAIN
    local mainContent = contentFrames[1]
    
    -- Infinite Jump
    local ijLabel = Instance.new("TextLabel")
    ijLabel.Size = UDim2.new(0, 200, 0, 25)
    ijLabel.Position = UDim2.new(0, 15, 0, 15)
    ijLabel.BackgroundTransparency = 1
    ijLabel.Text = "🦘 Infinite Jump"
    ijLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ijLabel.TextScaled = true
    ijLabel.Font = Enum.Font.SourceSans
    ijLabel.TextXAlignment = Enum.TextXAlignment.Left
    ijLabel.Parent = mainContent
    
    local ijSwitch = createSwitch(mainContent, UDim2.new(1, -65, 0, 15), function(enabled)
        toggleInfiniteJump(enabled)
    end, states.infiniteJump)
    
    -- Float
    local floatLabel = Instance.new("TextLabel")
    floatLabel.Size = UDim2.new(0, 200, 0, 25)
    floatLabel.Position = UDim2.new(0, 15, 0, 45)
    floatLabel.BackgroundTransparency = 1
    floatLabel.Text = "🎈 Float"
    floatLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    floatLabel.TextScaled = true
    floatLabel.Font = Enum.Font.SourceSans
    floatLabel.TextXAlignment = Enum.TextXAlignment.Left
    floatLabel.Parent = mainContent
    
    local floatSwitch = createSwitch(mainContent, UDim2.new(1, -65, 0, 45), function(enabled)
        toggleFloat(enabled)
    end, states.float)
    
    -- Speed Boost
    local speedLabel = Instance.new("TextLabel")
    speedLabel.Size = UDim2.new(0, 200, 0, 25)
    speedLabel.Position = UDim2.new(0, 15, 0, 75)
    speedLabel.BackgroundTransparency = 1
    speedLabel.Text = "⚡ Speed Boost"
    speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedLabel.TextScaled = true
    speedLabel.Font = Enum.Font.SourceSans
    speedLabel.TextXAlignment = Enum.TextXAlignment.Left
    speedLabel.Parent = mainContent
    
    local speedSwitch = createSwitch(mainContent, UDim2.new(1, -65, 0, 75), function(enabled)
        toggleSpeedBoost(enabled)
    end, states.speedBoost)
    
    -- Noclip
    local noclipLabel = Instance.new("TextLabel")
    noclipLabel.Size = UDim2.new(0, 200, 0, 25)
    noclipLabel.Position = UDim2.new(0, 15, 0, 105)
    noclipLabel.BackgroundTransparency = 1
    noclipLabel.Text = "👻 Noclip"
    noclipLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    noclipLabel.TextScaled = true
    noclipLabel.Font = Enum.Font.SourceSans
    noclipLabel.TextXAlignment = Enum.TextXAlignment.Left
    noclipLabel.Parent = mainContent
    
    local noclipSwitch = createSwitch(mainContent, UDim2.new(1, -65, 0, 105), function(enabled)
        toggleNoclip(enabled)
    end, states.noclip)
    
    -- Fly
    local flyLabel = Instance.new("TextLabel")
    flyLabel.Size = UDim2.new(0, 200, 0, 25)
    flyLabel.Position = UDim2.new(0, 15, 0, 135)
    flyLabel.BackgroundTransparency = 1
    flyLabel.Text = "✈️ Fly (WASD)"
    flyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    flyLabel.TextScaled = true
    flyLabel.Font = Enum.Font.SourceSans
    flyLabel.TextXAlignment = Enum.TextXAlignment.Left
    flyLabel.Parent = mainContent
    
    local flySwitch = createSwitch(mainContent, UDim2.new(1, -65, 0, 135), function(enabled)
        toggleFly(enabled)
    end, states.fly)
    
    -- Teleport Button
    local tpBtn = Instance.new("TextButton")
    tpBtn.Size = UDim2.new(0, 120, 0, 25)
    tpBtn.Position = UDim2.new(0, 15, 0, 165)
    tpBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    tpBtn.Text = "🚀 Teleport"
    tpBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    tpBtn.TextScaled = true
    tpBtn.Font = Enum.Font.SourceSansBold
    tpBtn.BorderSizePixel = 0
    tpBtn.Parent = mainContent
    
    local tpCorner = Instance.new("UICorner")
    tpCorner.CornerRadius = UDim.new(0, 6)
    tpCorner.Parent = tpBtn
    
    -- Base Button
    local baseBtn = Instance.new("TextButton")
    baseBtn.Size = UDim2.new(0, 120, 0, 25)
    baseBtn.Position = UDim2.new(0, 145, 0, 165)
    baseBtn.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
    baseBtn.Text = "🏠 Base"
    baseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    baseBtn.TextScaled = true
    baseBtn.Font = Enum.Font.SourceSansBold
    baseBtn.BorderSizePixel = 0
    baseBtn.Parent = mainContent
    
    local baseCorner = Instance.new("UICorner")
    baseCorner.CornerRadius = UDim.new(0, 6)
    baseCorner.Parent = baseBtn
    
    -- CONTENUTO TAB VISUAL
    local visualContent = contentFrames[2]
    
    -- ESP Player
    local espLabel = Instance.new("TextLabel")
    espLabel.Size = UDim2.new(0, 200, 0, 25)
    espLabel.Position = UDim2.new(0, 15, 0, 15)
    espLabel.BackgroundTransparency = 1
    espLabel.Text = "👁️ ESP Player"
    espLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    espLabel.TextScaled = true
    espLabel.Font = Enum.Font.SourceSans
    espLabel.TextXAlignment = Enum.TextXAlignment.Left
    espLabel.Parent = visualContent
    
    local espSwitch = createSwitch(visualContent, UDim2.new(1, -65, 0, 15), function(enabled)
        toggleESP("players", enabled)
    end, states.espPlayers)
    
    -- ESP Names
    local espNameLabel = Instance.new("TextLabel")
    espNameLabel.Size = UDim2.new(0, 200, 0, 25)
    espNameLabel.Position = UDim2.new(0, 15, 0, 50)
    espNameLabel.BackgroundTransparency = 1
    espNameLabel.Text = "🏷️ ESP Names"
    espNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    espNameLabel.TextScaled = true
    espNameLabel.Font = Enum.Font.SourceSans
    espNameLabel.TextXAlignment = Enum.TextXAlignment.Left
    espNameLabel.Parent = visualContent
    
    local espNameSwitch = createSwitch(visualContent, UDim2.new(1, -65, 0, 50), function(enabled)
        toggleESP("names", enabled)
    end, states.espNames)
    
    -- CONTENUTO TAB MISC
    local miscContent = contentFrames[3]
    
    local buyLabel = Instance.new("TextLabel")
    buyLabel.Size = UDim2.new(1, -20, 0, 30)
    buyLabel.Position = UDim2.new(0, 10, 0, 15)
    buyLabel.BackgroundTransparency = 1
    buyLabel.Text = "💰 More Features Coming Soon..."
    buyLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    buyLabel.TextScaled = true
    buyLabel.Font = Enum.Font.SourceSansItalic
    buyLabel.Parent = miscContent
    
    -- CONTENUTO TAB SERVER
    local serverContent = contentFrames[4]
    
    local serverLabel = Instance.new("TextLabel")
    serverLabel.Size = UDim2.new(1, -20, 0, 30)
    serverLabel.Position = UDim2.new(0, 10, 0, 15)
    serverLabel.BackgroundTransparency = 1
    serverLabel.Text = "🌐 Server Features Coming Soon..."
    serverLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    serverLabel.TextScaled = true
    serverLabel.Font = Enum.Font.SourceSansItalic
    serverLabel.Parent = serverContent
    
    -- Event handlers
    closeBtn.MouseButton1Click:Connect(function()
        -- Disattiva tutte le funzioni prima di chiudere
        for stateName, _ in pairs(states) do
            if states[stateName] then
                if stateName == "infiniteJump" then
                    toggleInfiniteJump(false)
                elseif stateName == "float" then
                    toggleFloat(false)
                elseif stateName == "speedBoost" then
                    toggleSpeedBoost(false)
                elseif stateName == "noclip" then
                    toggleNoclip(false)
                elseif stateName == "fly" then
                    toggleFly(false)
                elseif stateName == "espPlayers" or stateName == "espNames" then
                    toggleESP(stateName == "espPlayers" and "players" or "names", false)
                end
            end
        end
        
        waterHubGui:Destroy()
        waterHubGui = nil
        createMinimizedIcon()
    end)
    
    minimizeBtn.MouseButton1Click:Connect(function()
        waterHubGui:Destroy()
        waterHubGui = nil
        createMinimizedIcon()
    end)
    
    tpBtn.MouseButton1Click:Connect(function()
        createTeleportGui()
    end)
    
    baseBtn.MouseButton1Click:Connect(function()
        createBaseGui()
    end)
end

-- GUI Teleport
function createTeleportGui()
    local tpGui = Instance.new("ScreenGui")
    tpGui.Name = "TeleportGui"
    tpGui.Parent = CoreGui
    
    local tpFrame = createFrame(tpGui, UDim2.new(0, 200, 0, 120), UDim2.new(0.5, -100, 0.3, 0), Color3.fromRGB(40, 40, 40), 0.1)
    tpFrame.Active = true
    makeDraggable(tpFrame)
    
    local tpTitle = Instance.new("TextLabel")
    tpTitle.Size = UDim2.new(1, -40, 0, 30)
    tpTitle.Position = UDim2.new(0, 10, 0, 5)
    tpTitle.BackgroundTransparency = 1
    tpTitle.Text = "🚀 Teleport"
    tpTitle.TextColor3 = Color3.fromRGB(0, 170, 255)
    tpTitle.TextScaled = true
    tpTitle.Font = Enum.Font.SourceSansBold
    tpTitle.Parent = tpFrame
    
    local closeTPBtn = Instance.new("TextButton")
    closeTPBtn.Size = UDim2.new(0, 25, 0, 25)
    closeTPBtn.Position = UDim2.new(1, -30, 0, 5)
    closeTPBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    closeTPBtn.Text = "❌"
    closeTPBtn.TextScaled = true
    closeTPBtn.BorderSizePixel = 0
    closeTPBtn.Parent = tpFrame
    
    local upBtn = Instance.new("TextButton")
    upBtn.Size = UDim2.new(0, 80, 0, 30)
    upBtn.Position = UDim2.new(0, 20, 0, 45)
    upBtn.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    upBtn.Text = "⬆️ UP"
    upBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    upBtn.TextScaled = true
    upBtn.Font = Enum.Font.SourceSansBold
    upBtn.BorderSizePixel = 0
    upBtn.Parent = tpFrame
    
    local downBtn = Instance.new("TextButton")
    downBtn.Size = UDim2.new(0, 80, 0, 30)
    downBtn.Position = UDim2.new(0, 110, 0, 45)
    downBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    downBtn.Text = "⬇️ DOWN"
    downBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    downBtn.TextScaled = true
    downBtn.Font = Enum.Font.SourceSansBold
    downBtn.BorderSizePixel = 0
    downBtn.Parent = tpFrame
    
    -- Height input
    local heightLabel = Instance.new("TextLabel")
    heightLabel.Size = UDim2.new(0, 40, 0, 20)
    heightLabel.Position = UDim2.new(0, 20, 0, 85)
    heightLabel.BackgroundTransparency = 1
    heightLabel.Text = "Height:"
    heightLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    heightLabel.TextScaled = true
    heightLabel.Font = Enum.Font.SourceSans
    heightLabel.Parent = tpFrame
    
    local heightInput = Instance.new("TextBox")
    heightInput.Size = UDim2.new(0, 100, 0, 20)
    heightInput.Position = UDim2.new(0, 70, 0, 85)
    heightInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    heightInput.Text = "50"
    heightInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    heightInput.TextScaled = true
    heightInput.Font = Enum.Font.SourceSans
    heightInput.Parent = tpFrame
    
    -- Corners
    for _, btn in pairs({closeTPBtn, upBtn, downBtn}) do
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = btn
    end
    
    local heightCorner = Instance.new("UICorner")
    heightCorner.CornerRadius = UDim.new(0, 4)
    heightCorner.Parent = heightInput
    
    -- Events
    closeTPBtn.MouseButton1Click:Connect(function()
        tpGui:Destroy()
    end)
    
    upBtn.MouseButton1Click:Connect(function()
        local rootPart = getRootPart()
        local height = tonumber(heightInput.Text) or 50
        if rootPart then
            rootPart.CFrame = rootPart.CFrame + Vector3.new(0, height, 0)
        end
    end)
    
    downBtn.MouseButton1Click:Connect(function()
        local rootPart = getRootPart()
        local height = tonumber(heightInput.Text) or 50
        if rootPart then
            rootPart.CFrame = rootPart.CFrame - Vector3.new(0, height, 0)
        end
    end)
end

-- Base GUI
function createBaseGui()
    local baseGui = Instance.new("ScreenGui")
    baseGui.Name = "BaseGui"
    baseGui.Parent = CoreGui
    
    local baseFrame = createFrame(baseGui, UDim2.new(0, 200, 0, 120), UDim2.new(0.7, 0, 0.3, 0), Color3.fromRGB(40, 40, 40), 0.1)
    baseFrame.Active = true
    makeDraggable(baseFrame)
    
    local baseTitle = Instance.new("TextLabel")
    baseTitle.Size = UDim2.new(1, -40, 0, 30)
    baseTitle.Position = UDim2.new(0, 10, 0, 5)
    baseTitle.BackgroundTransparency = 1
    baseTitle.Text = "🏠 Base Setup"
    baseTitle.TextColor3 = Color3.fromRGB(0, 170, 255)
    baseTitle.TextScaled = true
    baseTitle.Font = Enum.Font.SourceSansBold
    baseTitle.Parent = baseFrame
    
    local closeBaseBtn = Instance.new("TextButton")
    closeBaseBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBaseBtn.Position = UDim2.new(1, -30, 0, 5)
    closeBaseBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    closeBaseBtn.Text = "❌"
    closeBaseBtn.TextScaled = true
    closeBaseBtn.BorderSizePixel = 0
    closeBaseBtn.Parent = baseFrame
    
    local setBaseBtn = Instance.new("TextButton")
    setBaseBtn.Size = UDim2.new(1, -20, 0, 30)
    setBaseBtn.Position = UDim2.new(0, 10, 0, 40)
    setBaseBtn.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
    setBaseBtn.Text = "📍 Set Base"
    setBaseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    setBaseBtn.TextScaled = true
    setBaseBtn.Font = Enum.Font.SourceSansBold
    setBaseBtn.BorderSizePixel = 0
    setBaseBtn.Parent = baseFrame
    
    local flyToBaseBtn = Instance.new("TextButton")
    flyToBaseBtn.Size = UDim2.new(1, -20, 0, 30)
    flyToBaseBtn.Position = UDim2.new(0, 10, 0, 80)
    flyToBaseBtn.BackgroundColor3 = Color3.fromRGB(0, 123, 255)
    flyToBaseBtn.Text = "✈️ Fly to Base"
    flyToBaseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    flyToBaseBtn.TextScaled = true
    flyToBaseBtn.Font = Enum.Font.SourceSansBold
    flyToBaseBtn.BorderSizePixel = 0
    flyToBaseBtn.Parent = baseFrame
    
    -- Corners
    for _, btn in pairs({setBaseBtn, flyToBaseBtn, closeBaseBtn}) do
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = btn
    end
    
    closeBaseBtn.MouseButton1Click:Connect(function()
        baseGui:Destroy()
    end)
    
    setBaseBtn.MouseButton1Click:Connect(function()
        local rootPart = getRootPart()
        if rootPart then
            basePosition = rootPart.Position
            setBaseBtn.Text = "✅ Base Set!"
            wait(1)
            setBaseBtn.Text = "📍 Set Base"
        end
    end)
    
    flyToBaseBtn.MouseButton1Click:Connect(function()
        if basePosition then
            flyToBase()
            baseGui:Destroy()
        end
    end)
end

-- Fly to Base function
function flyToBase()
    local rootPart = getRootPart()
    if not rootPart or not basePosition then return end
    
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    bodyVelocity.Parent = rootPart
    
    local targetPosition = Vector3.new(basePosition.X, basePosition.Y + 165, basePosition.Z)
    
    rootPart.CFrame = CFrame.lookAt(rootPart.Position, rootPart.Position - rootPart.CFrame.LookVector)
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not bodyVelocity or not bodyVelocity.Parent then
            connection:Disconnect()
            return
        end
        
        local direction = (targetPosition - rootPart.Position).Unit
        bodyVelocity.Velocity = direction * 50
        
        if (rootPart.Position - targetPosition).Magnitude < 10 then
            connection:Disconnect()
            bodyVelocity:Destroy()
            createDownButton()
        end
    end)
end

-- Down Button
function createDownButton()
    local downGui = Instance.new("ScreenGui")
    downGui.Name = "DownGui"
    downGui.Parent = CoreGui
    
    local downBtn = createFrame(downGui, UDim2.new(0, 100, 0, 50), UDim2.new(0.5, -50, 0.8, 0), Color3.fromRGB(220, 53, 69), 0.1)
    downBtn.Active = true
    
    local downLabel = Instance.new("TextLabel")
    downLabel.Size = UDim2.new(1, 0, 1, 0)
    downLabel.BackgroundTransparency = 1
    downLabel.Text = "⬇️ DOWN"
    downLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    downLabel.TextScaled = true
    downLabel.Font = Enum.Font.SourceSansBold
    downLabel.Parent = downBtn
    
    downBtn.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local rootPart = getRootPart()
            if rootPart and basePosition then
                rootPart.CFrame = CFrame.new(basePosition)
                downGui:Destroy()
            end
        end
    end)
end

-- Gestione respawn del personaggio
local function onCharacterAdded(character)
    wait(0.5) -- Aspetta che il personaggio sia completamente caricato
    
    -- Riapplica gli stati attivi
    if states.speedBoost then
        toggleSpeedBoost(true)
    end
    if states.infiniteJump then
        toggleInfiniteJump(true)
    end
    if states.float then
        toggleFloat(true)
    end
    if states.noclip then
        toggleNoclip(true)
    end
    if states.fly then
        toggleFly(true)
    end
end

-- Cleanup
Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        for _, connection in pairs(connections) do
            if connection and connection.Disconnect then
                connection:Disconnect()
            end
        end
        if floatBodyPosition then floatBodyPosition:Destroy() end
        if floatBodyGyro then floatBodyGyro:Destroy() end
        if flyBody then flyBody:Destroy() end
        if characterAddedConnection then
            characterAddedConnection:Disconnect()
        end
    end
end)

-- Setup character respawn handler
characterAddedConnection = player.CharacterAdded:Connect(onCharacterAdded)

-- Inizializzazione
spawn(function()
    wait(0.5)
    createMainGui()
end)
