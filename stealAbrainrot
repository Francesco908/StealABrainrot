-- main.lua
-- Entry point for setting up a Fluent UI for Roblox

-- Load Fluent library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Create the main window using correct API
local Window = Fluent:Window({
    Title = "Test UI",
    SubTitle = "by SKIBIDI",
    TabWidth = 160,
    Size = UDim2.fromOffset(400, 300),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl,
})

-- Add tabs using Window:Tab
local SettingsTab = Window:Tab("Settings")
local MainTab     = Window:Tab("Main")

-- SETTINGS TAB
local SettingsSection = SettingsTab:AddSection("Example Features")
local exampleToggle = SettingsSection:AddToggle("ExampleToggle", {
    Title = "Example Toggle",
    Description = "Enable or disable the example feature",
    Default = false,
    Callback = function(state)
        print("Example Toggle state:", state)
    end,
})

-- MAIN TAB
local MainSection = MainTab:AddSection("Actions")
MainSection:AddButton({
    Title = "Test Button",
    Description = "Press to run test action",
    Callback = function()
        print("Test Button pressed!")
        exampleToggle:SetValue(not exampleToggle.Value)
        Fluent:Notify({ Title = "Action", Content = "Test Button executed", Duration = 3 })
    end,
})

-- Note: Fluent:Window auto-displays and handles minimize via MinimizeKey

-- RESTORE ICON (when window is minimized)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

-- Create a ScreenGui to hold the restore icon
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FluentRestoreGui"
screenGui.Parent = playerGui

local restoreIcon = Instance.new("ImageButton")
restoreIcon.Name = "RestoreIcon"
restoreIcon.Size = UDim2.new(0, 50, 0, 50)
restoreIcon.Position = UDim2.new(1, -60, 1, -60)
restoreIcon.Image = "rbxassetid://123456789" -- replace with your image asset ID
restoreIcon.BackgroundTransparency = 1
restoreIcon.Visible = false
restoreIcon.Parent = screenGui

-- Show/hide icon based on Window:IsVisible (standard API)
RunService.RenderStepped:Connect(function()
    if not Window:IsVisible() then
        restoreIcon.Visible = true
    else
        restoreIcon.Visible = false
    end
end)

-- Click restores window (show the window)
restoreIcon.MouseButton1Click:Connect(function()
    Window:Display()
end)
