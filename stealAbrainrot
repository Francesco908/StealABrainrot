-- Water Hub - Roblox Script
-- Optimized for mobile users with comprehensive features

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

-- Variables
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Settings
local Settings = {
    AutoCollectMoney = false,
    SpeedBoost = false,
    JumpBoost = false,
    InfinityJump = false,
    GodMode = false,
    Float = false,
    StealHelper = false,
    ESP = {
        Players = false,
        Names = false
    },
    AutoLock = false,
    LockPoint = nil,
    HelperUp = 165,
    HelperDown = 50,
    SpeedValue = 16,
    JumpValue = 50
}

-- GUI Variables
local StealHelperGui = nil
local AutoLockGui = nil
local LockPointSet = false
local FloatingButton = nil
local MainGUIEnabled = true

-- Create Window
local Window = Fluent:CreateWindow({
    Title = "Water Hub",
    SubTitle = "Premium Mobile Script",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Addons setup
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("WaterHub")
SaveManager:SetFolder("WaterHub/Config")

-- Tabs
local Tabs = {
    Main = Window:AddTab({Title = "Main", Icon = "home"}),
    ESP = Window:AddTab({Title = "ESP", Icon = "eye"}),
    Misc = Window:AddTab({Title = "Misc", Icon = "settings"}),
    Settings = Window:AddTab({Title = "Configuration", Icon = "settings"})
}

local Options = Fluent.Options

-- Create floating reopen button
local function CreateFloatingButton()
    if FloatingButton then FloatingButton:Destroy() end
    
    local button = Instance.new("ScreenGui")
    button.Name = "FloatingReopen"
    button.Parent = Player.PlayerGui
    button.ResetOnSpawn = false
    
    local openButton = Instance.new("TextButton")
    openButton.Size = UDim2.new(0, 60, 0, 60)
    openButton.Position = UDim2.new(1, -70, 0.5, -30)
    openButton.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    openButton.BorderSizePixel = 0
    openButton.Text = "â‰¡"
    openButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    openButton.TextSize = 30
    openButton.Font = Enum.Font.GothamBold
    openButton.Parent = button
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.3, 0)
    corner.Parent = openButton
    
    openButton.MouseButton1Click:Connect(function()
        Window:Show()
        button:Destroy()
        FloatingButton = nil
        MainGUIEnabled = true
    end)
    
    FloatingButton = button
end

-- Mobile-friendly draggable function
local function MakeDraggable(frame, handle)
    handle = handle or frame
    
    local dragging = false
    local dragInput, mousePos, framePos
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            frame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)
end

-- Helper Functions
local function GetCharacter()
    return Player.Character or Player.CharacterAdded:Wait()
end

local function GetHumanoid()
    local char = GetCharacter()
    return char:WaitForChild("Humanoid")
end

local function GetRootPart()
    local char = GetCharacter()
    return char:WaitForChild("HumanoidRootPart")
end

-- Auto Collect Money Function
local function AutoCollectMoney()
    spawn(function()
        while Settings.AutoCollectMoney and task.wait(0.1) do
            for _, obj in pairs(Workspace:GetChildren()) do
                if obj.Name:lower():find("money") or obj.Name:lower():find("cash") or obj.Name:lower():find("coin") then
                    if obj:FindFirstChild("ClickDetector") then
                        fireclickdetector(obj.ClickDetector)
                    elseif obj:FindFirstChild("ProximityPrompt") then
                        fireproximityprompt(obj.ProximityPrompt)
                    end
                end
            end
        end
    end)
end

-- Speed Boost Function (Persistent)
local function SpeedBoost()
    spawn(function()
        while Settings.SpeedBoost and task.wait(0.1) do
            local humanoid = GetHumanoid()
            if humanoid then
                humanoid.WalkSpeed = Settings.SpeedValue
            end
        end
    end)
end

-- Jump Boost Function
local function JumpBoost()
    spawn(function()
        while Settings.JumpBoost and task.wait(0.1) do
            local humanoid = GetHumanoid()
            if humanoid then
                humanoid.JumpPower = Settings.JumpValue
            end
        end
    end)
end

-- Infinity Jump Function
local function InfinityJump()
    UserInputService.JumpRequest:Connect(function()
        if Settings.InfinityJump then
            local humanoid = GetHumanoid()
            if humanoid and humanoid:GetState() ~= Enum.HumanoidStateType.Dead then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

-- God Mode Function
local function GodMode()
    spawn(function()
        while Settings.GodMode and task.wait(0.1) do
            local humanoid = GetHumanoid()
            if humanoid then
                humanoid.Health = humanoid.MaxHealth
            end
        end
    end)
end

-- Float Function
local function Float()
    local bodyVelocity
    spawn(function()
        while Settings.Float do
            task.wait(0.1)
            local rootPart = GetRootPart()
            if rootPart and not bodyVelocity then
                bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = rootPart
            end
        end
        
        if bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end
    end)
end

-- Create Steal Helper GUI
local function CreateStealHelperGui()
    if StealHelperGui then StealHelperGui:Destroy() end
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "StealHelperGui"
    ScreenGui.Parent = Player.PlayerGui
    ScreenGui.ResetOnSpawn = false
    
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 250, 0, 150)
    Frame.Position = UDim2.new(0.5, -125, 0.5, -75)
    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    Frame.BorderSizePixel = 0
    Frame.Parent = ScreenGui
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 12)
    Corner.Parent = Frame
    
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.Position = UDim2.new(0, 0, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = "STEAL HELPER"
    Title.TextColor3 = Color3.fromRGB(220, 220, 255)
    Title.TextSize = 22
    Title.Font = Enum.Font.GothamBold
    Title.Parent = Frame
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0, 5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(120, 50, 50)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 18
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = Frame
    
    local UICornerClose = Instance.new("UICorner")
    UICornerClose.CornerRadius = UDim.new(0, 15)
    UICornerClose.Parent = CloseButton
    
    local UpButton = Instance.new("TextButton")
    UpButton.Size = UDim2.new(0.9, 0, 0, 40)
    UpButton.Position = UDim2.new(0.05, 0, 0.3, 0)
    UpButton.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
    UpButton.Text = "UP (" .. Settings.HelperUp .. ")"
    UpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    UpButton.TextSize = 20
    UpButton.Font = Enum.Font.Gotham
    UpButton.Parent = Frame
    
    local DownButton = Instance.new("TextButton")
    DownButton.Size = UDim2.new(0.9, 0, 0, 40)
    DownButton.Position = UDim2.new(0.05, 0, 0.65, 0)
    DownButton.BackgroundColor3 = Color3.fromRGB(120, 50, 50)
    DownButton.Text = "DOWN (" .. Settings.HelperDown .. ")"
    DownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    DownButton.TextSize = 20
    DownButton.Font = Enum.Font.Gotham
    DownButton.Parent = Frame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = UpButton
    UICorner:Clone().Parent = DownButton
    
    -- Mobile-friendly dragging
    MakeDraggable(Frame, Title)
    
    -- Button functions
    UpButton.MouseButton1Click:Connect(function()
        local rootPart = GetRootPart()
        if rootPart then
            rootPart.CFrame = rootPart.CFrame + Vector3.new(0, Settings.HelperUp, 0)
        end
    end)
    
    DownButton.MouseButton1Click:Connect(function()
        local rootPart = GetRootPart()
        if rootPart then
            rootPart.CFrame = rootPart.CFrame - Vector3.new(0, Settings.HelperDown, 0)
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
        StealHelperGui = nil
    end)
    
    StealHelperGui = ScreenGui
end

-- Create Auto Lock GUI
local function CreateAutoLockGui()
    if AutoLockGui then AutoLockGui:Destroy() end
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "AutoLockGui"
    ScreenGui.Parent = Player.PlayerGui
    ScreenGui.ResetOnSpawn = false
    
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 300, 0, 180)
    Frame.Position = UDim2.new(0.5, -150, 0.5, -90)
    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    Frame.BorderSizePixel = 0
    Frame.Parent = ScreenGui
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 12)
    Corner.Parent = Frame
    
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.Position = UDim2.new(0, 0, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = "AUTO LOCK"
    Title.TextColor3 = Color3.fromRGB(220, 220, 255)
    Title.TextSize = 22
    Title.Font = Enum.Font.GothamBold
    Title.Parent = Frame
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0, 5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(120, 50, 50)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 18
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = Frame
    
    local UICornerClose = Instance.new("UICorner")
    UICornerClose.CornerRadius = UDim.new(0, 15)
    UICornerClose.Parent = CloseButton
    
    local LockButton = Instance.new("TextButton")
    LockButton.Size = UDim2.new(0.9, 0, 0, 40)
    LockButton.Position = UDim2.new(0.05, 0, 0.3, 0)
    LockButton.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
    LockButton.Text = "LOCK POSITION"
    LockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    LockButton.TextSize = 20
    LockButton.Font = Enum.Font.Gotham
    LockButton.Parent = Frame
    
    local SetLockButton = Instance.new("TextButton")
    SetLockButton.Size = UDim2.new(0.9, 0, 0, 40)
    SetLockButton.Position = UDim2.new(0.05, 0, 0.65, 0)
    SetLockButton.BackgroundColor3 = Color3.fromRGB(50, 80, 120)
    SetLockButton.Text = "SET LOCK POINT"
    SetLockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    SetLockButton.TextSize = 20
    SetLockButton.Font = Enum.Font.Gotham
    SetLockButton.Parent = Frame
    
    local StatusLabel = Instance.new("TextLabel")
    StatusLabel.Size = UDim2.new(0.9, 0, 0, 25)
    StatusLabel.Position = UDim2.new(0.05, 0, 0.85, 0)
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Text = "Lock point not set"
    StatusLabel.TextColor3 = Color3.fromRGB(255, 150, 150)
    StatusLabel.TextSize = 18
    StatusLabel.Font = Enum.Font.Gotham
    StatusLabel.Parent = Frame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = LockButton
    UICorner:Clone().Parent = SetLockButton
    
    -- Mobile-friendly dragging
    MakeDraggable(Frame, Title)
    
    -- Button functions
    SetLockButton.MouseButton1Click:Connect(function()
        local rootPart = GetRootPart()
        if rootPart then
            Settings.LockPoint = rootPart.Position
            LockPointSet = true
            StatusLabel.Text = "Lock point set!"
            StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
            
            -- Save lock point permanently
            SaveManager:Save()
        end
    end)
    
    LockButton.MouseButton1Click:Connect(function()
        if not LockPointSet or not Settings.LockPoint then
            StatusLabel.Text = "Set lock point first!"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 150, 150)
            return
        end
        
        local humanoid = GetHumanoid()
        if humanoid then
            humanoid.Health = 0
            
            Player.CharacterAdded:Connect(function(newChar)
                task.wait(1)
                local newRootPart = newChar:WaitForChild("HumanoidRootPart")
                local newHumanoid = newChar:WaitForChild("Humanoid")
                
                if Settings.LockPoint then
                    newHumanoid:MoveTo(Settings.LockPoint)
                end
            end)
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
        AutoLockGui = nil
    end)
    
    AutoLockGui = ScreenGui
end

-- ESP Functions
local function CreateESP(player)
    if player == Player then return end
    
    local esp = {
        Player = player,
        Connections = {},
        Objects = {}
    }
    
    local function UpdateESP()
        if not Settings.ESP.Players then return end
        
        local character = player.Character
        if not character then return end
        
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end
        
        -- Create or update player ESP
        if not esp.Objects.Box then
            local billboardGui = Instance.new("BillboardGui")
            billboardGui.Size = UDim2.new(4, 0, 6, 0)
            billboardGui.StudsOffset = Vector3.new(0, 0, 0)
            billboardGui.Parent = humanoidRootPart
            
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundTransparency = 0.8
            frame.BorderSizePixel = 2
            frame.BorderColor3 = Color3.fromRGB(255, 50, 50)
            frame.Parent = billboardGui
            
            esp.Objects.Box = billboardGui
        end
        
        -- Create or update name ESP
        if Settings.ESP.Names and not esp.Objects.Name then
            local nameGui = Instance.new("BillboardGui")
            nameGui.Size = UDim2.new(0, 200, 0, 50)
            nameGui.StudsOffset = Vector3.new(0, 3, 0)
            nameGui.Parent = humanoidRootPart
            
            local nameLabel = Instance.new("TextLabel")
            nameLabel.Size = UDim2.new(1, 0, 1, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.Text = player.Name
            nameLabel.TextColor3 = Color3.fromRGB(255, 255, 150)
            nameLabel.TextSize = 18
            nameLabel.Font = Enum.Font.GothamBold
            nameLabel.Parent = nameGui
            
            esp.Objects.Name = nameGui
        end
    end
    
    local connection = RunService.Heartbeat:Connect(UpdateESP)
    esp.Connections[#esp.Connections + 1] = connection
    
    return esp
end

-- Main Tab Features
Tabs.Main:AddToggle("AutoCollectMoney", {
    Title = "Auto Collect Money",
    Description = "Automatically collect money items",
    Default = false,
    Callback = function(Value)
        Settings.AutoCollectMoney = Value
        if Value then
            AutoCollectMoney()
        end
    end
})

Tabs.Main:AddToggle("SpeedBoost", {
    Title = "Speed Boost",
    Description = "Persistent speed boost",
    Default = false,
    Callback = function(Value)
        Settings.SpeedBoost = Value
        if Value then
            SpeedBoost()
        else
            local humanoid = GetHumanoid()
            if humanoid then
                humanoid.WalkSpeed = 16
            end
        end
    end
})

Tabs.Main:AddToggle("JumpBoost", {
    Title = "Jump Boost",
    Description = "Increase jump power",
    Default = false,
    Callback = function(Value)
        Settings.JumpBoost = Value
        if Value then
            JumpBoost()
        else
            local humanoid = GetHumanoid()
            if humanoid then
                humanoid.JumpPower = 50
            end
        end
    end
})

Tabs.Main:AddToggle("InfinityJump", {
    Title = "Infinity Jump",
    Description = "Jump infinitely",
    Default = false,
    Callback = function(Value)
        Settings.InfinityJump = Value
        if Value then
            InfinityJump()
        end
    end
})

Tabs.Main:AddToggle("GodMode", {
    Title = "God Mode",
    Description = "Invincibility mode",
    Default = false,
    Callback = function(Value)
        Settings.GodMode = Value
        if Value then
            GodMode()
        end
    end
})

Tabs.Main:AddToggle("Float", {
    Title = "Float",
    Description = "Float in the air",
    Default = false,
    Callback = function(Value)
        Settings.Float = Value
        if Value then
            Float()
        end
    end
})

Tabs.Main:AddButton({
    Title = "Steal Helper",
    Description = "Open steal helper GUI",
    Callback = function()
        CreateStealHelperGui()
        Fluent:Notify({
            Title = "Steal Helper",
            Content = "Steal helper GUI opened",
            Duration = 3
        })
    end
})

-- ESP Tab Features
Tabs.ESP:AddToggle("ESPPlayers", {
    Title = "ESP Players",
    Description = "Show player ESP boxes",
    Default = false,
    Callback = function(Value)
        Settings.ESP.Players = Value
        if not Value then
            -- Clear ESP
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    for _, gui in pairs(player.Character.HumanoidRootPart:GetChildren()) do
                        if gui:IsA("BillboardGui") then
                            gui:Destroy()
                        end
                    end
                end
            end
            Fluent:Notify({
                Title = "ESP",
                Content = "Player ESP disabled",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "ESP",
                Content = "Player ESP enabled",
                Duration = 3
            })
        end
    end
})

Tabs.ESP:AddToggle("ESPNames", {
    Title = "ESP Names",
    Description = "Show player names",
    Default = false,
    Callback = function(Value)
        Settings.ESP.Names = Value
        Fluent:Notify({
            Title = "ESP",
            Content = Value and "Names enabled" or "Names disabled",
            Duration = 3
        })
    end
})

-- Misc Tab Features
Tabs.Misc:AddButton({
    Title = "Auto Lock",
    Description = "Open auto lock GUI",
    Callback = function()
        CreateAutoLockGui()
        Fluent:Notify({
            Title = "Auto Lock",
            Content = "Auto lock GUI opened",
            Duration = 3
        })
    end
})

Tabs.Misc:AddButton({
    Title = "Close GUI",
    Description = "Minimizes the GUI and shows reopen button",
    Callback = function()
        Window:Minimize()
        CreateFloatingButton()
        MainGUIEnabled = false
        Fluent:Notify({
            Title = "Water Hub",
            Content = "GUI minimized. Tap â‰¡ to reopen",
            Duration = 5
        })
    end
})

-- Player ESP Management
local playerESPs = {}

Players.PlayerAdded:Connect(function(player)
    playerESPs[player] = CreateESP(player)
end)

Players.PlayerRemoving:Connect(function(player)
    if playerESPs[player] then
        for _, connection in pairs(playerESPs[player].Connections) do
            connection:Disconnect()
        end
        playerESPs[player] = nil
    end
end)

-- Initialize ESP for existing players
for _, player in pairs(Players:GetPlayers()) do
    if player ~= Player then
        playerESPs[player] = CreateESP(player)
    end
end

-- Character respawn handling
Player.CharacterAdded:Connect(function(newChar)
    Character = newChar
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
    
    -- Reapply settings after respawn
    if Settings.SpeedBoost then
        SpeedBoost()
    end
    if Settings.JumpBoost then
        JumpBoost()
    end
    if Settings.GodMode then
        GodMode()
    end
    if Settings.Float then
        Float()
    end
    if Settings.AutoCollectMoney then
        AutoCollectMoney()
    end
    
    -- Recreate GUI elements if needed
    if StealHelperGui then
        CreateStealHelperGui()
    end
    if AutoLockGui then
        CreateAutoLockGui()
    end
    if not MainGUIEnabled then
        CreateFloatingButton()
    end
    
    -- Restore lock point if set
    if Settings.LockPoint then
        LockPointSet = true
    end
end)

-- Build configuration sections
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- Save lock point in settings
SaveManager:SetAutoLoadConfig(true, function(config)
    if config.LockPoint then
        Settings.LockPoint = config.LockPoint
        LockPointSet = true
    end
end)

SaveManager:SetAutoSaveConfig(true, function(config)
    config.LockPoint = Settings.LockPoint
    return config
end)

-- Initial notifications
Fluent:Notify({
    Title = "Water Hub",
    Content = "Premium script loaded!",
    SubContent = "Tap â‰¡ button to reopen GUI",
    Duration = 8
})

Fluent:Notify({
    Title = "Mobile Optimized",
    Content = "All features adapted for touch devices",
    Duration = 6
})

Window:SelectTab(1)

-- Load configuration
SaveManager:LoadAutoloadConfig()
