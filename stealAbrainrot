-- Water Hub Script - Ultimate Professional Edition v5.0
-- Fully optimized with enhanced bypass and minimal animations

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local VirtualUser = game:GetService("VirtualUser")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

-- Advanced Bypass Variables
local mt = getrawmetatable(game)
local old = mt.__namecall
local protect = newcclosure or protect_function

-- Variables
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local camera = Workspace.CurrentCamera
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Global variables
local waterHubGui = nil
local minimizedIcon = nil
local loadingGui = nil
local openGuis = {}
local connections = {}
local states = {
    infiniteJump = false,
    speedBoost = false,
    espPlayers = false,
    espLines = false,
    espBox = false,
    espSkeleton = false,
    espNames = false,
    noclip = false,
    fly = false,
    godMode = true,
    antiKick = true,
    antiBan = true,
    tpBase = false,
    stealHelper = false
}

local flyPart = nil
local basePosition = nil
local originalWalkSpeed = 16
local espObjects = {}
local noclipConnection = nil
local godModeConnection = nil

-- Enhanced Color Scheme
local colors = {
    primary = Color3.fromRGB(0, 170, 255),
    secondary = Color3.fromRGB(0, 140, 210),
    background = Color3.fromRGB(25, 30, 40),
    surface = Color3.fromRGB(35, 40, 50),
    surfaceLight = Color3.fromRGB(45, 50, 60),
    success = Color3.fromRGB(40, 167, 69),
    danger = Color3.fromRGB(220, 53, 69),
    warning = Color3.fromRGB(255, 193, 7),
    text = Color3.fromRGB(255, 255, 255),
    textSecondary = Color3.fromRGB(200, 200, 200)
}

-- Enhanced Anticheat Bypass Setup
local function setupBypass()
    pcall(function()
        setreadonly(mt, false)
        
        local oldIndex = mt.__index
        local oldNewIndex = mt.__newindex
        
        mt.__index = newcclosure(function(self, key)
            if checkcaller() then
                return oldIndex(self, key)
            end
            if tostring(self) == "Humanoid" then
                if key == "WalkSpeed" then return 16
                elseif key == "JumpPower" then return 50
                end
            end
            return oldIndex(self, key)
        end)
        
        mt.__newindex = newcclosure(function(self, key, value)
            if checkcaller() then
                return oldNewIndex(self, key, value)
            end
            if key == "WalkSpeed" or key == "JumpPower" or key == "HipHeight" then
                return
            end
            return oldNewIndex(self, key, value)
        end)
        
        mt.__namecall = protect(function(self, ...)
            local method = getnamecallmethod()
            local args = {...}
            if method == "Kick" or method == "kick" then return nil end
            if method == "GetPropertyChangedSignal" then
                if args[1] == "CFrame" or args[1] == "Position" then
                    return Instance.new("BindableEvent").Event
                end
            end
            if (method == "FireServer" or method == "InvokeServer") and (self:IsA("RemoteEvent") or self:IsA("RemoteFunction")) then
                local name = tostring(self)
                if name:lower():find("anti") or name:lower():find("cheat") or name:lower():find("ban") or 
                   name:lower():find("kick") or name:lower():find("detect") or name:lower():find("flag") then
                    return nil
                end
            end
            return old(self, ...)
        end)
        
        setreadonly(mt, true)
    end)
    
    pcall(function()
        for _, v in pairs(getconnections(game.Close)) do v:Disable() end
    end)
    
    pcall(function()
        for _, v in pairs(getconnections(player.Idled)) do v:Disable() end
    end)
    
    player.Idled:Connect(function()
        VirtualUser:Button2Down(Vector2.new(0, 0), Workspace.CurrentCamera.CFrame)
        wait(1)
        VirtualUser:Button2Up(Vector2.new(0, 0), Workspace.CurrentCamera.CFrame)
    end)
end

-- Utility Functions
local function getCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

local function getHumanoid()
    local char = getCharacter()
    return char and char:FindFirstChildOfClass("Humanoid")
end

local function getRootPart()
    local char = getCharacter()
    return char and (char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:WaitForChild("HumanoidRootPart", 2))
end

-- UI Creation
local function createFrame(parent, size, position, color, transparency)
    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = transparency or 0
    frame.BorderSizePixel = 0
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = frame
    
    return frame
end

local function createButton(parent, size, position, color, text)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = color
    button.Text = text
    button.TextColor3 = colors.text
    button.TextScaled = true
    button.Font = Enum.Font.SourceSansBold
    button.BorderSizePixel = 0
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = button
    
    return button
end

local function createSwitch(parent, position, callback, initialState)
    local switchFrame = createFrame(parent, UDim2.new(0, 50, 0, 25), position, 
        initialState and colors.primary or Color3.fromRGB(80, 80, 80), 0)
    switchFrame.Active = true
    
    local switchButton = createFrame(switchFrame, UDim2.new(0, 21, 0, 21), 
        initialState and UDim2.new(1, -23, 0, 2) or UDim2.new(0, 2, 0, 2), 
        Color3.fromRGB(255, 255, 255), 0)
    
    local isOn = initialState or false
    
    local function toggle()
        isOn = not isOn
        switchButton.Position = isOn and UDim2.new(1, -23, 0, 2) or UDim2.new(0, 2, 0, 2)
        switchFrame.BackgroundColor3 = isOn and colors.primary or Color3.fromRGB(80, 80, 80)
        if callback then callback(isOn) end
    end
    
    switchFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            toggle()
        end
    end)
    
    return switchFrame, toggle
end

local function makeDraggable(frame, dragArea)
    dragArea = dragArea or frame
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    local function update(input)
        if dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
    
    dragArea.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.User addressedType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)
    
    dragArea.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            update(input)
        end
    end)
end

-- Feature Feature Functions
local toggleGodMode, toggleInfiniteJump, toggleSpeedBoost, toggleNoclip, toggleFly, toggleESP
local createMainGui, createMinimizedIcon

toggleGodMode = function(enabled)
    states.godMode = enabled
    if godModeConnection then
        godModeConnection:Disconnect()
        godModeConnection = nil
    end
    if enabled then
        godModeConnection = RunService.Heartbeat:Connect(function()
            local humanoid = getHumanoid()
            if humanoid then
                humanoid.Health = humanoid.MaxHealth
                pcall(function()
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
                end)
                local char = getCharacter()
                if char and not char:FindFirstChild("ForceField") then
                    local ff = Instance.new("ForceField")
                    ff.Visible = false
                    ff.Parent = char
                end
            end
        end)
    end
end

toggleInfiniteJump = function(enabled)
    states.infiniteJump = enabled
    if connections.infiniteJump then connections.infiniteJump:Disconnect() connections.infiniteJump = nil end
    if connections.jumpHeight then connections.jumpHeight:Disconnect() connections.jumpHeight = nil end
    
    if enabled then
        connections.infiniteJump = UserInputService.JumpRequest:Connect(function()
            local humanoid = getHumanoid()
            local rootPart = getRootPart()
            if humanoid and rootPart and humanoid:GetState() ~= Enum.HumanoidStateType.Dead then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
                bodyVelocity.Velocity = Vector3.new(0, 60, 0)
                bodyVelocity.Parent = rootPart
                game:GetService("Debris"):AddItem(bodyVelocity, 0.1)
            end
        end)
        connections.jumpHeight = RunService.Heartbeat:Connect(function()
            local humanoid = getHumanoid()
            if humanoid then humanoid.JumpPower = 50 humanoid.JumpHeight = 7.2 end
        end)
    end
end

toggleSpeedBoost = function(enabled)
    states.speedBoost = enabled
    if connections.speedBoost then connections.speedBoost:Disconnect() connections.speedBoost = nil end
    local humanoid = getHumanoid()
    if humanoid then originalWalkSpeed = 16 end
    
    if enabled then
        connections.speedBoost = RunService.Heartbeat:Connect(function()
            local humanoid = getHumanoid()
            local rootPart = getRootPart()
            if humanoid and rootPart then
                humanoid.WalkSpeed = 25
                if humanoid.MoveDirection.Magnitude > 0 then
                    local moveDirection = humanoid.MoveDirection.Unit
                    rootPart.Velocity = Vector3.new(moveDirection.X * 25, rootPart.Velocity.Y, moveDirection.Z * 25)
                end
            end
        end)
    else
        if humanoid then humanoid.WalkSpeed = originalWalkSpeed end
    end
end

toggleNoclip = function(enabled)
    states.noclip = enabled
    if noclipConnection then noclipConnection:Disconnect() noclipConnection = nil end
    
    if enabled then
        noclipConnection = RunService.Stepped:Connect(function()
            local character = getCharacter()
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then part.CanCollide = false end
                end
            end
        end)
    else
        local character = getCharacter()
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then part.CanCollide = true end
            end
        end
    end
end

toggleFly = function(enabled)
    states.fly = enabled
    if connections.flyControl then connections.flyControl:Disconnect() connections.flyControl = nil end
    if flyPart then flyPart:Destroy() flyPart = nil end
    
    if enabled then
        local humanoid = getHumanoid()
        if humanoid then humanoid.PlatformStand = false end
        flyPart = Instance.new("Part")
        flyPart.Size = Vector3.new(5, 0.2, 5)
        flyPart.Transparency = 1
        flyPart.CanCollide = true
        flyPart.Anchored = true
        flyPart.Name = "FlyPart"
        flyPart.Parent = Workspace
        
        connections.flyControl = RunService.Heartbeat:Connect(function()
            local rootPart = getRootPart()
            local humanoid = getHumanoid()
            if not rootPart or not humanoid or not flyPart then 
                states.fly = false
                return 
            end
            flyPart.CFrame = CFrame.new(rootPart.Position - Vector3.new(0, 3.5, 0))
            local cam = Workspace.CurrentCamera
            local moveVector = Vector3.new(0, 0, 0)
            
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveVector = moveVector + cam.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveVector = moveVector - cam.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveVector = moveVector - cam.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveVector = moveVector + cam.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveVector = moveVector + Vector3.new(0, 1, 0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then moveVector = moveVector - Vector3.new(0, 1, 0) end
            
            local speed = 50
            rootPart.Velocity = moveVector * speed
            rootPart.CFrame = CFrame.new(rootPart.Position) * CFrame.Angles(0, math.rad(rootPart.Orientation.Y), 0)
        end)
    else
        if flyPart then flyPart:Destroy() flyPart = nil end
        local rootPart = getRootPart()
        if rootPart then rootPart.Velocity = Vector3.new(0, 0, 0) end
    end
end

local function createAdvancedESP(targetPlayer)
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local character = targetPlayer.Character
    local rootPart = character.HumanoidRootPart
    
    if espObjects[targetPlayer] then
        for _, obj in pairs(espObjects[targetPlayer]) do if obj then obj:Destroy() end end
    end
    espObjects[targetPlayer] = {}
    
    if states.espBox then
        local box = Instance.new("BoxHandleAdornment")
        box.Size = character:GetExtentsSize()
        box.Color3 = Color3.fromRGB(255, 100, 100)
        box.Transparency = 0.3
        box.AlwaysOnTop = true
        box.ZIndex = 10
        box.Adornee = rootPart
        box.Parent = rootPart
        table.insert(espObjects[targetPlayer], box)
    end
    
    if states.espLines then
        local myRoot = getRootPart()
        if myRoot then
            local beam = Instance.new("Beam")
            beam.Color = ColorSequence.new(Color3.fromRGB(100, 255, 100))
            beam.Transparency = NumberSequence.new(0.5)
            beam.Width0 = 0.1
            beam.Width1 = 0.1
            beam.FaceCamera = true
            local attachment0 = Instance.new("Attachment", rootPart)
            local attachment1 = Instance.new("Attachment", myRoot)
            beam.Attachment0 = attachment0
            beam.Attachment1 = attachment1
            beam.Parent = rootPart
            table.insert(espObjects[targetPlayer], beam)
            table.insert(espObjects[targetPlayer], attachment0)
            table.insert(espObjects[targetPlayer], attachment1)
        end
    end
    
    if states.espNames then
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = rootPart
        billboard.Size = UDim2.new(0, 200, 0, 80)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = rootPart
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = targetPlayer.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextScaled = true
        nameLabel.Font = Enum.Font.SourceSansBold
        nameLabel.TextStrokeTransparency = 0
        nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        nameLabel.Parent = billboard
        
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local healthLabel = Instance.new("TextLabel")
            healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
            healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
            healthLabel.BackgroundTransparency = 1
            healthLabel.Text = math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth)
            healthLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            healthLabel.TextScaled = true
            healthLabel.Font = Enum.Font.SourceSans
            healthLabel.TextStrokeTransparency = 0
            healthLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            healthLabel.Parent = billboard
        end
        table.insert(espObjects[targetPlayer], billboard)
    end
end

toggleESP = function(espType, enabled)
    states[espType] = enabled
    for player, objects in pairs(espObjects) do
        for _, obj in pairs(objects) do if obj then obj:Destroy() end end
    end
    espObjects = {}
    if connections.espUpdate then connections.espUpdate:Disconnect() connections.espUpdate = nil end
    
    if states.espBox or states.espLines or states.espSkeleton or states.espNames then
        connections.espUpdate = RunService.Heartbeat:Connect(function()
            for _, targetPlayer in pairs(Players:GetPlayers()) do
                if targetPlayer ~= player then createAdvancedESP(targetPlayer) end
            end
        end)
    end
end

local function teleportToBase()
    if not basePosition then
        StarterGui:SetCore("SendNotification", {Title = "Water Hub", Text = "Please set a base position first!", Duration = 3})
        return false
    end
    
    local rootPart = getRootPart()
    local humanoid = getHumanoid()
    if not rootPart or not humanoid then return false end
    
    local wasNoclip = states.noclip
    if not wasNoclip then toggleNoclip(true) end
    
    rootPart.CFrame = CFrame.new(rootPart.Position.X, 165, rootPart.Position.Z)
    wait(2)
    
    local targetPosition = Vector3.new(basePosition.X, 165, basePosition.Z)
    local startPosition = rootPart.Position
    local distance = (targetPosition - startPosition).Magnitude
    local flyDuration = math.max(distance / 50, 1)
    local elapsed = 0
    
    local flyConnection = RunService.Heartbeat:Connect(function(dt)
        elapsed = elapsed + dt
        local progress = math.min(elapsed / flyDuration, 1)
        local newPosition = startPosition:Lerp(targetPosition, progress)
        rootPart.CFrame = CFrame.new(newPosition)
        rootPart.Velocity = Vector3.new(0, 0, 0)
        if progress >= 1 then flyConnection:Disconnect() end
    end)
    
    wait(flyDuration)
    wait(2)
    if not wasNoclip then toggleNoclip(false) end
    
    local downGui = Instance.new("ScreenGui")
    downGui.Name = "DownButton"
    downGui.Parent = CoreGui
    downGui.ResetOnSpawn = false
    
    local downBtn = createButton(downGui, UDim2.new(0, 150, 0, 60), UDim2.new(0.5, -75, 0.5, -30), 
        colors.danger, "⬇️ Down")
    downBtn.Font = Enum.Font.SourceSansBold
    downBtn.TextSize = 24
    
    downBtn.MouseButton1Click:Connect(function()
        if basePosition then
            rootPart.CFrame = CFrame.new(basePosition)
            downGui:Destroy()
        end
    end)
    return true
end

local tpBaseGui = nil
local function toggleTPBase(enabled)
    states.tpBase = enabled
    if enabled then
        if not tpBaseGui or not tpBaseGui.Parent then
            tpBaseGui = Instance.new("ScreenGui")
            tpBaseGui.Name = "TPBaseGui"
            tpBaseGui.Parent = CoreGui
            tpBaseGui.ResetOnSpawn = false
            table.insert(openGuis, tpBaseGui)
            
            local frame = createFrame(tpBaseGui, UDim2.new(0, 250, 0, 150), UDim2.new(0.5, -125, 0.3, 0), 
                colors.surface, 0.1)
            frame.Active = true
            makeDraggable(frame)
            
            local header = createFrame(frame, UDim2.new(1, 0, 0, 35), UDim2.new(0, 0, 0, 0), colors.primary, 0)
            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, -40, 1, 0)
            title.Position = UDim2.new(0, 10, 0, 0)
            title.BackgroundTransparency = 1
            title.Text = "📍 Base System"
            title.TextColor3 = colors.text
            title.TextScaled = true
            title.Font = Enum.Font.SourceSansBold
            title.Parent = header
            
            local closeBtn = createButton(header, UDim2.new(0, 30, 0, 30), UDim2.new(1, -35, 0.5, -15), 
                colors.danger, "×")
            local setBtn = createButton(frame, UDim2.new(0.9, 0, 0, 35), UDim2.new(0.05, 0, 0, 50), 
                colors.success, "📍 Set Base")
            local tpBtn = createButton(frame, UDim2.new(0.9, 0, 0, 35), UDim2.new(0.05, 0, 0, 95), 
                colors.warning, "🚀 Teleport to Base")
            
            closeBtn.MouseButton1Click:Connect(function()
                tpBaseGui:Destroy()
                tpBaseGui = nil
                states.tpBase = false
            end)
            setBtn.MouseButton1Click:Connect(function()
                local rootPart = getRootPart()
                if rootPart then
                    basePosition = rootPart.Position
                    StarterGui:SetCore("SendNotification", {Title = "Water Hub", Text = "Base position set!", Duration = 2})
                end
            end)
            tpBtn.MouseButton1Click:Connect(function()
                teleportToBase()
            end)
        end
    else
        if tpBaseGui then tpBaseGui:Destroy() tpBaseGui = nil end
    end
end

local stealHelperGui = nil
local stealIsAtTop = false
local function toggleStealHelper(enabled)
    states.stealHelper = enabled
    if enabled then
        if not stealHelperGui or not stealHelperGui.Parent then
            stealHelperGui = Instance.new("ScreenGui")
            stealHelperGui.Name = "StealHelperGui"
            stealHelperGui.Parent = CoreGui
            stealHelperGui.ResetOnSpawn = false
            table.insert(openGuis, stealHelperGui)
            
            local frame = createFrame(stealHelperGui, UDim2.new(0, 180, 0, 120), UDim2.new(0.8, -90, 0.5, -60), 
                colors.surface, 0.1)
            frame.Active = true
            makeDraggable(frame)
            
            local header = createFrame(frame, UDim2.new(1, 0, 0, 30), UDim2.new(0, 0, 0, 0), colors.primary, 0)
            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, -35, 1, 0)
            title.Position = UDim2.new(0, 10, 0, 0)
            title.BackgroundTransparency = 1
            title.Text = "💰 Steal Helper"
            title.TextColor3 = colors.text
            title.TextScaled = true
            title.Font = Enum.Font.SourceSansBold
            title.Parent = header
            
            local closeBtn = createButton(header, UDim2.new(0, 25, 0, 25), UDim2.new(1, -30, 0.5, -12.5), 
                colors.danger, "×")
            local upBtn = createButton(frame, UDim2.new(0.43, 0, 0, 35), UDim2.new(0.05, 0, 0, 45), 
                colors.success, "⬆️ Up")
            local downBtn = createButton(frame, UDim2.new(0.43, 0, 0, 35), UDim2.new(0.52, 0, 0, 45), 
                colors.danger, "⬇️ Down")
            
            closeBtn.MouseButton1Click:Connect(function()
                stealHelperGui:Destroy()
                stealHelperGui = nil
                states.stealHelper = false
            end)
            upBtn.MouseButton1Click:Connect(function()
                local rootPart = getRootPart()
                if rootPart then
                    rootPart.CFrame = CFrame.new(rootPart.Position.X, 165, rootPart.Position.Z)
                    stealIsAtTop = true
                end
            end)
            downBtn.MouseButton1Click:Connect(function()
                local rootPart = getRootPart()
                if rootPart then
                    rootPart.CFrame = rootPart.CFrame - Vector3.new(0, 50, 0)
                end
            end)
        end
    else
        if stealHelperGui then stealHelperGui:Destroy() stealHelperGui = nil end
    end
end

createMinimizedIcon = function()
    if minimizedIcon then minimizedIcon:Destroy() end
    minimizedIcon = Instance.new("ScreenGui")
    minimizedIcon.Name = "WaterHubMinimized"
    minimizedIcon.Parent = CoreGui
    minimizedIcon.ResetOnSpawn = false
    
    local waterDrop = Instance.new("ImageButton")
    waterDrop.Size = UDim2.new(0, 70, 0, 70)
    waterDrop.Position = UDim2.new(0, 20, 0, 20)
    waterDrop.BackgroundTransparency = 1
    waterDrop.Image = "rbxassetid://6034684930"
    waterDrop.ImageColor3 = colors.primary
    waterDrop.Parent = minimizedIcon
    waterDrop.Active = true
    makeDraggable(waterDrop)
    
    waterDrop.MouseButton1Click:Connect(function()
        minimizedIcon:Destroy()
        minimizedIcon = nil
        createMainGui()
    end)
end

createMainGui = function()
    if waterHubGui then waterHubGui:Destroy() end
    waterHubGui = Instance.new("ScreenGui")
    waterHubGui.Name = "WaterHubMain"
    waterHubGui.Parent = CoreGui
    waterHubGui.ResetOnSpawn = false
    table.insert(openGuis, waterHubGui)
    
    local mainFrame = createFrame(waterHubGui, UDim2.new(0, 350, 0, 400), UDim2.new(0.5, -175, 0.5, -200), 
        Color3.fromRGB(40, 45, 55), 0.15)
    mainFrame.Active = true
    
    local header = createFrame(mainFrame, UDim2.new(1, 0, 0, 40), UDim2.new(0, 0, 0, 0), colors.primary, 0)
    makeDraggable(mainFrame, header)
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.6, 0, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "💧 Water Hub v5"
    title.TextColor3 = colors.text
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    
    local minimizeBtn = createButton(header, UDim2.new(0, 30, 0, 30), UDim2.new(1, -70, 0.5, -15), 
        colors.warning, "−")
    local closeBtn = createButton(header, UDim2.new(0, 30, 0, 30), UDim2.new(1, -35, 0.5, -15), 
        colors.danger, "×")
    
    local tabContainer = createFrame(mainFrame, UDim2.new(1, -20, 0, 35), UDim2.new(0, 10, 0, 50), 
        colors.surface, 0.1)
    local tabs = {"Main", "Visual", "Server"}
    local tabButtons = {}
    local contentFrames = {}
    
    for i, tabName in ipairs(tabs) do
        local tabBtn = createButton(tabContainer, UDim2.new(0.33, -5, 1, -10), 
            UDim2.new((i-1) * 0.33 + 0.02, 0, 0, 5), i == 1 and colors.primary or colors.surface, tabName)
        tabBtn.Font = Enum.Font.SourceSans
        tabButtons[i] = tabBtn
        
        local contentFrame = createFrame(mainFrame, UDim2.new(1, -20, 1, -105), UDim2.new(0, 10, 0, 95), 
            colors.surface, 0.05)
        contentFrame.Visible = (i == 1)
        contentFrame.ClipsDescendants = true
        
        local scrollFrame = Instance.new("ScrollingFrame")
        scrollFrame.Size = UDim2.new(1, -10, 1, -10)
        scrollFrame.Position = UDim2.new(0, 5, 0, 5)
        scrollFrame.BackgroundTransparency = 1
        scrollFrame.BorderSizePixel = 0
        scrollFrame.ScrollBarThickness = 6
        scrollFrame.ScrollBarImageColor3 = colors.primary
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        scrollFrame.Parent = contentFrame
        contentFrames[i] = scrollFrame
    end
    
    for i, btn in ipairs(tabButtons) do
        btn.MouseButton1Click:Connect(function()
            for j, frame in ipairs(contentFrames) do frame.Parent.Visible = (j == i) end
            for j, button in ipairs(tabButtons) do
                button.BackgroundColor3 = (j == i) and colors.primary or colors.surface
            end
        end)
    end
    
    local mainContent = contentFrames[1]
    local yPos = 10
    local function addFeature(text, icon, callback, initialState)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 35)
        container.Position = UDim2.new(0, 10, 0, yPos)
        container.BackgroundTransparency = 1
        container.Parent = mainContent
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -60, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = icon .. " " .. text
        label.TextColor3 = colors.text
        label.TextScaled = true
        label.Font = Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = container
        
        createSwitch(container, UDim2.new(1, -55, 0.5, -12.5), callback, initialState)
        yPos = yPos + 40
    end
    
    addFeature("God Mode", "🛡️", toggleGodMode, states.godMode)
    addFeature("Infinite Jump", "🦘", toggleInfiniteJump, states.infiniteJump)
    addFeature("Speed Boost", "⚡", toggleSpeedBoost, states.speedBoost)
    addFeature("Noclip", "👻", toggleNoclip, states.noclip)
    addFeature("Fly", "✈️", toggleFly, states.fly)
    addFeature("TP Base", "📍", toggleTPBase, states.tpBase)
    addFeature("Steal Helper", "💰", toggleStealHelper, states.stealHelper)
    
    local visualContent = contentFrames[2]
    yPos = 10
    local function addESP(text, icon, espType)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 35)
        container.Position = UDim2.new(0, 10, 0, yPos)
        container.BackgroundTransparency = 1
        container.Parent = visualContent
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -60, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = icon .. " " .. text
        label.TextColor3 = colors.text
        label.TextScaled = true
        label.Font = Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = container
        
        createSwitch(container, UDim2.new(1, -55, 0.5, -12.5), function(enabled) toggleESP(espType, enabled) end, states[espType])
        yPos = yPos + 40
    end
    
    addESP("ESP Box", "📦", "espBox")
    addESP("ESP Lines", "📐", "espLines")
    addESP("ESP Skeleton", "💀", "espSkeleton")
    addESP("ESP Names", "🏷️", "espNames")
    
    local serverContent = contentFrames[3]
    yPos = 10
    local rejoinBtn = createButton(serverContent, UDim2.new(0.9, 0, 0, 40), UDim2.new(0.05, 0, 0, yPos), 
        colors.primary, "Rejoin Server")
    rejoinBtn.MouseButton1Click:Connect(function() TeleportService:Teleport(game.PlaceId, player) end)
    yPos = yPos + 50
    
    local leaveBtn = createButton(serverContent, UDim2.new(0.9, 0, 0, 40), UDim2.new(0.05, 0, 0, yPos), 
        colors.danger, "Leave Game")
    leaveBtn.MouseButton1Click:Connect(function() player:Kick("Left via Water Hub") end)
    
    minimizeBtn.MouseButton1Click:Connect(function()
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 70, 0, 70),
            Position = UDim2.new(0, 20, 0, 20)
        }):Play()
        wait(0.3)
        waterHubGui:Destroy()
        createMinimizedIcon()
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }):Play()
        wait(0.3)
        cleanup()
    end)
end

local function createLoadingScreen()
    loadingGui = Instance.new("ScreenGui")
    loadingGui.Name = "WaterHubLoading"
    loadingGui.Parent = CoreGui
    loadingGui.ResetOnSpawn = false
    
    local bg = Instance.new("Frame")
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.BackgroundColor3 = colors.background
    bg.Parent = loadingGui
    
    for i = 1, 10 do
        local particle = Instance.new("Frame")
        particle.Size = UDim2.new(0, 5, 0, 5)
        particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
        particle.BackgroundColor3 = colors.primary
        particle.Parent = bg
        spawn(function()
            while loadingGui and loadingGui.Parent do
                particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
                wait(0.5)
            end
        end)
    end
    
    local loadingLabel = Instance.new("TextLabel")
    loadingLabel.Size = UDim2.new(0, 200, 0, 50)
    loadingLabel.Position = UDim2.new(0.5, -100, 0.5, -25)
    loadingLabel.BackgroundTransparency = 1
    loadingLabel.Text = "Loading Water Hub..."
    loadingLabel.TextColor3 = colors.text
    loadingLabel.TextScaled = true
    loadingLabel.Font = Enum.Font.SourceSansBold
    loadingLabel.Parent = bg
    
    wait(2)
    loadingGui:Destroy()
    createMainGui()
end

function cleanup()
    for _, conn in pairs(connections) do if conn then conn:Disconnect() end end
    connections = {}
    for _, gui in pairs(openGuis) do if gui then gui:Destroy() end end
    if waterHubGui then waterHubGui:Destroy() end
    if minimizedIcon then minimizedIcon:Destroy() end
end

setupBypass()
createLoadingScreen()
