-- Water Hub Script - Ultimate Professional Edition v5.0
-- Fully optimized with enhanced bypass and bug fixes

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local StarterGui = game:GetService("StarterGui")

-- Advanced Bypass Variables
local mt = getrawmetatable(game)
local old = mt.__namecall
local protect = newcclosure or protect_function
local hookfunction = hookfunction or function() end
local getsenv = getsenv or function() return {} end

-- Variables
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local camera = workspace.CurrentCamera

-- Mobile detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Global variables
local waterHubGui = nil
local minimizedIcon = nil
local loadingGui = nil
local openGuis = {}
local connections = {}
local states = {
    infiniteJump = false,
    speedBoost = false,
    espPlayers = false,
    espLines = false,
    espBox = false,
    espSkeleton = false,
    espNames = false,
    noclip = false,
    fly = false,
    godMode = true,
    antiKick = true,
    antiBan = true,
    tpBase = false,
    stealHelper = false,
    float = false
}

local flyPart = nil
local basePosition = nil
local originalWalkSpeed = 16
local originalJumpPower = 50
local characterAddedConnection = nil
local espObjects = {}
local noclipConnection = nil
local godModeConnection = nil
local floatVelocity = nil
local flyPlatform = nil
local touchGui = nil
local downButton = nil

-- Enhanced Color Scheme
local colors = {
    primary = Color3.fromRGB(0, 170, 255),
    secondary = Color3.fromRGB(0, 140, 210),
    background = Color3.fromRGB(25, 30, 40),
    surface = Color3.fromRGB(35, 40, 50),
    surfaceLight = Color3.fromRGB(45, 50, 60),
    success = Color3.fromRGB(40, 167, 69),
    danger = Color3.fromRGB(220, 53, 69),
    warning = Color3.fromRGB(255, 193, 7),
    text = Color3.fromRGB(255, 255, 255),
    textSecondary = Color3.fromRGB(200, 200, 200),
    glow = Color3.fromRGB(100, 200, 255)
}

-- Enhanced Anticheat Bypass Setup
local function setupBypass()
    -- Method 1: Advanced metatable hooking
    pcall(function()
        setreadonly(mt, false)
        
        local oldIndex = mt.__index
        local oldNewIndex = mt.__newindex
        
        mt.__index = newcclosure(function(self, key)
            if checkcaller() then
                return oldIndex(self, key)
            end
            
            -- Spoof WalkSpeed and JumpPower
            if tostring(self) == "Humanoid" then
                if key == "WalkSpeed" then
                    return 16
                elseif key == "JumpPower" then
                    return 50
                end
            end
            
            return oldIndex(self, key)
        end)
        
        mt.__newindex = newcclosure(function(self, key, value)
            if checkcaller() then
                return oldNewIndex(self, key, value)
            end
            
            -- Block suspicious property changes
            if key == "WalkSpeed" or key == "JumpPower" or key == "HipHeight" then
                return
            end
            
            return oldNewIndex(self, key, value)
        end)
        
        mt.__namecall = protect(function(self, ...)
            local method = getnamecallmethod()
            local args = {...}
            
            -- Block kick/ban attempts
            if method == "Kick" or method == "kick" then
                return nil
            end
            
            -- Block teleport detection
            if method == "GetPropertyChangedSignal" then
                if args[1] == "CFrame" or args[1] == "Position" then
                    return Instance.new("BindableEvent").Event
                end
            end
            
            -- Block remote events that might be anticheat
            if (method == "FireServer" or method == "InvokeServer") and self:IsA("RemoteEvent") or self:IsA("RemoteFunction") then
                local name = tostring(self)
                if name:lower():find("anti") or name:lower():find("cheat") or name:lower():find("ban") or 
                   name:lower():find("kick") or name:lower():find("detect") or name:lower():find("flag") then
                    return nil
                end
            end
            
            return old(self, ...)
        end)
        
        setreadonly(mt, true)
    end)
    
    -- Method 2: Hook game close
    pcall(function()
        for _, v in pairs(getconnections(game.Close)) do
            v:Disable()
        end
    end)
    
    -- Method 3: Disable common anticheat connections
    pcall(function()
        for _, v in pairs(getconnections(player.Idled)) do
            v:Disable()
        end
    end)
    
    -- Method 4: Anti-idle
    player.Idled:Connect(function()
        VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        wait(1)
        VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end)
    
    -- Method 5: Disable error reporting
    local oldError = error
    local oldWarn = warn
    
    getgenv().error = function(msg)
        if type(msg) == "string" and (msg:lower():find("exploit") or msg:lower():find("cheat") or msg:lower():find("hack")) then
            return
        end
        return oldError(msg)
    end
    
    getgenv().warn = function(msg)
        if type(msg) == "string" and (msg:lower():find("exploit") or msg:lower():find("cheat") or msg:lower():find("hack")) then
            return
        end
        return oldWarn(msg)
    end
end

-- Advanced Utility Functions
local function getCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

local function getHumanoid()
    local char = getCharacter()
    return char and char:FindFirstChildOfClass("Humanoid")
end

local function getRootPart()
    local char = getCharacter()
    return char and (char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:WaitForChild("HumanoidRootPart", 2))
end

-- Enhanced UI Creation
local function createFrame(parent, size, position, color, transparency)
    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = transparency or 0
    frame.BorderSizePixel = 0
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = frame
    
    return frame
end

local function createButton(parent, size, position, color, text)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = color
    button.Text = text
    button.TextColor3 = colors.text
    button.TextScaled = true
    button.Font = Enum.Font.SourceSansBold
    button.BorderSizePixel = 0
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = button
    
    -- Hover effect
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = color:Lerp(Color3.new(1, 1, 1), 0.2)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = color
        }):Play()
    end)
    
    return button
end

local function createSwitch(parent, position, callback, initialState)
    local switchFrame = createFrame(parent, 
        UDim2.new(0, 50, 0, 25), 
        position, 
        initialState and colors.primary or Color3.fromRGB(80, 80, 80), 
        0
    )
    switchFrame.Active = true
    
    local switchButton = createFrame(switchFrame, 
        UDim2.new(0, 21, 0, 21), 
        initialState and UDim2.new(1, -23, 0, 2) or UDim2.new(0, 2, 0, 2), 
        Color3.fromRGB(255, 255, 255), 
        0
    )
    
    local isOn = initialState or false
    
    local function toggle()
        isOn = not isOn
        
        local targetPos = isOn and UDim2.new(1, -23, 0, 2) or UDim2.new(0, 2, 0, 2)
        local targetColor = isOn and colors.primary or Color3.fromRGB(80, 80, 80)
        
        TweenService:Create(switchButton, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = targetPos}):Play()
        TweenService:Create(switchFrame, TweenInfo.new(0.3), {BackgroundColor3 = targetColor}):Play()
        
        if callback then
            callback(isOn)
        end
    end
    
    switchFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            toggle()
        end
    end)
    
    return switchFrame, toggle
end

local function makeDraggable(frame, dragArea)
    dragArea = dragArea or frame
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    local function update(input)
        if dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end
    
    dragArea.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)
    
    dragArea.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            update(input)
        end
    end)
end

-- Feature Functions with Enhanced Bypass

-- God Mode
local function toggleGodMode(enabled)
    states.godMode = enabled
    
    if godModeConnection then
        godModeConnection:Disconnect()
        godModeConnection = nil
    end
    
    if enabled then
        godModeConnection = RunService.Heartbeat:Connect(function()
            local humanoid = getHumanoid()
            if humanoid then
                humanoid.Health = humanoid.MaxHealth
                
                pcall(function()
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
                end)
                
                -- Create invisible forcefield
                local char = getCharacter()
                if char and not char:FindFirstChild("ForceField") then
                    local ff = Instance.new("ForceField")
                    ff.Visible = false
                    ff.Parent = char
                end
            end
        end)
    end
end

-- Fixed Infinite Jump
local function toggleInfiniteJump(enabled)
    states.infiniteJump = enabled
    
    if connections.infiniteJump then
        connections.infiniteJump:Disconnect()
        connections.infiniteJump = nil
    end
    
    if connections.jumpHeight then
        connections.jumpHeight:Disconnect()
        connections.jumpHeight = nil
    end
    
    if enabled then
        -- Main jump connection
        connections.infiniteJump = UserInputService.JumpRequest:Connect(function()
            local humanoid = getHumanoid()
            local rootPart = getRootPart()
            
            if humanoid and rootPart and humanoid:GetState() ~= Enum.HumanoidStateType.Dead then
                -- Force jump state
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                
                -- Apply upward velocity for smooth movement
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
                bodyVelocity.Velocity = Vector3.new(0, 60, 0)
                bodyVelocity.Parent = rootPart
                
                -- Remove after jump
                game:GetService("Debris"):AddItem(bodyVelocity, 0.1)
            end
        end)
        
        -- Maintain jump ability
        connections.jumpHeight = RunService.Heartbeat:Connect(function()
            local humanoid = getHumanoid()
            if humanoid then
                humanoid.JumpPower = 50
                humanoid.JumpHeight = 7.2
            end
        end)
    end
end

-- Float for mobile
local function toggleFloat(enabled)
    states.float = enabled
    
    if connections.float then
        connections.float:Disconnect()
        connections.float = nil
    end
    
    if floatVelocity then
        floatVelocity:Destroy()
        floatVelocity = nil
    end
    
    if enabled then
        local humanoid = getHumanoid()
        local rootPart = getRootPart()
        if humanoid and rootPart then
            -- Create a BodyVelocity to float
            floatVelocity = Instance.new("BodyVelocity")
            floatVelocity.MaxForce = Vector3.new(0, math.huge, 0)
            floatVelocity.Velocity = Vector3.new(0, 0, 0)
            floatVelocity.Parent = rootPart
            
            connections.float = RunService.Heartbeat:Connect(function()
                if not rootPart then return end
                -- Apply upward force to counteract gravity
                floatVelocity.Velocity = Vector3.new(0, 20, 0)
            end)
        end
    end
end

-- Speed Boost (55% increase for better bypass)
local function toggleSpeedBoost(enabled)
    states.speedBoost = enabled
    
    if connections.speedBoost then
        connections.speedBoost:Disconnect()
        connections.speedBoost = nil
    end
    
    local humanoid = getHumanoid()
    if humanoid then
        originalWalkSpeed = 16 -- Default Roblox walkspeed
    end
    
    if enabled then
        connections.speedBoost = RunService.Heartbeat:Connect(function()
            local humanoid = getHumanoid()
            local rootPart = getRootPart()
            
            if humanoid and rootPart then
                -- Set walkspeed to 55% more (24.8, rounded to 25)
                humanoid.WalkSpeed = 25
                
                -- Additional velocity boost for better movement
                if humanoid.MoveDirection.Magnitude > 0 then
                    local moveDirection = humanoid.MoveDirection.Unit
                    rootPart.Velocity = Vector3.new(
                        moveDirection.X * 25,
                        rootPart.Velocity.Y,
                        moveDirection.Z * 25
                    )
                end
            end
        end)
    else
        local humanoid = getHumanoid()
        if humanoid then
            humanoid.WalkSpeed = originalWalkSpeed
        end
    end
end

-- Noclip
local function toggleNoclip(enabled)
    states.noclip = enabled
    
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if enabled then
        noclipConnection = RunService.Stepped:Connect(function()
            local character = getCharacter()
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        local character = getCharacter()
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- Enhanced Fly (Bypass everything)
local function toggleFly(enabled)
    states.fly = enabled
    
    if connections.flyControl then
        connections.flyControl:Disconnect()
        connections.flyControl = nil
    end
    
    if flyPlatform then
        flyPlatform:Destroy()
        flyPlatform = nil
    end
    
    if enabled then
        local humanoid = getHumanoid()
        if humanoid then
            humanoid.PlatformStand = false -- Keep normal state
        end
        
        -- Create invisible platform
        flyPlatform = Instance.new("Part")
        flyPlatform.Size = Vector3.new(5, 0.2, 5)
        flyPlatform.Transparency = 1
        flyPlatform.CanCollide = true
        flyPlatform.Anchored = true
        flyPlatform.Name = "FlyPart"
        flyPlatform.Parent = workspace
        
        connections.flyControl = RunService.Heartbeat:Connect(function()
            local rootPart = getRootPart()
            local humanoid = getHumanoid()
            
            if not rootPart or not humanoid or not flyPlatform then 
                states.fly = false
                return 
            end
            
            -- Position platform under player
            flyPlatform.CFrame = CFrame.new(rootPart.Position - Vector3.new(0, 3.5, 0))
            
            local cam = workspace.CurrentCamera
            local moveVector = Vector3.new(0, 0, 0)
            
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                moveVector = moveVector + cam.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                moveVector = moveVector - cam.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                moveVector = moveVector - cam.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                moveVector = moveVector + cam.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                moveVector = moveVector + Vector3.new(0, 1, 0)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                moveVector = moveVector - Vector3.new(0, 1, 0)
            end
            
            -- Apply movement
            local speed = 50
            rootPart.Velocity = moveVector * speed
            
            -- Keep upright
            rootPart.CFrame = CFrame.new(rootPart.Position) * CFrame.Angles(0, math.rad(rootPart.Orientation.Y), 0)
        end)
    else
        if flyPlatform then
            flyPlatform:Destroy()
            flyPlatform = nil
        end
        
        local rootPart = getRootPart()
        if rootPart then
            rootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end
end

-- ESP System
local function createAdvancedESP(targetPlayer)
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local character = targetPlayer.Character
    local rootPart = character.HumanoidRootPart
    
    if espObjects[targetPlayer] then
        for _, obj in pairs(espObjects[targetPlayer]) do
            if obj then obj:Destroy() end
        end
    end
    
    espObjects[targetPlayer] = {}
    
    -- ESP Box
    if states.espBox then
        local box = Instance.new("BoxHandleAdornment")
        box.Size = character:GetExtentsSize()
        box.Color3 = Color3.fromRGB(255, 100, 100)
        box.Transparency = 0.3
        box.AlwaysOnTop = true
        box.ZIndex = 10
        box.Adornee = rootPart
        box.Parent = rootPart
        table.insert(espObjects[targetPlayer], box)
    end
    
    -- ESP Lines
    if states.espLines then
        local myRoot = getRootPart()
        if myRoot then
            local beam = Instance.new("Beam")
            beam.Color = ColorSequence.new(Color3.fromRGB(100, 255, 100))
            beam.Transparency = NumberSequence.new(0.5)
            beam.Width0 = 0.1
            beam.Width1 = 0.1
            beam.FaceCamera = true
            
            local attachment0 = Instance.new("Attachment", rootPart)
            local attachment1 = Instance.new("Attachment", myRoot)
            
            beam.Attachment0 = attachment0
            beam.Attachment1 = attachment1
            beam.Parent = rootPart
            
            table.insert(espObjects[targetPlayer], beam)
            table.insert(espObjects[targetPlayer], attachment0)
            table.insert(espObjects[targetPlayer], attachment1)
        end
    end
    
    -- ESP Names
    if states.espNames then
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = rootPart
        billboard.Size = UDim2.new(0, 200, 0, 80)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = rootPart
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = targetPlayer.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextScaled = true
        nameLabel.Font = Enum.Font.SourceSansBold
        nameLabel.TextStrokeTransparency = 0
        nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        nameLabel.Parent = billboard
        
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local healthLabel = Instance.new("TextLabel")
            healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
            healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
            healthLabel.BackgroundTransparency = 1
            healthLabel.Text = math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth)
            healthLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            healthLabel.TextScaled = true
            healthLabel.Font = Enum.Font.SourceSans
            healthLabel.TextStrokeTransparency = 0
            healthLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            healthLabel.Parent = billboard
        end
        
        table.insert(espObjects[targetPlayer], billboard)
    end
end

local function toggleESP(espType, enabled)
    states[espType] = enabled
    
    for player, objects in pairs(espObjects) do
        for _, obj in pairs(objects) do
            if obj then obj:Destroy() end
        end
    end
    espObjects = {}
    
    if connections.espUpdate then
        connections.espUpdate:Disconnect()
        connections.espUpdate = nil
    end
    
    if states.espBox or states.espLines or states.espSkeleton or states.espNames then
        connections.espUpdate = RunService.Heartbeat:Connect(function()
            for _, targetPlayer in pairs(Players:GetPlayers()) do
                if targetPlayer ~= player then
                    createAdvancedESP(targetPlayer)
                end
            end
        end)
    end
end

-- Fixed Teleport to Base
local function teleportToBase()
    if not basePosition then
        StarterGui:SetCore("SendNotification", {
            Title = "Water Hub",
            Text = "Please set a base position first!",
            Duration = 3
        })
        return false
    end
    
    local rootPart = getRootPart()
    local humanoid = getHumanoid()
    if not rootPart or not humanoid then
        return false
    end
    
    -- Enable bypass features temporarily
    local wasNoclip = states.noclip
    if not wasNoclip then toggleNoclip(true) end
    
    -- Phase 1: Instant teleport to 165 height
    rootPart.CFrame = CFrame.new(rootPart.Position.X, 165, rootPart.Position.Z)
    
    -- Wait 2 seconds
    wait(2)
    
    -- Phase 2: Fly to base position at height 165
    local targetPosition = Vector3.new(basePosition.X, 165, basePosition.Z)
    local startPosition = rootPart.Position
    local distance = (targetPosition - startPosition).Magnitude
    
    -- Create smooth flying movement
    local flyConnection
    local elapsed = 0
    local flyDuration = math.max(distance / 50, 1) -- Adjust speed
    
    flyConnection = RunService.Heartbeat:Connect(function(dt)
        elapsed = elapsed + dt
        local progress = math.min(elapsed / flyDuration, 1)
        
        -- Smooth interpolation
        local newPosition = startPosition:Lerp(targetPosition, progress)
        rootPart.CFrame = CFrame.new(newPosition)
        rootPart.Velocity = Vector3.new(0, 0, 0) -- Prevent falling
        
        if progress >= 1 then
            flyConnection:Disconnect()
        end
    end)
    
    wait(flyDuration)
    
    -- Wait 2 more seconds
    wait(2)
    
    -- Restore noclip state
    if not wasNoclip then toggleNoclip(false) end
    
    -- Create down button in center of screen
    local downGui = Instance.new("ScreenGui")
    downGui.Name = "DownButton"
    downGui.Parent = CoreGui
    downGui.ResetOnSpawn = false
    
    downButton = createButton(downGui, 
        UDim2.new(0, 150, 0, 60), 
        UDim2.new(0.5, -75, 0.5, -30), 
        colors.danger, 
        "⬇️ Down"
    )
    downButton.Font = Enum.Font.SourceSansBold
    downButton.TextSize = 24
    
    downButton.MouseButton1Click:Connect(function()
        if basePosition then
            -- Smooth descent to base
            rootPart.CFrame = CFrame.new(basePosition)
            downGui:Destroy()
        end
    end)
    
    return true
end

-- TP Base GUI
local tpBaseGui = nil
local function toggleTPBase(enabled)
    states.tpBase = enabled
    
    if enabled then
        if not tpBaseGui or not tpBaseGui.Parent then
            tpBaseGui = Instance.new("ScreenGui")
            tpBaseGui.Name = "TPBaseGui"
            tpBaseGui.Parent = CoreGui
            tpBaseGui.ResetOnSpawn = false
            table.insert(openGuis, tpBaseGui)
            
            local frame = createFrame(tpBaseGui, 
                UDim2.new(0, 250, 0, 150), 
                UDim2.new(0.5, -125, 0.3, 0), 
                colors.surface, 
                0.1
            )
            frame.Active = true
            makeDraggable(frame)
            
            -- Header
            local header = createFrame(frame, 
                UDim2.new(1, 0, 0, 35), 
                UDim2.new(0, 0, 0, 0), 
                colors.primary, 
                0
            )
            
            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, -40, 1, 0)
            title.Position = UDim2.new(0, 10, 0, 0)
            title.BackgroundTransparency = 1
            title.Text = "📍 Base System"
            title.TextColor3 = colors.text
            title.TextScaled = true
            title.Font = Enum.Font.SourceSansBold
            title.Parent = header
            
            local closeBtn = createButton(header, 
                UDim2.new(0, 30, 0, 30), 
                UDim2.new(1, -35, 0.5, -15), 
                colors.danger, 
                "×"
            )
            
            -- Buttons
            local setBtn = createButton(frame, 
                UDim2.new(0.9, 0, 0, 35), 
                UDim2.new(0.05, 0, 0, 50), 
                colors.success, 
                "📍 Set Base"
            )
            
            local tpBtn = createButton(frame, 
                UDim2.new(0.9, 0, 0, 35), 
                UDim2.new(0.05, 0, 0, 95), 
                colors.warning, 
                "🚀 Teleport to Base"
            )
            
            local baseStatusLabel = Instance.new("TextLabel")
            baseStatusLabel.Size = UDim2.new(0.9, 0, 0, 20)
            baseStatusLabel.Position = UDim2.new(0.05, 0, 0, 130)
            baseStatusLabel.BackgroundTransparency = 1
            baseStatusLabel.Text = basePosition and string.format("Base: X:%.1f Y:%.1f Z:%.1f", basePosition.X, basePosition.Y, basePosition.Z) or "Base: Not Set"
            baseStatusLabel.TextColor3 = colors.textSecondary
            baseStatusLabel.TextScaled = true
            baseStatusLabel.Font = Enum.Font.SourceSansItalic
            baseStatusLabel.Parent = frame
            
            -- Events
            closeBtn.MouseButton1Click:Connect(function()
                tpBaseGui:Destroy()
                tpBaseGui = nil
                states.tpBase = false
            end)
            
            setBtn.MouseButton1Click:Connect(function()
                local rootPart = getRootPart()
                if rootPart then
                    basePosition = rootPart.Position
                    baseStatusLabel.Text = string.format("Base: X:%.1f Y:%.1f Z:%.1f", basePosition.X, basePosition.Y, basePosition.Z)
                    StarterGui:SetCore("SendNotification", {
                        Title = "Water Hub",
                        Text = "Base position set!",
                        Duration = 2
                    })
                end
            end)
            
            tpBtn.MouseButton1Click:Connect(function()
                teleportToBase()
            end)
        end
    else
        if tpBaseGui then
            tpBaseGui:Destroy()
            tpBaseGui = nil
        end
    end
end

-- Steal Helper GUI
local stealHelperGui = nil
local stealHelperBtn = nil
local stealIsAtTop = false

local function updateStealButton()
    if stealHelperBtn then
        if stealIsAtTop then
            stealHelperBtn.Text = "⬇️ Down"
            stealHelperBtn.BackgroundColor3 = colors.danger
        else
            stealHelperBtn.Text = "⬆️ Up"
            stealHelperBtn.BackgroundColor3 = colors.success
        end
    end
end

local function toggleStealHelper(enabled)
    states.stealHelper = enabled
    
    if enabled then
        if not stealHelperGui or not stealHelperGui.Parent then
            stealHelperGui = Instance.new("ScreenGui")
            stealHelperGui.Name = "StealHelperGui"
            stealHelperGui.Parent = CoreGui
            stealHelperGui.ResetOnSpawn = false
            table.insert(openGuis, stealHelperGui)
            
            stealHelperBtn = createButton(stealHelperGui, 
                UDim2.new(0, 120, 0, 60), 
                UDim2.new(0.9, -120, 0.7, -30), 
                colors.success, 
                "⬆️ Up"
            )
            stealHelperBtn.Font = Enum.Font.SourceSansBold
            stealHelperBtn.TextSize = 24
            stealHelperBtn.Active = true
            makeDraggable(stealHelperBtn)
            
            -- Reset state
            stealIsAtTop = false
            updateStealButton()
            
            stealHelperBtn.MouseButton1Click:Connect(function()
                local rootPart = getRootPart()
                if rootPart then
                    if stealIsAtTop then
                        -- Go down by 50
                        rootPart.CFrame = rootPart.CFrame - Vector3.new(0, 50, 0)
                    else
                        -- Go up to 165
                        rootPart.CFrame = CFrame.new(rootPart.Position.X, 165, rootPart.Position.Z)
                    end
                    
                    stealIsAtTop = not stealIsAtTop
                    updateStealButton()
                end
            end)
        end
    else
        if stealHelperGui then
            stealHelperGui:Destroy()
            stealHelperGui = nil
            stealHelperBtn = nil
            stealIsAtTop = false
        end
    end
end

-- Give All Items
local function giveAllItems()
    local character = getCharacter()
    if not character then return 0 end
    
    local backpack = player:FindFirstChild("Backpack")
    if not backpack then return 0 end
    
    local rootPart = getRootPart()
    if not rootPart then return 0 end
    
    local collected = 0
    
    -- Comprehensive item search
    local function collectItem(obj)
        -- Tools
        if obj:IsA("Tool") and not obj.Parent:IsA("Model") then
            local success = pcall(function()
                obj.Parent = backpack
                collected = collected + 1
            end)
            
            if not success then
                -- Try cloning if direct parent change fails
                pcall(function()
                    local clone = obj:Clone()
                    clone.Parent = backpack
                    collected = collected + 1
                end)
            end
        end
        
        -- Collectible parts
        if obj:IsA("BasePart") then
            local name = obj.Name:lower()
            if name:match("item") or name:match("coin") or name:match("collectible") or 
               name:match("pickup") or name:match("drop") or name:match("loot") then
                -- Teleport item to player
                pcall(function()
                    obj.CFrame = rootPart.CFrame
                    collected = collected + 1
                end)
                
                -- Fire touch interest if it exists
                pcall(function()
                    firetouchinterest(rootPart, obj, 0)
                    wait()
                    firetouchinterest(rootPart, obj, 1)
                end)
            end
        end
        
        -- ProximityPrompts
        if obj:IsA("ProximityPrompt") then
            pcall(function()
                fireproximityprompt(obj)
                collected = collected + 1
            end)
        end
        
        -- ClickDetectors
        if obj:IsA("ClickDetector") then
            pcall(function()
                fireclickdetector(obj)
                collected = collected + 1
            end)
        end
    end
    
    -- Search all workspace
    for _, obj in ipairs(workspace:GetDescendants()) do
        collectItem(obj)
    end
    
    -- Search ReplicatedStorage
    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("Tool") then
            pcall(function()
                local clone = obj:Clone()
                clone.Parent = backpack
                collected = collected + 1
            end)
        end
    end
    
    return collected
end

-- Minimized Icon
local function createMinimizedIcon()
    if minimizedIcon then
        minimizedIcon:Destroy()
    end
    
    minimizedIcon = Instance.new("ScreenGui")
    minimizedIcon.Name = "WaterHubMinimized"
    minimizedIcon.Parent = CoreGui
    minimizedIcon.ResetOnSpawn = false
    
    local waterDrop = Instance.new("ImageButton")
    waterDrop.Size = UDim2.new(0, 100, 0, 100)
    waterDrop.Position = UDim2.new(0, 20, 0, 20)
    waterDrop.BackgroundTransparency = 1
    waterDrop.Image = "rbxassetid://6034684930"
    waterDrop.ImageColor3 = colors.primary
    waterDrop.Parent = minimizedIcon
    waterDrop.Active = true
    
    -- Make it draggable
    makeDraggable(waterDrop)
    
    -- Optimized animation
    local rotation = 0
    connections.minimizedAnim = RunService.Heartbeat:Connect(function(dt)
        rotation = rotation + 60 * dt
        waterDrop.Rotation = rotation % 360
    end)
    
    waterDrop.MouseButton1Click:Connect(function()
        minimizedIcon:Destroy()
        minimizedIcon = nil
        if connections.minimizedAnim then
            connections.minimizedAnim:Disconnect()
        end
        createMainGui()
    end)
end

-- Main GUI (Much larger and more functional)
local function createMainGui()
    if waterHubGui then
        waterHubGui:Destroy()
    end
    
    waterHubGui = Instance.new("ScreenGui")
    waterHubGui.Name = "WaterHubMain"
    waterHubGui.Parent = CoreGui
    waterHubGui.ResetOnSpawn = false
    table.insert(openGuis, waterHubGui)
    
    -- Get screen size
    local screenSize = workspace.CurrentCamera.ViewportSize
    local mainWidth = math.min(screenSize.X * 0.9, 500)  -- 90% of screen width, max 500
    local mainHeight = screenSize.Y * 0.85 -- 85% of screen height
    
    -- Main frame with glass morphism effect
    local mainFrame = createFrame(waterHubGui, 
        UDim2.new(0, mainWidth, 0, mainHeight), 
        UDim2.new(0.5, -mainWidth/2, 0.5, -mainHeight/2), 
        Color3.fromRGB(40, 45, 55), 
        0.2
    )
    mainFrame.Active = true
    
    -- Blur effect background
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = colors.background
    blurFrame.BackgroundTransparency = 0.3
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = mainFrame
    blurFrame.ZIndex = mainFrame.ZIndex - 1
    
    local blurCorner = Instance.new("UICorner")
    blurCorner.CornerRadius = UDim.new(0, 20)
    blurCorner.Parent = blurFrame
    
    -- Entrance animation
    mainFrame.Position = UDim2.new(0.5, -mainWidth/2, 1.5, 0)
    mainFrame.Size = UDim2.new(0, mainWidth * 0.8, 0, mainHeight * 0.8)
    
    TweenService:Create(mainFrame, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0.5, -mainWidth/2, 0.5, -mainHeight/2),
        Size = UDim2.new(0, mainWidth, 0, mainHeight)
    }):Play()
    
    -- Header with gradient
    local header = createFrame(mainFrame, 
        UDim2.new(1, 0, 0, 60), 
        UDim2.new(0, 0, 0, 0), 
        colors.primary, 
        0
    )
    
    local headerGradient = Instance.new("UIGradient")
    headerGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, colors.primary),
        ColorSequenceKeypoint.new(0.5, colors.primary:Lerp(colors.secondary, 0.2)),
        ColorSequenceKeypoint.new(1, colors.primary)
    })
    headerGradient.Rotation = 45
    headerGradient.Parent = header
    
    makeDraggable(mainFrame, header)
    
    -- Title section
    local titleContainer = Instance.new("Frame")
    titleContainer.Size = UDim2.new(0.6, 0, 1, 0)
    titleContainer.BackgroundTransparency = 1
    titleContainer.Parent = header
    
    local waterIcon = Instance.new("ImageLabel")
    waterIcon.Size = UDim2.new(0, 45, 0, 45)
    waterIcon.Position = UDim2.new(0, 15, 0.5, -22.5)
    waterIcon.BackgroundTransparency = 1
    waterIcon.Image = "rbxassetid://6034684930"
    waterIcon.ImageColor3 = colors.text
    waterIcon.Parent = titleContainer
    
    -- Window controls
    local minimizeBtn = createButton(header, 
        UDim2.new(0, 45, 0, 45), 
        UDim2.new(1, -100, 0.5, -22.5), 
        colors.warning, 
        "−"
    )
    minimizeBtn.TextSize = 28
    
    local closeBtn = createButton(header, 
        UDim2.new(0, 45, 0, 45), 
        UDim2.new(1, -50, 0.5, -22.5), 
        colors.danger, 
        "×"
    )
    closeBtn.TextSize = 28
    
    -- Tab system with animations
    local tabContainer = createFrame(mainFrame, 
        UDim2.new(1, -20, 0, 50), 
        UDim2.new(0, 10, 0, 70), 
        colors.surface, 
        0.1
    )
    
    local tabs = {"Main", "Visual", "Misc", "Server"}
    local tabButtons = {}
    local contentFrames = {}
    local tabIndicator = Instance.new("Frame")
    tabIndicator.Size = UDim2.new(0.25, -10, 0, 3)
    tabIndicator.Position = UDim2.new(0, 5, 1, -3)
    tabIndicator.BackgroundColor3 = colors.primary
    tabIndicator.BorderSizePixel = 0
    tabIndicator.Parent = tabContainer
    
    for i, tabName in ipairs(tabs) do
        local tabBtn = createButton(tabContainer, 
            UDim2.new(0.25, -10, 1, -10), 
            UDim2.new((i-1) * 0.25 + 0.0125, 0, 0, 5), 
            i == 1 and colors.surfaceLight or colors.surface, 
            tabName
        )
        tabBtn.Font = Enum.Font.SourceSans
        tabBtn.TextSize = 18
        tabButtons[i] = tabBtn
        
        -- Content frame with scrolling
        local contentFrame = createFrame(mainFrame, 
            UDim2.new(1, -20, 1, -140), 
            UDim2.new(0, 10, 0, 130), 
            colors.surface, 
            0.05
        )
        contentFrame.Visible = (i == 1)
        contentFrame.ClipsDescendants = true
        
        local scrollFrame = Instance.new("ScrollingFrame")
        scrollFrame.Size = UDim2.new(1, -10, 1, -10)
        scrollFrame.Position = UDim2.new(0, 5, 0, 5)
        scrollFrame.BackgroundTransparency = 1
        scrollFrame.BorderSizePixel = 0
        scrollFrame.ScrollBarThickness = 10
        scrollFrame.ScrollBarImageColor3 = colors.primary
        scrollFrame.ScrollBarImageTransparency = 0.5
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        scrollFrame.Parent = contentFrame
        
        contentFrames[i] = scrollFrame
    end
    
    -- Tab switching with indicator animation
    for i, btn in ipairs(tabButtons) do
        btn.MouseButton1Click:Connect(function()
            -- Animate tab indicator
            TweenService:Create(tabIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                Position = UDim2.new((i-1) * 0.25 + 0.0125, 0, 1, -3)
            }):Play()
            
            -- Show/hide content with fade
            for j, frame in ipairs(contentFrames) do
                if j == i then
                    frame.Parent.Visible = true
                    TweenService:Create(frame.Parent, TweenInfo.new(0.3), {BackgroundTransparency = 0.05}):Play()
                else
                    TweenService:Create(frame.Parent, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
                    spawn(function()
                        wait(0.3)
                        frame.Parent.Visible = false
                    end)
                end
            end
            
            -- Update button colors
            for j, button in ipairs(tabButtons) do
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = (j == i) and colors.surfaceLight or colors.surface
                }):Play()
            end
        end)
    end
    
    -- MAIN TAB CONTENT
    local mainContent = contentFrames[1]
    local yPos = 10
    local rowHeight = 50
    
    local function addFeature(text, icon, callback, initialState)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, rowHeight - 5)
        container.Position = UDim2.new(0, 10, 0, yPos)
        container.BackgroundTransparency = 1
        container.Parent = mainContent
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -100, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = icon .. "  " .. text
        label.TextColor3 = colors.text
        label.TextScaled = true
        label.Font = Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = container
        
        createSwitch(container, UDim2.new(1, -70, 0.5, -17.5), callback, initialState)
        
        yPos = yPos + rowHeight
    end
    
    addFeature("God Mode", "🛡️", toggleGodMode, states.godMode)
    addFeature("Infinite Jump", "🦘", toggleInfiniteJump, states.infiniteJump)
    addFeature("Float (Mobile)", "🎈", toggleFloat, states.float)
    addFeature("Speed Boost", "⚡", toggleSpeedBoost, states.speedBoost)
    addFeature("Noclip", "👻", toggleNoclip, states.noclip)
    addFeature("Fly", "✈️", toggleFly, states.fly)
    addFeature("TP Base", "📍", toggleTPBase, states.tpBase)
    addFeature("Steal Helper", "💰", toggleStealHelper, states.stealHelper)
    
    mainContent.CanvasSize = UDim2.new(0, 0, 0, yPos + 20)
    
    -- VISUAL TAB CONTENT
    local visualContent = contentFrames[2]
    yPos = 10
    
    local function addESP(text, icon, espType)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, rowHeight - 5)
        container.Position = UDim2.new(0, 10, 0, yPos)
        container.BackgroundTransparency = 1
        container.Parent = visualContent
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -100, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = icon .. "  " .. text
        label.TextColor3 = colors.text
        label.TextScaled = true
        label.Font = Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = container
        
        createSwitch(container, UDim2.new(1, -70, 0.5, -17.5), function(enabled)
            toggleESP(espType, enabled)
        end, states[espType])
        
        yPos = yPos + rowHeight
    end
    
    addESP("ESP Box", "📦", "espBox")
    addESP("ESP Lines", "📐", "espLines")
    addESP("ESP Skeleton", "💀", "espSkeleton")
    addESP("ESP Names & Health", "🏷️", "espNames")
    
    visualContent.CanvasSize = UDim2.new(0, 0, 0, yPos + 20)
    
    -- MISC TAB CONTENT
    local miscContent = contentFrames[3]
    yPos = 10
    
    -- Give All Items button
    local giveItemsBtn = createButton(miscContent, 
        UDim2.new(1, -20, 0, 60), 
        UDim2.new(0, 10, 0, yPos), 
        colors.primary, 
        "📦 Give All Items"
    )
    giveItemsBtn.Font = Enum.Font.SourceSansBold
    giveItemsBtn.TextSize = 20
    yPos = yPos + 70
    
    -- Anti-cheat bypass info
    local bypassSection = createFrame(miscContent, UDim2.new(1, -20, 0, 150), UDim2.new(0, 10, 0, yPos), colors.surfaceLight, 0.1)
    
    local bypassTitle = Instance.new("TextLabel")
    bypassTitle.Size = UDim2.new(1, -20, 0, 30)
    bypassTitle.Position = UDim2.new(0, 10, 0, 10)
    bypassTitle.BackgroundTransparency = 1
    bypassTitle.Text = "🔒 Anti-Cheat Bypass Status"
    bypassTitle.TextColor3 = colors.primary
    bypassTitle.TextScaled = true
    bypassTitle.Font = Enum.Font.SourceSansBold
    bypassTitle.TextXAlignment = Enum.TextXAlignment.Left
    bypassTitle.Parent = bypassSection
    
    local bypassMethods = {
        "✅ Metatable Protection",
        "✅ Remote Filtering",
        "✅ Anti-Kick Active",
        "✅ Anti-Idle Active",
        "✅ Network Ownership"
    }
    
    for i, method in ipairs(bypassMethods) do
        local methodLabel = Instance.new("TextLabel")
        methodLabel.Size = UDim2.new(1, -20, 0, 20)
        methodLabel.Position = UDim2.new(0, 10, 0, 35 + (i-1) * 22)
        methodLabel.BackgroundTransparency = 1
        methodLabel.Text = method
        methodLabel.TextColor3 = colors.success
        methodLabel.TextScaled = true
        methodLabel.Font = Enum.Font.SourceSans
        methodLabel.TextXAlignment = Enum.TextXAlignment.Left
        methodLabel.Parent = bypassSection
    end
    
    yPos = yPos + 160
    
    -- Position display
    local positionFrame = createFrame(miscContent, UDim2.new(1, -20, 0, 60), UDim2.new(0, 10, 0, yPos), colors.surfaceLight, 0.1)
    
    local positionLabel = Instance.new("TextLabel")
    positionLabel.Size = UDim2.new(1, -20, 0, 25)
    positionLabel.Position = UDim2.new(0, 10, 0, 5)
    positionLabel.BackgroundTransparency = 1
    positionLabel.Text = "📌 Current Position"
    positionLabel.TextColor3 = colors.primary
    positionLabel.TextScaled = true
    positionLabel.Font = Enum.Font.SourceSansBold
    positionLabel.TextXAlignment = Enum.TextXAlignment.Left
    positionLabel.Parent = positionFrame
    
    local coordsLabel = Instance.new("TextLabel")
    coordsLabel.Size = UDim2.new(1, -20, 0, 20)
    coordsLabel.Position = UDim2.new(0, 10, 0, 30)
    coordsLabel.BackgroundTransparency = 1
    coordsLabel.Text = "X: 0, Y: 0, Z: 0"
    coordsLabel.TextColor3 = colors.textSecondary
    coordsLabel.TextScaled = true
    coordsLabel.Font = Enum.Font.SourceSans
    coordsLabel.TextXAlignment = Enum.TextXAlignment.Left
    coordsLabel.Parent = positionFrame
    
    yPos = yPos + 70
    
    miscContent.CanvasSize = UDim2.new(0, 0, 0, yPos + 20)
    
    -- SERVER TAB CONTENT
    local serverContent = contentFrames[4]
    yPos = 10
    
    local function addServerButton(text, icon, color, callback)
        local btn = createButton(serverContent, 
            UDim2.new(1, -20, 0, 60), 
            UDim2.new(0, 10, 0, yPos), 
            color, 
            icon .. "  " .. text
        )
        btn.Font = Enum.Font.SourceSansBold
        btn.TextSize = 20
        btn.MouseButton1Click:Connect(callback)
        yPos = yPos + 70
    end
    
    addServerButton("Rejoin Server", "🔄", colors.primary, function()
        TeleportService:Teleport(game.PlaceId, player)
    end)
    
    addServerButton("Leave Game", "🚪", colors.danger, function()
        player:Kick("Left the game via Water Hub")
    end)
    
    addServerButton("Server Hop", "🌐", colors.success, function()
        local servers = {}
        local req = syn and syn.request or http_request or request
        
        if req then
            local success, result = pcall(function()
                return req({
                    Url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100",
                    Method = "GET"
                })
            end)
            
            if success and result.Success then
                local data = HttpService:JSONDecode(result.Body)
                for _, server in pairs(data.data) do
                    if server.playing < server.maxPlayers and server.id ~= game.JobId then
                        table.insert(servers, server.id)
                    end
                end
                
                if #servers > 0 then
                    TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Water Hub",
                        Text = "No available servers found!",
                        Duration = 3
                    })
                end
            end
        end
    end)
    
    -- Server info
    local serverInfoFrame = createFrame(serverContent, UDim2.new(1, -20, 0, 120), UDim2.new(0, 10, 0, yPos), colors.surfaceLight, 0.1)
    
    local serverInfoTitle = Instance.new("TextLabel")
    serverInfoTitle.Size = UDim2.new(1, -20, 0, 30)
    serverInfoTitle.Position = UDim2.new(0, 10, 0, 10)
    serverInfoTitle.BackgroundTransparency = 1
    serverInfoTitle.Text = "📊 Server Information"
    serverInfoTitle.TextColor3 = colors.primary
    serverInfoTitle.TextScaled = true
    serverInfoTitle.Font = Enum.Font.SourceSansBold
    serverInfoTitle.TextXAlignment = Enum.TextXAlignment.Left
    serverInfoTitle.Parent = serverInfoFrame
    
    local playersLabel = Instance.new("TextLabel")
    playersLabel.Size = UDim2.new(1, -20, 0, 20)
    playersLabel.Position = UDim2.new(0, 10, 0, 40)
    playersLabel.BackgroundTransparency = 1
    playersLabel.Text = "Players: " .. #Players:GetPlayers() .. "/" .. Players.MaxPlayers
    playersLabel.TextColor3 = colors.textSecondary
    playersLabel.TextScaled = true
    playersLabel.Font = Enum.Font.SourceSans
    playersLabel.TextXAlignment = Enum.TextXAlignment.Left
    playersLabel.Parent = serverInfoFrame
    
    local jobIdLabel = Instance.new("TextLabel")
    jobIdLabel.Size = UDim2.new(1, -20, 0, 20)
    jobIdLabel.Position = UDim2.new(0, 10, 0, 65)
    jobIdLabel.BackgroundTransparency = 1
    jobIdLabel.Text = "Server ID: " .. game.JobId:sub(1, 8) .. "..."
    jobIdLabel.TextColor3 = colors.textSecondary
    jobIdLabel.TextScaled = true
    jobIdLabel.Font = Enum.Font.SourceSans
    jobIdLabel.TextXAlignment = Enum.TextXAlignment.Left
    jobIdLabel.Parent = serverInfoFrame
    
    local pingLabel = Instance.new("TextLabel")
    pingLabel.Size = UDim2.new(1, -20, 0, 20)
    pingLabel.Position = UDim2.new(0, 10, 0, 90)
    pingLabel.BackgroundTransparency = 1
    pingLabel.Text = "Ping: Calculating..."
    pingLabel.TextColor3 = colors.textSecondary
    pingLabel.TextScaled = true
    pingLabel.Font = Enum.Font.SourceSans
    pingLabel.TextXAlignment = Enum.TextXAlignment.Left
    pingLabel.Parent = serverInfoFrame
    
    yPos = yPos + 130
    
    serverContent.CanvasSize = UDim2.new(0, 0, 0, yPos + 20)
    
    -- Event handlers
    minimizeBtn.MouseButton1Click:Connect(function()
        -- Minimize animation
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 100, 0, 100),
            Position = UDim2.new(0, 20, 0, 20)
        }):Play()
        
        wait(0.3)
        waterHubGui:Destroy()
        createMinimizedIcon()
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        -- Close animation
        TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Rotation = 180
        }):Play()
        
        TweenService:Create(blurFrame, TweenInfo.new(0.4), {
            BackgroundTransparency = 1
        }):Play()
        
        wait(0.4)
        
        -- Close all GUIs
        for _, gui in pairs(openGuis) do
            if gui and gui.Parent then
                gui:Destroy()
            end
        end
        openGuis = {}
        
        -- Disable all features
        for stateName, _ in pairs(states) do
            if states[stateName] then
                if stateName == "infiniteJump" then toggleInfiniteJump(false)
                elseif stateName == "float" then toggleFloat(false)
                elseif stateName == "speedBoost" then toggleSpeedBoost(false)
                elseif stateName == "noclip" then toggleNoclip(false)
                elseif stateName == "fly" then toggleFly(false)
                elseif stateName == "godMode" then toggleGodMode(false)
                elseif stateName:find("esp") then toggleESP(stateName, false)
                end
            end
        end
        
        waterHubGui:Destroy()
        if minimizedIcon then
            minimizedIcon:Destroy()
        end
    end)
    
    giveItemsBtn.MouseButton1Click:Connect(function()
        local itemCount = giveAllItems()
        
        -- Animate button based on result
        if itemCount > 0 then
            giveItemsBtn.Text = "✅ " .. itemCount .. " Items Collected!"
            TweenService:Create(giveItemsBtn, TweenInfo.new(0.3), {
                BackgroundColor3 = colors.success,
                Size = UDim2.new(1, -10, 0, 65)
            }):Play()
        else
            giveItemsBtn.Text = "⚠️ No Items Found!"
            TweenService:Create(giveItemsBtn, TweenInfo.new(0.3), {
                BackgroundColor3 = colors.warning,
                Size = UDim2.new(1, -10, 0, 65)
            }):Play()
        end
        
        wait(3)
        
        giveItemsBtn.Text = "📦 Give All Items"
        TweenService:Create(giveItemsBtn, TweenInfo.new(0.3), {
            BackgroundColor3 = colors.primary,
            Size = UDim2.new(1, -20, 0, 60)
        }):Play()
    end)
    
    -- Update loops
    spawn(function()
        while waterHubGui and waterHubGui.Parent do
            -- Update position
            local rootPart = getRootPart()
            if rootPart then
                coordsLabel.Text = string.format("X: %.1f, Y: %.1f, Z: %.1f", 
                    rootPart.Position.X,
                    rootPart.Position.Y,
                    rootPart.Position.Z)
            end
            
            -- Update server info
            playersLabel.Text = "Players: " .. #Players:GetPlayers() .. "/" .. Players.MaxPlayers
            
            -- Update ping
            local ping = player:GetNetworkPing()
            if ping then
                pingLabel.Text = "Ping: " .. math.floor(ping * 1000) .. "ms"
            end
            
            wait(0.5)
        end
    end)
end

-- Optimized Loading Screen
local function createLoadingScreen()
    loadingGui = Instance.new("ScreenGui")
    loadingGui.Name = "WaterHubLoading"
    loadingGui.Parent = CoreGui
    loadingGui.ResetOnSpawn = false
    loadingGui.DisplayOrder = 999999
    loadingGui.IgnoreGuiInset = true
    
    -- Background with animated gradient
    local bg = Instance.new("Frame")
    bg.Size = UDim2.new(1, 0, 1, 36)
    bg.Position = UDim2.new(0, 0, 0, -36)
    bg.BackgroundColor3 = colors.background
    bg.BorderSizePixel = 0
    bg.Parent = loadingGui
    
    local bgGradient = Instance.new("UIGradient")
    bgGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, colors.background),
        ColorSequenceKeypoint.new(0.5, colors.background:Lerp(colors.primary, 0.2)),
        ColorSequenceKeypoint.new(1, colors.background)
    })
    bgGradient.Rotation = 0
    bgGradient.Parent = bg
    
    -- Center container
    local container = Instance.new("Frame")
    container.Size = UDim2.new(0, 500, 0, 500)
    container.Position = UDim2.new(0.5, -250, 0.5, -250)
    container.BackgroundTransparency = 1
    container.Parent = loadingGui
    
    -- Water drop icon
    local waterDrop = Instance.new("ImageLabel")
    waterDrop.Size = UDim2.new(0, 200, 0, 200)
    waterDrop.Position = UDim2.new(0.5, -100, 0.5, -100)
    waterDrop.BackgroundTransparency = 1
    waterDrop.Image = "rbxassetid://6034684930"
    waterDrop.ImageColor3 = colors.primary
    waterDrop.Parent = container
    
    -- Title with animation
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 100)
    title.Position = UDim2.new(0, 0, 0.5, 140)
    title.BackgroundTransparency = 1
    title.Text = "WATER HUB"
    title.TextColor3 = colors.text
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.TextTransparency = 0
    title.Parent = container
    
    -- Version text
    local version = Instance.new("TextLabel")
    version.Size = UDim2.new(1, 0, 0, 40)
    version.Position = UDim2.new(0, 0, 0.5, 220)
    version.BackgroundTransparency = 1
    version.Text = "Ultimate Professional Edition v5.0"
    version.TextColor3 = colors.textSecondary
    version.TextScaled = true
    version.Font = Enum.Font.SourceSansItalic
    version.TextTransparency = 0
    version.Parent = container
    
    -- Loading bar container
    local loadingBarContainer = createFrame(container, 
        UDim2.new(0, 400, 0, 20), 
        UDim2.new(0.5, -200, 0.5, 280), 
        colors.surface, 
        0.3
    )
    
    -- Loading bar background
    local loadingBarBg = createFrame(loadingBarContainer, 
        UDim2.new(1, -4, 1, -4), 
        UDim2.new(0, 2, 0, 2), 
        colors.surfaceLight, 
        0.5
    )
    
    -- Loading bar fill
    local loadingBar = createFrame(loadingBarBg, 
        UDim2.new(0, 0, 1, 0), 
        UDim2.new(0, 0, 0, 0), 
        colors.primary, 
        0
    )
    
    -- Loading text
    local loadingText = Instance.new("TextLabel")
    loadingText.Size = UDim2.new(1, 0, 0, 40)
    loadingText.Position = UDim2.new(0, 0, 0.5, 320)
    loadingText.BackgroundTransparency = 1
    loadingText.Text = ""
    loadingText.TextColor3 = colors.textSecondary
    loadingText.TextScaled = true
    loadingText.Font = Enum.Font.SourceSans
    loadingText.Parent = container
    
    -- Loading tips
    local tips = {
        "Tip: Use God Mode for ultimate protection!",
        "Tip: Float mode works great on mobile devices!",
        "Tip: ESP helps you track other players easily!",
        "Tip: Set a base to teleport back quickly!",
        "Tip: All features bypass most anticheats!"
    }
    
    local tipLabel = Instance.new("TextLabel")
    tipLabel.Size = UDim2.new(1, -100, 0, 30)
    tipLabel.Position = UDim2.new(0, 50, 0.5, 380)
    tipLabel.BackgroundTransparency = 1
    tipLabel.Text = tips[math.random(1, #tips)]
    tipLabel.TextColor3 = colors.textSecondary
    tipLabel.TextScaled = true
    tipLabel.Font = Enum.Font.SourceSansItalic
    tipLabel.TextTransparency = 0.5
    tipLabel.Parent = container
    
    -- Simple rotation animation
    local rotation = 0
    connections.loadingAnim = RunService.Heartbeat:Connect(function(dt)
        rotation = rotation + 60 * dt
        waterDrop.Rotation = rotation % 360
    end)
    
    -- Loading sequence with realistic progress
    spawn(function()
        local steps = {
            {text = "Initializing Water Hub systems...", progress = 0.05, time = 0.3},
            {text = "Loading core modules...", progress = 0.15, time = 0.4},
            {text = "Setting up anticheat bypass...", progress = 0.25, time = 0.5},
            {text = "Configuring ESP systems...", progress = 0.35, time = 0.3},
            {text = "Preparing mobile controls...", progress = 0.45, time = 0.3},
            {text = "Activating God Mode protection...", progress = 0.55, time = 0.4},
            {text = "Loading user interface...", progress = 0.70, time = 0.3},
            {text = "Applying visual enhancements...", progress = 0.80, time = 0.3},
            {text = "Finalizing setup...", progress = 0.90, time = 0.4},
            {text = "Welcome to Water Hub!", progress = 1, time = 0.5}
        }
        
        -- Typewriter effect function
        local function typewrite(label, text, speed)
            label.Text = ""
            for i = 1, #text do
                label.Text = text:sub(1, i)
                wait(speed or 0.03)
            end
        end
        
        for _, step in ipairs(steps) do
            -- Update loading text with typewriter effect
            spawn(function()
                typewrite(loadingText, step.text, 0.02)
            end)
            
            -- Animate loading bar
            TweenService:Create(loadingBar, TweenInfo.new(step.time, Enum.EasingStyle.Quad), {
                Size = UDim2.new(step.progress, 0, 1, 0)
            }):Play()
            
            -- Update tip occasionally
            if math.random() > 0.5 then
                local newTip = tips[math.random(1, #tips)]
                tipLabel.Text = newTip
            end
            
            wait(step.time)
        end
        
        wait(0.5)
        
        -- Fade out animation
        TweenService:Create(container, TweenInfo.new(0.5), {
            BackgroundTransparency = 1
        }):Play()
        
        TweenService:Create(bg, TweenInfo.new(0.5), {
            BackgroundTransparency = 1
        }):Play()
        
        wait(0.5)
        
        loadingGui:Destroy()
        if connections.loadingAnim then
            connections.loadingAnim:Disconnect()
        end
        
        -- Create main GUI
        createMainGui()
        
        -- Enable God Mode and show notification
        wait(0.1)
        toggleGodMode(true)
        
        StarterGui:SetCore("SendNotification", {
            Title = "Water Hub",
            Text = "Successfully loaded! God Mode activated.",
            Icon = "rbxassetid://6034684930",
            Duration = 5
        })
    end)
end

-- Character respawn handler with state restoration
local function onCharacterAdded(character)
    wait(0.5)
    
    -- Show notification
    StarterGui:SetCore("SendNotification", {
        Title = "Water Hub",
        Text = "Restoring features after respawn...",
        Duration = 2
    })
    
    -- Reapply active states
    local restoredFeatures = {}
    
    if states.godMode then 
        toggleGodMode(true)
        table.insert(restoredFeatures, "God Mode")
    end
    
    if states.speedBoost then 
        toggleSpeedBoost(true)
        table.insert(restoredFeatures, "Speed Boost")
    end
    
    if states.infiniteJump then 
        toggleInfiniteJump(true)
        table.insert(restoredFeatures, "Infinite Jump")
    end
    
    if states.float then 
        toggleFloat(true)
        table.insert(restoredFeatures, "Float")
    end
    
    if states.noclip then 
        toggleNoclip(true)
        table.insert(restoredFeatures, "Noclip")
    end
    
    if states.fly then 
        toggleFly(true)
        table.insert(restoredFeatures, "Fly")
    end
    
    if #restoredFeatures > 0 then
        StarterGui:SetCore("SendNotification", {
            Title = "Water Hub",
            Text = "Restored: " .. table.concat(restoredFeatures, ", "),
            Duration = 3
        })
    end
end

-- Enhanced cleanup function
local function cleanup()
    -- Disable all connections
    for name, connection in pairs(connections) do
        if connection then
            connection:Disconnect()
        end
    end
    connections = {}
    
    -- Remove ESP
    for player, objects in pairs(espObjects) do
        for _, obj in pairs(objects) do
            if obj then obj:Destroy() end
        end
    end
    espObjects = {}
    
    -- Remove physics objects
    if floatVelocity then floatVelocity:Destroy() end
    if flyPlatform then flyPlatform:Destroy() end
    
    -- Remove character connections
    if characterAddedConnection then
        characterAddedConnection:Disconnect()
    end
    
    -- Remove GUIs
    for _, gui in pairs(openGuis) do
        if gui and gui.Parent then
            gui:Destroy()
        end
    end
    
    if waterHubGui then waterHubGui:Destroy() end
    if minimizedIcon then minimizedIcon:Destroy() end
    if loadingGui then loadingGui:Destroy() end
    if touchGui then touchGui:Destroy() end
    if downButton then downButton:Destroy() end
end

-- Player removing handler
Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        cleanup()
    end
end)

-- Setup character respawn handler
characterAddedConnection = player.CharacterAdded:Connect(onCharacterAdded)

-- Initialize Water Hub
local success, err = pcall(function()
    -- Setup bypass first
    setupBypass()
    
    -- Show loading screen
    createLoadingScreen()
end)

if not success then
    warn("Water Hub initialization error:", err)
    StarterGui:SetCore("SendNotification", {
        Title = "Water Hub Error",
        Text = "Failed to initialize. Please try again.",
        Duration = 5
    })
end
