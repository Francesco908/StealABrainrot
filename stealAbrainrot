local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "‚ú® Ultimate Combat Hub v3.1",
    LoadingTitle = "Loading Ultimate Hub...",
    LoadingSubtitle = "by OnlyRobloxScript",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "UltimateScriptHub",
        FileName = "Config"
    },
    KeySystem = false,
    KeySettings = {
        Title = "Auth Required",
        Subtitle = "Enter key to continue",
        Note = "Join Discord for key",
        FileName = "Key",
        SaveKey = true,
        Key = "brainrot"
    }
})

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local VirtualUser = game:GetService("VirtualUser")

-- Variables
local player = Players.LocalPlayer
local originalWalkSpeed = 16
local walkSpeed = 16
local speedBoostActive = false
local killAuraActive = false
local killAuraRange = 25
local killAuraCooldown = 0.3
local killAuraLoop
local infiniteJumpEnabled = false
local flyEnabled = false
local flySpeed = 50
local flying = false
local bodyVelocity
local antiFreezeLoop
local antiAFKConnection
local espConnection
local playersESP = {}
local lastKeyPress = 0
local lastEPress = 0

-- Movable Teleport GUI
local function createTeleportGUI()
    local teleportGUI = Instance.new("ScreenGui")
    teleportGUI.Name = "TeleportGUI"
    teleportGUI.Parent = game:GetService("CoreGui")
    teleportGUI.ResetOnSpawn = false

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 200, 0, 120)
    frame.Position = UDim2.new(0.5, -100, 0.7, -60)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    frame.Visible = false
    frame.Parent = teleportGUI

    -- Add corner rounding
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
    title.Text = "Quick Teleport"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextScaled = true
    title.Parent = frame

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = title

    local skyBtn = Instance.new("TextButton")
    skyBtn.Size = UDim2.new(0.9, 0, 0, 30)
    skyBtn.Position = UDim2.new(0.05, 0, 0.35, 0)
    skyBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 200)
    skyBtn.Text = "üöÄ Go to Sky (Y:256)"
    skyBtn.Font = Enum.Font.Gotham
    skyBtn.TextColor3 = Color3.white
    skyBtn.TextScaled = true
    skyBtn.Parent = frame

    local skyCorner = Instance.new("UICorner")
    skyCorner.CornerRadius = UDim.new(0, 4)
    skyCorner.Parent = skyBtn

    local downBtn = Instance.new("TextButton")
    downBtn.Size = UDim2.new(0.9, 0, 0, 30)
    downBtn.Position = UDim2.new(0.05, 0, 0.65, 0)
    downBtn.BackgroundColor3 = Color3.fromRGB(200, 70, 70)
    downBtn.Text = "‚¨áÔ∏è Go Down (Y:-50)"
    downBtn.Font = Enum.Font.Gotham
    downBtn.TextColor3 = Color3.white
    downBtn.TextScaled = true
    downBtn.Parent = frame

    local downCorner = Instance.new("UICorner")
    downCorner.CornerRadius = UDim.new(0, 4)
    downCorner.Parent = downBtn

    -- Button functions
    skyBtn.MouseButton1Click:Connect(function()
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(
                char.HumanoidRootPart.Position.X,
                256,
                char.HumanoidRootPart.Position.Z
            )
        end
    end)

    downBtn.MouseButton1Click:Connect(function()
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(
                char.HumanoidRootPart.Position.X,
                -50,
                char.HumanoidRootPart.Position.Z
            )
        end
    end)

    return frame
end

local teleportFrame = createTeleportGUI()

-- Main Tab
local MainTab = Window:CreateTab("üè† Main", 6022668888)

-- Teleportation Section
local TeleportSection = MainTab:CreateSection("Teleportation")
MainTab:CreateButton({
    Name = "‚ú® Show Teleport GUI",
    Callback = function()
        teleportFrame.Visible = not teleportFrame.Visible
        Rayfield:Notify({
            Title = teleportFrame.Visible and "Teleport GUI Shown" or "Teleport GUI Hidden",
            Content = teleportFrame.Visible and "Drag the window to move it" or "GUI is now hidden",
            Duration = 3,
            Image = 6022668888
        })
    end,
})

-- Movement Section
local MovementSection = MainTab:CreateSection("Movement")

-- Initialize original walkspeed
local function getOriginalWalkSpeed()
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        return player.Character.Humanoid.WalkSpeed
    end
    return 16
end

originalWalkSpeed = getOriginalWalkSpeed()

MainTab:CreateSlider({
    Name = "üèÉ‚Äç‚ôÇÔ∏è Walk Speed",
    Range = {16, 200},
    Increment = 5,
    Suffix = "studs",
    CurrentValue = 16,
    Flag = "WalkSpeed",
    Callback = function(Value)
        walkSpeed = Value
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character.Humanoid.WalkSpeed = Value
        end
    end,
})

MainTab:CreateToggle({
    Name = "‚ö° Speed Boost (Hold Shift)",
    CurrentValue = false,
    Flag = "SpeedBoost",
    Callback = function(Value)
        speedBoostActive = Value
        if Value then
            Rayfield:Notify({
                Title = "Speed Boost Enabled",
                Content = "Hold Shift to activate boost",
                Duration = 3,
                Image = 6022668888
            })
        else
            if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                player.Character.Humanoid.WalkSpeed = walkSpeed
            end
        end
    end,
})

-- Server Actions Section
local ServerSection = MainTab:CreateSection("Server Actions")

local function serverHop()
    local success, result = pcall(function()
        local API = "https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Desc&limit=100"
        local GameId = game.PlaceId
        
        local function getServers(cursor)
            local url = API:format(GameId)
            if cursor then
                url = url .. "&cursor=" .. cursor
            end
            
            local response = game:HttpGet(url)
            return HttpService:JSONDecode(response)
        end
        
        local servers = getServers()
        local validServers = {}
        
        for _, server in pairs(servers.data) do
            if server.playing < server.maxPlayers and server.id ~= game.JobId then
                table.insert(validServers, server)
            end
        end
        
        if #validServers > 0 then
            local randomServer = validServers[math.random(1, #validServers)]
            TeleportService:TeleportToPlaceInstance(GameId, randomServer.id)
        else
            -- Fallback to regular teleport
            TeleportService:Teleport(GameId)
        end
    end)
    
    if not success then
        TeleportService:Teleport(game.PlaceId)
    end
end

MainTab:CreateButton({
    Name = "üîÑ Server Hop",
    Callback = function()
        Rayfield:Notify({
            Title = "Server Hop",
            Content = "Finding new server...",
            Duration = 3,
            Image = 6022668888
        })
        serverHop()
    end,
})

MainTab:CreateButton({
    Name = "üîÅ Rejoin Server",
    Callback = function()
        TeleportService:Teleport(game.PlaceId, player)
    end,
})

MainTab:CreateButton({
    Name = "üö™ Exit Game",
    Callback = function()
        game:Shutdown()
    end,
})

-- Combat Tab
local CombatTab = Window:CreateTab("‚öîÔ∏è Combat", 6022668888)

CombatTab:CreateSection("Kill Aura")

local function getClosestEnemy()
    local closest = nil
    local shortestDistance = killAuraRange
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    
    for _, target in pairs(Players:GetPlayers()) do
        if target ~= player and target.Character then
            local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
            local targetHumanoid = target.Character:FindFirstChildOfClass("Humanoid")
            
            if targetHRP and targetHumanoid and targetHumanoid.Health > 0 then
                local distance = (playerPos - targetHRP.Position).Magnitude
                if distance < shortestDistance then
                    closest = target
                    shortestDistance = distance
                end
            end
        end
    end
    
    return closest
end

local function getBestWeapon()
    local bestWeapon = nil
    local highestDamage = 0
    
    for _, tool in pairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            local damage = tool:FindFirstChild("Damage")
            if damage and damage.Value > highestDamage then
                bestWeapon = tool
                highestDamage = damage.Value
            elseif not damage and not bestWeapon then
                bestWeapon = tool
            end
        end
    end
    
    return bestWeapon
end

CombatTab:CreateToggle({
    Name = "üíÄ Kill Aura",
    CurrentValue = false,
    Flag = "KillAura",
    Callback = function(Value)
        killAuraActive = Value
        
        if killAuraLoop then
            killAuraLoop:Disconnect()
            killAuraLoop = nil
        end
        
        if Value then
            killAuraLoop = RunService.Heartbeat:Connect(function()
                if not killAuraActive then return end
                
                local success, error = pcall(function()
                    local character = player.Character
                    if not character then return end
                    
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    
                    if not humanoidRootPart or not humanoid or humanoid.Health <= 0 then return end
                    
                    local target = getClosestEnemy()
                    if not target then return end
                    
                    local bestWeapon = getBestWeapon()
                    if not bestWeapon then return end
                    
                    -- Equip weapon if not already equipped
                    if not character:FindFirstChild(bestWeapon.Name) then
                        humanoid:EquipTool(bestWeapon)
                        wait(0.1)
                    end
                    
                    local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
                    if targetHRP then
                        -- Face target
                        local lookDirection = (targetHRP.Position - humanoidRootPart.Position).Unit
                        humanoidRootPart.CFrame = CFrame.lookAt(humanoidRootPart.Position, targetHRP.Position)
                        
                        -- Attack
                        bestWeapon:Activate()
                        wait(killAuraCooldown)
                    end
                end)
            end)
            
            Rayfield:Notify({
                Title = "Kill Aura Enabled",
                Content = "Attacking nearby enemies",
                Duration = 3,
                Image = 6022668888
            })
        else
            Rayfield:Notify({
                Title = "Kill Aura Disabled",
                Content = "Combat system offline",
                Duration = 3,
                Image = 6022668888
            })
        end
    end,
})

CombatTab:CreateSlider({
    Name = "üìè Kill Aura Range",
    Range = {5, 50},
    Increment = 1,
    Suffix = "studs",
    CurrentValue = 25,
    Flag = "AuraRange",
    Callback = function(Value)
        killAuraRange = Value
    end,
})

CombatTab:CreateSlider({
    Name = "‚è±Ô∏è Attack Cooldown",
    Range = {0.1, 1.5},
    Increment = 0.1,
    Suffix = "seconds",
    CurrentValue = 0.3,
    Flag = "AttackCooldown",
    Callback = function(Value)
        killAuraCooldown = Value
    end,
})

-- Helper Tab
local HelperTab = Window:CreateTab("üõ†Ô∏è Helper", 6022668888)

-- Anti-Cheats Section
local AntiCheatsSection = HelperTab:CreateSection("Anti-Cheats")

HelperTab:CreateToggle({
    Name = "‚ö†Ô∏è Anti Trap",
    CurrentValue = false,
    Flag = "AntiTrap",
    Callback = function(Value)
        Rayfield:Notify({
            Title = Value and "Anti Trap Enabled" or "Anti Trap Disabled",
            Content = Value and "Traps will be avoided" or "Traps can affect you",
            Duration = 3,
            Image = 6022668888
        })
    end,
})

HelperTab:CreateToggle({
    Name = "‚ùÑÔ∏è Anti Freeze",
    CurrentValue = false,
    Flag = "AntiFreeze",
    Callback = function(Value)
        if antiFreezeLoop then
            antiFreezeLoop:Disconnect()
            antiFreezeLoop = nil
        end
        
        if Value then
            antiFreezeLoop = RunService.Heartbeat:Connect(function()
                local success, error = pcall(function()
                    local char = player.Character
                    if char then
                        for _, part in pairs(char:GetChildren()) do
                            if part:IsA("BasePart") and part.Anchored then
                                part.Anchored = false
                            end
                        end
                    end
                end)
            end)
            
            Rayfield:Notify({
                Title = "Anti Freeze Enabled",
                Content = "Immune to freeze effects",
                Duration = 3,
                Image = 6022668888
            })
        else
            Rayfield:Notify({
                Title = "Anti Freeze Disabled",
                Content = "Can be frozen",
                Duration = 3,
                Image = 6022668888
            })
        end
    end,
})

HelperTab:CreateToggle({
    Name = "‚è±Ô∏è Anti AFK",
    CurrentValue = false,
    Flag = "AntiAFK",
    Callback = function(Value)
        if antiAFKConnection then
            antiAFKConnection:Disconnect()
            antiAFKConnection = nil
        end
        
        if Value then
            antiAFKConnection = player.Idled:Connect(function()
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end)
            
            Rayfield:Notify({
                Title = "Anti AFK Enabled",
                Content = "You won't be kicked for AFK",
                Duration = 3,
                Image = 6022668888
            })
        else
            Rayfield:Notify({
                Title = "Anti AFK Disabled",
                Content = "AFK detection active",
                Duration = 3,
                Image = 6022668888
            })
        end
    end,
})

-- Movement Section in Helper Tab
local HelperMovementSection = HelperTab:CreateSection("Movement")

HelperTab:CreateToggle({
    Name = "ü¶ò Infinite Jump",
    CurrentValue = false,
    Flag = "InfiniteJump",
    Callback = function(Value)
        infiniteJumpEnabled = Value
        if Value then
            Rayfield:Notify({
                Title = "Infinite Jump Enabled",
                Content = "Jump infinitely in air",
                Duration = 3,
                Image = 6022668888
            })
        else
            Rayfield:Notify({
                Title = "Infinite Jump Disabled",
                Content = "Normal jump restored",
                Duration = 3,
                Image = 6022668888
            })
        end
    end,
})

-- Fly system
local function setupFly()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    if bodyVelocity then
        bodyVelocity:Destroy()
    end
    
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = character.HumanoidRootPart
end

HelperTab:CreateToggle({
    Name = "‚úàÔ∏è Fly (Press E to toggle)",
    CurrentValue = false,
    Flag = "Fly",
    Callback = function(Value)
        flyEnabled = Value
        if not Value then
            if bodyVelocity then
                bodyVelocity:Destroy()
                bodyVelocity = nil
            end
            flying = false
        else
            setupFly()
        end
        
        if Value then
            Rayfield:Notify({
                Title = "Fly Enabled",
                Content = "Press E to toggle flight mode",
                Duration = 5,
                Image = 6022668888
            })
        else
            Rayfield:Notify({
                Title = "Fly Disabled",
                Content = "Flight mode deactivated",
                Duration = 3,
                Image = 6022668888
            })
        end
    end,
})

HelperTab:CreateSlider({
    Name = "‚úàÔ∏è Fly Speed",
    Range = {10, 150},
    Increment = 5,
    Suffix = "studs",
    CurrentValue = 50,
    Flag = "FlySpeed",
    Callback = function(Value)
        flySpeed = Value
    end,
})

-- ESP Tab
local ESPTab = Window:CreateTab("üëÅÔ∏è ESP", 6022668888)

local function createESP(targetPlayer)
    if playersESP[targetPlayer] then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = targetPlayer.Name .. "_ESP"
    highlight.OutlineColor = Color3.new(1, 0, 0)
    highlight.FillColor = Color3.new(1, 0, 0)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    playersESP[targetPlayer] = highlight
    
    local function attachESP(character)
        if character and highlight then
            highlight.Parent = character
            highlight.Adornee = character
        end
    end
    
    if targetPlayer.Character then
        attachESP(targetPlayer.Character)
    end
    
    local charAddedConnection = targetPlayer.CharacterAdded:Connect(attachESP)
    
    local charRemovingConnection = targetPlayer.CharacterRemoving:Connect(function()
        if highlight then
            highlight.Adornee = nil
            highlight.Parent = nil
        end
    end)
    
    -- Clean up on player leaving
    local leavingConnection = Players.PlayerRemoving:Connect(function(leavingPlayer)
        if leavingPlayer == targetPlayer then
            if highlight then
                highlight:Destroy()
                highlight = nil
            end
            if playersESP[targetPlayer] then
                playersESP[targetPlayer] = nil
            end
            charAddedConnection:Disconnect()
            charRemovingConnection:Disconnect()
            leavingConnection:Disconnect()
        end
    end)
end

ESPTab:CreateToggle({
    Name = "üë§ Player ESP",
    CurrentValue = false,
    Flag = "PlayerESP",
    Callback = function(Value)
        if espConnection then
            espConnection:Disconnect()
            espConnection = nil
        end
        
        if Value then
            -- Create ESP for existing players
            for _, targetPlayer in pairs(Players:GetPlayers()) do
                if targetPlayer ~= player then
                    createESP(targetPlayer)
                end
            end
            
            -- Setup connection for new players
            espConnection = Players.PlayerAdded:Connect(function(newPlayer)
                if newPlayer ~= player then
                    createESP(newPlayer)
                end
            end)
            
            Rayfield:Notify({
                Title = "Player ESP Enabled",
                Content = "Players highlighted in red",
                Duration = 3,
                Image = 6022668888
            })
        else
            -- Remove all ESP
            for targetPlayer, highlight in pairs(playersESP) do
                if highlight then
                    highlight:Destroy()
                end
            end
            playersESP = {}
            
            Rayfield:Notify({
                Title = "Player ESP Disabled",
                Content = "Player highlights removed",
                Duration = 3,
                Image = 6022668888
            })
        end
    end,
})

-- Buy Tab
local BuyTab = Window:CreateTab("üõí Buy", 6022668888)
BuyTab:CreateSection("Premium Features")
BuyTab:CreateParagraph({
    Title = "üí∞ Premium Features",
    Content = "Premium features are coming soon! Stay tuned for exclusive content and advanced tools."
})

-- Pets Tab
local PetsTab = Window:CreateTab("üêæ Pets", 6022668888)
PetsTab:CreateSection("Pet System")
PetsTab:CreateParagraph({
    Title = "üêæ Pet Collection",
    Content = "Pet features are in development! Soon you'll be able to collect and manage pets."
})

-- Input handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    -- Infinite Jump
    if input.KeyCode == Enum.KeyCode.Space and infiniteJumpEnabled then
        local currentTime = tick()
        if currentTime - lastKeyPress > 0.1 then
            lastKeyPress = currentTime
            local character = player.Character
            if character and character:FindFirstChildOfClass("Humanoid") then
                character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
    
    -- Fly toggle
    if input.KeyCode == Enum.KeyCode.E and flyEnabled then
        local currentTime = tick()
        if currentTime - lastEPress > 0.3 then
            lastEPress = currentTime
            flying = not flying
            if bodyVelocity then
                bodyVelocity.MaxForce = flying and Vector3.new(9e9, 9e9, 9e9) or Vector3.new(0, 0, 0)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end
end)

-- Main runtime loop
RunService.Heartbeat:Connect(function()
    local success, error = pcall(function()
        -- Speed Boost
        if speedBoostActive and player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                    humanoid.WalkSpeed = walkSpeed * 2
                else
                    humanoid.WalkSpeed = walkSpeed
                end
            end
        end
        
        -- Anti Trap
        if HelperTab:Get("AntiTrap") and HelperTab:Get("AntiTrap").CurrentValue then
            for _, part in pairs(workspace:GetDescendants()) do
                if part:IsA("BasePart") and part.Name:lower():find("trap") then
                    part.CanCollide = false
                end
            end
        end
        
        -- Fly Controls
        if flyEnabled and bodyVelocity and player.Character and flying then
            local rootPart = player.Character.HumanoidRootPart
            local camera = workspace.CurrentCamera
            
            if rootPart and camera then
                local moveDirection = Vector3.new(0, 0, 0)
                
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveDirection = moveDirection + Vector3.new(0, 1, 0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                    moveDirection = moveDirection + Vector3.new(0, -1, 0)
                end
                
                if moveDirection.Magnitude > 0 then
                    bodyVelocity.Velocity = moveDirection.Unit * flySpeed
                else
                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                end
            end
        end
    end)
end)

-- Character respawn handling
player.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart")
    
    -- Restore settings
    wait(1)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = walkSpeed
        originalWalkSpeed = humanoid.WalkSpeed
    end
    
    -- Recreate fly if enabled
    if flyEnabled then
        setupFly()
    end
end)

-- Initialize
Rayfield:LoadConfiguration()
Rayfield:SetWatermark("‚ú® Ultimate Combat Hub v3.1 | " .. os.date("%X"))
Rayfield:SetWatermarkVisibility(true)
Rayfield:SetKeybind(Enum.KeyCode.RightControl)

Rayfield:Notify({
    Title = "Hub Loaded Successfully!",
    Content = "All features activated and ready to use",
    Duration = 5,
    Image = 6022668888
})

print("Ultimate Combat Hub v3.1 loaded successfully with all fixes applied!")
