-- Variabili modificate
local FlightHeight = 30  -- Ridotta l'altezza di volo
local FlightSpeed = 28   -- Velocità ridotta per sembrare più naturale

-- Funzione goBase completamente rivista
local function goBase()
    if not savedBase or isActive then 
        notify("Error", "Set base position first or teleport in progress", 3)
        return 
    end
    
    local character = Player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then 
        notify("Error", "Character not found", 3)
        return 
    end
    
    local rootPart = character.HumanoidRootPart
    local humanoid = character:FindFirstChild("Humanoid")
    
    isActive = true
    notify("Flight System", "Starting flight sequence...", 3)
    
    -- FASE 1: Ascensione graduale invece di teleport immediato
    local currentPos = rootPart.Position
    local ascentTween = TweenService:Create(
        rootPart,
        TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {CFrame = CFrame.new(currentPos.X, currentPos.Y + FlightHeight, currentPos.Z)}
    )
    ascentTween:Play()
    
    -- Creiamo gli oggetti fisici per il volo
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    bodyVelocity.P = 1200
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    
    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(20000, 20000, 20000)
    bodyGyro.P = 1800
    bodyGyro.CFrame = rootPart.CFrame
    
    -- Funzione per ripristinare lo stato naturale
    local function restoreNaturalState()
        if bodyVelocity then bodyVelocity:Destroy() end
        if bodyGyro then bodyGyro:Destroy() end
        
        if humanoid then
            humanoid.PlatformStand = false
            -- Simuliamo un atterraggio naturale
            humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
            task.wait(0.2)
            humanoid:ChangeState(Enum.HumanoidStateType.Landed)
        end
        
        isActive = false
    end

    ascentTween.Completed:Connect(function()
        -- FASE 2: Volo verso la base con altezza fissa
        bodyVelocity.Parent = rootPart
        bodyGyro.Parent = rootPart
        
        local startTime = os.time()
        
        local flightConnection
        flightConnection = RunService.Heartbeat:Connect(function()
            if not rootPart or not rootPart.Parent then
                flightConnection:Disconnect()
                restoreNaturalState()
                return
            end
            
            -- Calcola direzione verso la base (mantenendo altezza fissa)
            local targetPos = Vector3.new(savedBase.X, savedBase.Y + FlightHeight, savedBase.Z)
            local direction = (targetPos - rootPart.Position).Unit
            
            -- Rallentamento progressivo quando si avvicina alla destinazione
            local distance = (Vector3.new(rootPart.Position.X, 0, rootPart.Position.Z) - Vector3.new(savedBase.X, 0, savedBase.Z)).Magnitude
            local dynamicSpeed = math.min(FlightSpeed, distance * 0.7)
            
            -- Imposta velocità e rotazione
            bodyVelocity.Velocity = direction * dynamicSpeed
            bodyGyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + direction)
            
            -- Controlla se siamo arrivati
            if distance < 15 or os.time() - startTime > 45 then
                flightConnection:Disconnect()
                
                -- FASE 3: Discesa fluida con simulazione gravità
                local descendTween = TweenService:Create(
                    rootPart,
                    TweenInfo.new(1.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {CFrame = CFrame.new(savedBase.X, savedBase.Y + 4, savedBase.Z)}
                )
                descendTween:Play()
                
                descendTween.Completed:Connect(function()
                    -- Piccolo rimbalzo finale per simulare l'atterraggio
                    local bounceTween = TweenService:Create(
                        rootPart,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {CFrame = CFrame.new(savedBase)}
                    )
                    bounceTween:Play()
                    
                    bounceTween.Completed:Connect(restoreNaturalState)
                    notify("Flight System", "Arrived at base location!", 3)
                end)
            end
        end)
    end)
end
