-- main.lua
-- Entry point for setting up a simple UI using Fluent for Roblox

-- Fetch and initialize Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Create a new window
local Window = Fluent:Window({
    Title = "Test UI",
    Size = UDim2.new(0, 400, 0, 300),
    Theme = "Dark",
})

-- Create a settings tab
local SettingsTab = Window:Tab("Settings")

-- Add a toggle setting
local exampleToggle = SettingsTab:Toggle({
    Name = "Example Toggle",
    Default = false,
    Description = "Enable or disable the example feature",
    Callback = function(state)
        print("Example Toggle state:", state)
    end,
})

-- Create a main tab for actions
local MainTab = Window:Tab("Main")

-- Add a button to the main tab
MainTab:Button({
    Name = "Test Button",
    Description = "Press to run test action",
    Callback = function()
        print("Test Button pressed!")
        -- Example: toggle the setting programmatically
        exampleToggle:Set(not exampleToggle:Get())
        print("Toggle is now", exampleToggle:Get())
    end,
})

-- Finalize and display the window
Window:Display()

-- ==== Minimized Restore Functionality ====
-- Create a restore icon that appears when window is hidden
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

local restoreIcon = Instance.new("ImageButton")
restoreIcon.Name = "RestoreIcon"
restoreIcon.Size = UDim2.new(0, 50, 0, 50)
restoreIcon.Position = UDim2.new(1, -60, 1, -60)
restoreIcon.Image = "rbxassetid://123456789" -- Sostituisci con l'ID immagine desiderata
restoreIcon.BackgroundTransparency = 1
restoreIcon.Visible = false
restoreIcon.Parent = playerGui

-- Function to restore window
local function restoreWindow()
    Window:Display()
end

-- Bind left control key to restore
Fluent:BindKey(Enum.KeyCode.LeftControl, function()
    if not Window:IsVisible() then
        restoreWindow()
    end
end)

-- Show or hide the icon based on window visibility each frame
RunService.RenderStepped:Connect(function()
    -- assumes Fluent Window API provides IsVisible()
    local hidden = not Window:IsVisible()
    restoreIcon.Visible = hidden
end)

-- Click on the icon restores the window
restoreIcon.MouseButton1Click:Connect(function()
    restoreWindow()
end)
