-- Main Bypass Rayfield UI Script
-- Script for Steal A Brainrot
-- by ZNFPRO

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")
local defaultSpeed = humanoid.WalkSpeed
local savedPosition = nil

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local Window = Rayfield:CreateWindow({
    Name = "Main Bypass",
    LoadingTitle = "Loading Script for Steal A Brainrot...",
    LoadingSubtitle = "by ZNFPRO",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MainBypass",
        FileName = "Config"
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false,
})

local Tab = Window:CreateTab("Main Features", 4483362458) -- icona blu (esempio)
local NoClipTab = Window:CreateTab("No Clip", 4483362458) -- stessa icona per coerenza

-- Speed Boost +30%
Tab:CreateToggle({
    Name = "Speed Boost +30%",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            humanoid.WalkSpeed = defaultSpeed * 1.3
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "Speed Boost activated!",
                Duration = 3,
            })
        else
            humanoid.WalkSpeed = defaultSpeed
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "Speed Boost deactivated!",
                Duration = 3,
            })
        end
    end,
})

-- Set Teleport Point
Tab:CreateButton({
    Name = "üìç Set Teleport Point",
    Callback = function()
        character = player.Character or player.CharacterAdded:Wait()
        hrp = character:WaitForChild("HumanoidRootPart")
        savedPosition = hrp.CFrame
        Rayfield:Notify({
            Title = "Script for Steal A Brainrot",
            Content = "Teleport point saved!",
            Duration = 3,
        })
    end,
})

-- NoClip helper functions
local function enableNoClip()
    local canClip = true
    local connection
    connection = RunService.Stepped:Connect(function()
        if canClip and character and character:FindFirstChild("HumanoidRootPart") then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        else
            connection:Disconnect()
        end
    end)
    return function() canClip = false end
end

-- TP with NoClip
Tab:CreateButton({
    Name = "üöÄ Teleport To Point (NoClip Bypass)",
    Callback = function()
        if savedPosition then
            character = player.Character or player.CharacterAdded:Wait()
            hrp = character:WaitForChild("HumanoidRootPart")
            -- Activate NoClip before teleport
            local disableNoClip = enableNoClip()
            local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = savedPosition})
            tween:Play()
            tween.Completed:Wait()
            -- Disable NoClip after teleport
            disableNoClip()
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "Teleported with NoClip bypass!",
                Duration = 3,
            })
        else
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "No teleport point saved!",
                Duration = 3,
            })
        end
    end,
})

-- NoClip Versions

-- NoClip v1: Basic, disables collisions every frame
local noClipConnectionV1
NoClipTab:CreateToggle({
    Name = "NoClip v1 (Basic)",
    CurrentValue = false,
    Callback = function(value)
        if value then
            noClipConnectionV1 = RunService.Stepped:Connect(function()
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end)
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "NoClip v1 enabled!",
                Duration = 3,
            })
        else
            if noClipConnectionV1 then
                noClipConnectionV1:Disconnect()
                noClipConnectionV1 = nil
                -- Restore collisions
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
                Rayfield:Notify({
                    Title = "Script for Steal A Brainrot",
                    Content = "NoClip v1 disabled!",
                    Duration = 3,
                })
            end
        end
    end,
})

-- NoClip v2: Basic + Humanoid PlatformStand to prevent physics knockback
local noClipConnectionV2
NoClipTab:CreateToggle({
    Name = "NoClip v2 (PlatformStand)",
    CurrentValue = false,
    Callback = function(value)
        if value then
            humanoid.PlatformStand = true
            noClipConnectionV2 = RunService.Stepped:Connect(function()
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end)
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "NoClip v2 enabled!",
                Duration = 3,
            })
        else
            humanoid.PlatformStand = false
            if noClipConnectionV2 then
                noClipConnectionV2:Disconnect()
                noClipConnectionV2 = nil
            end
            -- Restore collisions
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "NoClip v2 disabled!",
                Duration = 3,
            })
        end
    end,
})

-- NoClip v3: Sets Humanoid state to 'Flying' + disables collisions
local noClipConnectionV3
NoClipTab:CreateToggle({
    Name = "NoClip v3 (Flying State)",
    CurrentValue = false,
    Callback = function(value)
        if value then
            humanoid:ChangeState(Enum.HumanoidStateType.Flying)
            noClipConnectionV3 = RunService.Stepped:Connect(function()
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end)
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "NoClip v3 enabled!",
                Duration = 3,
            })
        else
            humanoid:ChangeState(Enum.HumanoidStateType.GettingUp) -- revert to normal
            if noClipConnectionV3 then
                noClipConnectionV3:Disconnect()
                noClipConnectionV3 = nil
            end
            -- Restore collisions
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            Rayfield:Notify({
                Title = "Script for Steal A Brainrot",
                Content = "NoClip v3 disabled!",
                Duration = 3,
            })
        end
    end,
})

